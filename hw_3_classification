{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Alexey-Shkotov/ML_homeworks/blob/main/hw_3_classification\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LTlmjXExP75I"
      },
      "source": [
        "# Машинное обучение, ФКН ВШЭ\n",
        "\n",
        "## Практическое задание 4. Классификация"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kH11bAAV2SoV"
      },
      "source": [
        "### Общая информация\n",
        "Дата выдачи: 09.11.2023\n",
        "\n",
        "Мягкий дедлайн: 22.11.2023\n",
        "\n",
        "Жесткий дедлайн: 26.11.2023"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "iWjJuhqS3Ucc"
      },
      "source": [
        "### О задании\n",
        "\n",
        "В этом задании вы:\n",
        "- ознакомитесь с тем, что происходит \"внутри\" метода опорных векторов и логистической регрессии\n",
        "- познакомитесь с калибровкой вероятности\n",
        "- изучите методы трансформации переменных и методы отбора признаков\n",
        "- попробуете оценить экономический эффект модели\n",
        "\n",
        "----\n",
        "\n",
        "#### Самостоятельная оценка результатов\n",
        "\n",
        "Для удобства проверки, исходя из набора решенных задач, посчитайте свою максимальную оценку.\n",
        "\n",
        "**Оценка**:"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Or0r6z5v1Mmt"
      },
      "source": [
        "### Оценивание и штрафы"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CecLXG_w3zs0"
      },
      "source": [
        "Каждая из задач имеет определенную «стоимость» (указана в скобках около задачи). Максимально допустимая оценка за работу — 10 баллов.\n",
        "\n",
        "Сдавать задание после указанного жёсткого дедлайна нельзя. При выставлении неполного балла за задание в связи с наличием ошибок на усмотрение проверяющего предусмотрена возможность исправить работу на указанных в ответном письме условиях.\n",
        "\n",
        "Задание выполняется самостоятельно. «Похожие» решения считаются плагиатом и все задействованные студенты (в том числе те, у кого списали) не могут получить за него больше 0 баллов (подробнее о плагиате см. на странице курса). Если вы нашли решение какого-то из заданий (или его часть) в открытом источнике, необходимо указать ссылку на этот источник в отдельном блоке в конце вашей работы (скорее всего вы будете не единственным, кто это нашел, поэтому чтобы исключить подозрение в плагиате, необходима ссылка на источник).\n",
        "\n",
        "Неэффективная реализация кода может негативно отразиться на оценке."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eMwMhTpA1MwR"
      },
      "source": [
        "### Формат сдачи"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "O5qs8FC_35h7"
      },
      "source": [
        "Для сдачи задания переименуйте получившийся файл *.ipynb в соответствии со следующим форматом: homework-practice-04-linclass-__Username__.ipynb, где Username — ваша фамилия и имя на латинице именно в таком порядке (например, homework-practice-04-linclass-__IvanovIvan__.ipynb)."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "KGWDDNDyP75O"
      },
      "source": [
        "# Часть 1. SVM, LR и калибровка вероятностей (2 балла + 0.5 бонус)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "KyqoX1BNP75N"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "\n",
        "pd.set_option('display.max_rows', 100)\n",
        "pd.set_option('display.max_columns', 100)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xvhLtt4OP75Q"
      },
      "source": [
        "#### __Задание 1.1  Сравнение методов__ (0.5 балла)\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LZw2aOq9P75O"
      },
      "source": [
        "Сгенерируем синтетические данные."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "mqkczFrQP75P"
      },
      "outputs": [],
      "source": [
        "from sklearn.datasets import make_classification\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# фиксируем random_state для воспроизводимости результатов\n",
        "X, y = make_classification(\n",
        "    n_samples=10000, n_features=10, n_informative=5, n_redundant=5, random_state=42)\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BdPx-lQbtaRe"
      },
      "source": [
        "__Случайный классификатор__\n",
        "\n",
        "Для начала зададим самую простую модель, которая на каждом объекте выдаёт случайный ответ. По тестовой выборке вычислим AUC-ROC, AUC-PR."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5gcSglAOjVn-",
        "outputId": "8a5f8a7c-a265-4904-bbc1-11b3daafb07a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.5, 0.5, 0.5, ..., 0.5, 0.5, 0.5])"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ],
      "source": [
        "from sklearn.dummy import DummyClassifier\n",
        "random_classifier = DummyClassifier(strategy='uniform', random_state=42).fit(X_train, y_train)\n",
        "y_random = random_classifier.predict_proba(X_test)[:,1]\n",
        "y_random"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bUhBXPre7jNi"
      },
      "source": [
        "**Вопрос:** решаем задачу бинарной классификации, но y\\_random содержит какие-то дробные числа, а не 0/1. Почему?\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RpIDxyuHH1bt"
      },
      "source": [
        "**Ответ:**  дробные числа - оценки классификатором вероятностей принадлежности данного объекта к положительному (первому) классу, которые нам предсказывает `random_classifier` методом `predict_proba`."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LnmZFwEYDVqx"
      },
      "source": [
        "*Ниже приведен **пример** работы* со встроенными функциями `sklearn` для отрисовки ROC и PR кривых, сохранения метрик. Пайплайн можно изменять как вам удобно."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "gNJLhNj7DkLx"
      },
      "outputs": [],
      "source": [
        "from sklearn.metrics import auc\n",
        "from sklearn.metrics import average_precision_score\n",
        "from sklearn.metrics import precision_recall_curve\n",
        "from sklearn.metrics import PrecisionRecallDisplay\n",
        "\n",
        "from sklearn.metrics import roc_auc_score\n",
        "from sklearn.metrics import RocCurveDisplay"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 559
        },
        "id": "-WHELzN6_fsQ",
        "outputId": "ec37cd7b-b355-4bf6-f06c-2f2578078688"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Random Classifier metrics\n",
            "AUC-PR: 0.75283\n",
            "AUC-ROC: 0.50000\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1100x500 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "def depict_pr_roc(y_true, y_pred, classifier_name='Some Classifier', ax=None):\n",
        "  if ax is None:\n",
        "    fig, ax = plt.subplots(1, 2, figsize=(11, 5))\n",
        "\n",
        "  print(classifier_name, 'metrics')\n",
        "  PrecisionRecallDisplay.from_predictions(y_true, y_pred, ax=ax[0], name=classifier_name, drawstyle=\"default\") # добавляем drawstyle=\"default\", чтобы считать интерполированную версию кривой, чтобы она соответствовала значению AUC-PR и была, как в описании с лекции\n",
        "  precision, recall, _ = precision_recall_curve(y_true, y_pred)\n",
        "  print('AUC-PR: %.5f' % auc(recall, precision))\n",
        "  ax[0].set_title(\"PRC\")\n",
        "  ax[0].set_ylim(0, 1.1)\n",
        "\n",
        "  RocCurveDisplay.from_predictions(y_true, y_pred, ax=ax[1], name=classifier_name)\n",
        "  print('AUC-ROC: %.5f' % roc_auc_score(y_true, y_pred))\n",
        "  ax[1].set_title(\"ROC\")\n",
        "  ax[1].set_ylim(0, 1.1)\n",
        "\n",
        "  plt.tight_layout()\n",
        "  plt.legend()\n",
        "\n",
        "\n",
        "depict_pr_roc(y_test, y_random, 'Random Classifier')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81
        },
        "id": "pSugCdAAEF2z",
        "outputId": "2831b9ef-dd49-4171-dfd0-820909fedabb"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                     AUC_PR  AUC_ROC  reg_const\n",
              "Random Classifier  0.752833      0.5        0.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-23fdc9ea-be29-4db4-8580-834172b72912\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AUC_PR</th>\n",
              "      <th>AUC_ROC</th>\n",
              "      <th>reg_const</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Random Classifier</th>\n",
              "      <td>0.752833</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-23fdc9ea-be29-4db4-8580-834172b72912')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-23fdc9ea-be29-4db4-8580-834172b72912 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-23fdc9ea-be29-4db4-8580-834172b72912');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_metrics",
              "summary": "{\n  \"name\": \"df_metrics\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"AUC_PR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.7528333333333334,\n        \"max\": 0.7528333333333334,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.7528333333333334\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AUC_ROC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.5,\n        \"max\": 0.5,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reg_const\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "# dataframe для сравнения\n",
        "# методов классификации по метрикам\n",
        "df_metrics = pd.DataFrame(columns=['AUC_PR', 'AUC_ROC', 'reg_const'])\n",
        "precision, recall, _ = precision_recall_curve(y_test, y_random)\n",
        "  # добавление очередной строки с характеристиками метода\n",
        "df_metrics.loc['Random Classifier'] = [\n",
        "      auc(recall, precision),\n",
        "      roc_auc_score(y_test, y_random),\n",
        "      0\n",
        "]\n",
        "\n",
        "  # по аналогии результаты следующих экспериментов можно будет собрать в табличку\n",
        "df_metrics"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9IwDobmQtW2P"
      },
      "source": [
        "__Support Vector Machine (Linear Kernel)__\n",
        "\n",
        "Обучите метод опорных векторов.\n",
        "\n",
        "На занятиях мы проходили линейный вариант без ядрового перехода, что соответствует линейному ядру (`LinearSVC` или же `SVC(kernel='linear')` в `sklearn.svm`).\n",
        "\n",
        "Подберите параметр регуляризации `C` с точки зрения AUC-PR (можете воспользоваться кросс-валидацией или отделить валидационную выборку от обучающей).\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Воспользуемся `SVC` с `kernel='linear'`, так как в отличие от `LinearSVC`, в `SVC` можно не задавать ограничение на максимальное количество итераций алгоритма => он обязан будет сходиться => результат по метрикам будет точнее.\n",
        "\n",
        "SVM будет предсказывать классы, как и предполагается в классическом его варианте. Тогда будем использовать для построения AUC-ROC и AUC-PR отмасштабированные через минимум-максимум в $[0, 1]$-отрезок значения `decision_function` SVM'а, которые пропорциональны расстояниям между объектом и разделяющей гиперплоскостью со знаком (тем самым это будет некоторым аналогом вероятностей для SVM).\n",
        "\n",
        "Будем подбирать параметр `C` по валидационной выборке."
      ],
      "metadata": {
        "id": "t1uOS25EjIg3"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "eyjF-qc3P75Q",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0700641e-9416-44b6-8442-69c778ade769"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.03125, 0.0625 , 0.125  , 0.25   , 0.5    , 1.     , 2.     ,\n",
              "       4.     , 8.     ])"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "np.logspace(-5, 3, 9 , base = 2.)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train_no_val, X_val, y_train_no_val, y_val = train_test_split(X_train, y_train, test_size = 0.2, random_state = 42)"
      ],
      "metadata": {
        "id": "anDemba3jUEN"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import GridSearchCV\n",
        "from sklearn.svm import SVC\n",
        "\n",
        "C_params = np.logspace(-5, 3, 9, base=2.)\n",
        "\n",
        "best_C = None\n",
        "best_auc_pr = 0.0\n",
        "\n",
        "for C in C_params:\n",
        "    svm = SVC(C = C, kernel=\"linear\")\n",
        "    svm.fit(X_train_no_val, y_train_no_val)\n",
        "    curr_decision_pred = svm.decision_function(X_val)\n",
        "    curr_scaled_pred = (curr_decision_pred - curr_decision_pred.min()) / (curr_decision_pred.max() - curr_decision_pred.min())\n",
        "    curr_precision, curr_recall, _ = precision_recall_curve(y_val, curr_scaled_pred)\n",
        "    curr_auc_pr = auc(curr_recall, curr_precision)\n",
        "    print(\"C: {0}, AUC-PR: {1}\".format(C, curr_auc_pr))\n",
        "    if curr_auc_pr > best_auc_pr:\n",
        "        best_auc_pr = curr_auc_pr\n",
        "        best_C = C\n",
        "\n",
        "    print()\n",
        "    print(\"best_C = {0}\".format(best_C))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7m99VTMJjzvd",
        "outputId": "2a301c12-a35b-43e7-f603-17b6de02a5df"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "C: 0.03125, AUC-PR: 0.7747159022634786\n",
            "\n",
            "best_C = 0.03125\n",
            "C: 0.0625, AUC-PR: 0.7742506093553123\n",
            "\n",
            "best_C = 0.03125\n",
            "C: 0.125, AUC-PR: 0.7741991170167202\n",
            "\n",
            "best_C = 0.03125\n",
            "C: 0.25, AUC-PR: 0.774192114401026\n",
            "\n",
            "best_C = 0.03125\n",
            "C: 0.5, AUC-PR: 0.7741874613801507\n",
            "\n",
            "best_C = 0.03125\n",
            "C: 1.0, AUC-PR: 0.77419067523343\n",
            "\n",
            "best_C = 0.03125\n",
            "C: 2.0, AUC-PR: 0.7742364698085407\n",
            "\n",
            "best_C = 0.03125\n",
            "C: 4.0, AUC-PR: 0.7742620520758211\n",
            "\n",
            "best_C = 0.03125\n",
            "C: 8.0, AUC-PR: 0.7741579633524581\n",
            "\n",
            "best_C = 0.03125\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Лучшим оказался наименьший параметр:*\n",
        "\n",
        "`best_C = 0.03125`"
      ],
      "metadata": {
        "id": "ZC8ap_WimUp1"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fapa63xlP75R"
      },
      "source": [
        "  На тестовой части:\n",
        "  - постройте ROC и PR кривые,\n",
        "  - посчитайте AUC-ROC, AUC-PR с точностью до 5 знаков"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "svm = SVC(C = best_C, kernel=\"linear\")\n",
        "svm.fit(X_train, y_train)\n",
        "y_pred = svm.decision_function(X_test)\n",
        "scaled_y_pred = (y_pred - y_pred.min()) / (y_pred.max() - y_pred.min())\n",
        "\n",
        "depict_pr_roc(y_test, scaled_y_pred, 'SVM Classifier')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 559
        },
        "id": "xRAqDnMKjRhj",
        "outputId": "1259db39-e61c-4583-c173-d549ed7b22a7"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "SVM Classifier metrics\n",
            "AUC-PR: 0.81498\n",
            "AUC-ROC: 0.84789\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1100x500 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tEoGp5EDtIzW"
      },
      "source": [
        "Сравните AUC-ROC и AUC-PR для вашей модели с этими же метриками для случайного классификатора."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "id": "wnRTMhsm6Hvv",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "outputId": "90f0389f-54a3-4d86-df4f-32fc74101a59"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                     AUC_PR   AUC_ROC  reg_const\n",
              "Random Classifier  0.752833  0.500000    0.00000\n",
              "SVM Classifier     0.814975  0.847893    0.03125"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0bdba109-e485-4ea1-990b-cf315e7ed2bd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AUC_PR</th>\n",
              "      <th>AUC_ROC</th>\n",
              "      <th>reg_const</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Random Classifier</th>\n",
              "      <td>0.752833</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.00000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SVM Classifier</th>\n",
              "      <td>0.814975</td>\n",
              "      <td>0.847893</td>\n",
              "      <td>0.03125</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0bdba109-e485-4ea1-990b-cf315e7ed2bd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0bdba109-e485-4ea1-990b-cf315e7ed2bd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0bdba109-e485-4ea1-990b-cf315e7ed2bd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-805f2596-5de9-457d-b742-d61cd8f565e6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-805f2596-5de9-457d-b742-d61cd8f565e6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-805f2596-5de9-457d-b742-d61cd8f565e6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_metrics",
              "summary": "{\n  \"name\": \"df_metrics\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"AUC_PR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04394109403399397,\n        \"min\": 0.7528333333333334,\n        \"max\": 0.8149754244617191,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.8149754244617191,\n          0.7528333333333334\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AUC_ROC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.24599774807078448,\n        \"min\": 0.5,\n        \"max\": 0.8478933516349433,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.8478933516349433,\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reg_const\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.02209708691207961,\n        \"min\": 0.0,\n        \"max\": 0.03125,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.03125,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 11
        }
      ],
      "source": [
        "precision, recall, _ = precision_recall_curve(y_test, scaled_y_pred)\n",
        "df_metrics.loc[\"SVM Classifier\"]=[auc(recall, precision),roc_auc_score(y_test, scaled_y_pred),best_C]\n",
        "df_metrics"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "`SVM Classifier` значительно лучше случайного классификатора"
      ],
      "metadata": {
        "id": "rZK5Pvzzn04r"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ln5VaZE_P75S"
      },
      "source": [
        "__Logistic Regression__\n",
        "\n",
        "\n",
        "Аналогичное задание для логистической регрессии с L2 регуляризатором:\n",
        "\n",
        "\n",
        "*   подберите гиперпараметр C, используя метрику AUC-PR\n",
        "*   нарисуйте ROC, PR кривые для тестовой части\n",
        "*   выведите метрики для тестовых данных и сравните их с результатами случайного классификатора\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Воспользуемся `LogisticRegression` из `sklearn.linear_model`, так как в него по умолчанию заложена регуляризация (по умолчанию L2-регуляризация).\n",
        "\n",
        "SVM будет предсказывать вероятности. Будем использовать их для построения AUC-PR и AUC-ROC.\n",
        "\n",
        "Будем подбирать параметр `C` по валидационной выборке."
      ],
      "metadata": {
        "id": "GGk1ifnboT9u"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "id": "r1TlamoBP75S",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4bae5b7c-87c2-4aa9-8ea7-febe72467dd5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "C: 0.03125, AUC-PR: 0.7996765630204525\n",
            "C: 0.0625, AUC-PR: 0.7993271243562559\n",
            "C: 0.125, AUC-PR: 0.7991686059623606\n",
            "C: 0.25, AUC-PR: 0.7992084729384418\n",
            "C: 0.5, AUC-PR: 0.7992083757665119\n",
            "C: 1.0, AUC-PR: 0.7992077623339587\n",
            "C: 2.0, AUC-PR: 0.7992011338594687\n",
            "C: 4.0, AUC-PR: 0.7992003478023068\n",
            "C: 8.0, AUC-PR: 0.7991962377934749\n",
            "\n",
            "best_C = 0.03125\n"
          ]
        }
      ],
      "source": [
        "from sklearn.linear_model import LogisticRegression\n",
        "\n",
        "C_params_lr = np.logspace(-5, 3, 9, base=2.)\n",
        "\n",
        "best_C_lr = None\n",
        "best_auc_pr = 0.0\n",
        "\n",
        "for C_lr in C_params_lr:\n",
        "    lr = LogisticRegression(C = C_lr)\n",
        "    lr.fit(X_train_no_val, y_train_no_val)\n",
        "    curr_proba = lr.predict_proba(X_val)[:, 1]  #p(y = 1 | x)\n",
        "    curr_precision, curr_recall, _ = precision_recall_curve(y_val, curr_proba)\n",
        "    curr_auc_pr = auc(curr_recall, curr_precision)\n",
        "    print(\"C: {0}, AUC-PR: {1}\".format(C_lr, curr_auc_pr))\n",
        "    if curr_auc_pr > best_auc_pr:\n",
        "        best_auc_pr = curr_auc_pr\n",
        "        best_C_lr = C_lr\n",
        "\n",
        "print()\n",
        "print(\"best_C = {0}\".format(best_C_lr))"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Лучшим оказался наименьший параметр:**\n",
        "\n",
        "`best_C = 0.03125`"
      ],
      "metadata": {
        "id": "B0ZEqtSHqfJF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "lr = LogisticRegression(C = best_C_lr)\n",
        "lr.fit(X_train, y_train)\n",
        "y_pred = lr.predict_proba(X_test)[:, 1]\n",
        "\n",
        "depict_pr_roc(y_test, y_pred, 'Logistic Regression Classifier')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 559
        },
        "id": "w1UyOuJEqi5G",
        "outputId": "01b9713f-d8b0-4a05-9be6-f39bd8116e6b"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Logistic Regression Classifier metrics\n",
            "AUC-PR: 0.82935\n",
            "AUC-ROC: 0.84778\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1100x500 with 2 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABEEAAAHqCAYAAADrglBeAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAC8ZklEQVR4nOzde3zL1/8H8FfSNuk9velFldZdKUqVug6dujNj7sz2s9l8sXU2zG3M3QybjbmMMcbmshmGqmsx9/v9Ukq1qGqr9zb5/P7oGk0vJCT9NMnr+XjksXzO5/ZOmJy8c877SARBEEBEREREREREZOKkYgdARERERERERFQamAQhIiIiIiIiIrPAJAgRERERERERmQUmQYiIiIiIiIjILDAJQkRERERERERmgUkQIiIiIiIiIjILTIIQERERERERkVlgEoSIiIiIiIiIzAKTIERERERERERkFpgEISIiIiIiIiKzwCQIEZWqVatWQSKRqB/W1taoXr06/ve//+Hhw4cAgP3792scY2FhAXd3d/Ts2RNXrlwp9rpnz57FgAED4OPjA7lcDhcXF4SGhmLlypVQKpWl+RKJiIhIZIX7G5aWlvD29sa7776L2NjYIscLgoA1a9agZcuWcHJygq2tLQICAjB16lSkpaWVeJ8tW7agQ4cOcHNzg0wmQ/ny5fHOO+9g7969hnx5RPQaLMUOgIjM09SpU+Hn54fMzExERUVh8eLF2LFjBy5evKg+ZuTIkWjUqBFycnJw/vx5LFmyBPv378fFixfh6empPm758uUYNmwYPDw8MHDgQFSrVg3Pnj1DZGQk3n//fcTFxeHLL78U42USERGRiAr2N/7991+sWrUKUVFRuHjxIqytrQEASqUS/fr1w++//44WLVrgq6++gq2tLQ4dOoQpU6bgjz/+wJ49e+Dh4aG+riAIeO+997Bq1SoEBgYiPDwcnp6eiIuLw5YtW9C2bVscPnwYTZs2FeulE1EJmAQhIlF06NABQUFBAID/+7//g6urK7799lv89ddf8PLyAgC0aNECPXv2VJ9To0YNfPTRR1i9ejW++OILAMC///6LYcOGISQkBDt27ICDg4P6+E8++QQnT57USKwQERGR+Sjc33Bzc8Ps2bOxdetWvPPOOwCAOXPm4Pfff8fo0aMxd+5c9bkffPAB3nnnHXTv3h3vvvsu/vnnH/W+efPmYdWqVfjkk0/w7bffQiKRqPeNHz8ea9asgaUlv2oRlUWcDkNEZUKbNm0AANHR0SUe06JFCwDArVu31G1TpkyBRCLB2rVrNRIg+YKCgvDuu+/qN1giIiIySoX7EhkZGZg7dy6qV6+OmTNnFjm+S5cuGDx4MHbu3Il///1Xfc7MmTNRs2ZNfPPNNxoJkHwDBw5EcHCwAV8JEb0qJkGIqEzI74y4urqWeMydO3cAAM7OzgCA9PR0REZGomXLlqhYsaLBYyQiIiLjVrgvERUVhadPn6Jfv34ljtwYNGgQAGDbtm3qcxITE9GvXz9YWFgYPmgi0iuO0SIiUSQnJyMhIQGZmZk4fPgwpk6dChsbG3Tu3Bk3btwAADx79gwJCQnqmiCffPIJJBIJ3n77bQDAzZs3kZOTg4CAADFfChEREZVRBfsbx44dw5QpUyCXy9G5c2cAwOXLlwEA9erVK/Ea+fvyi7Pn/5f9DyLjxCQIEYkiNDRUY7tSpUpYu3YtvL291UmQ9957T+OYcuXKYc2aNWjUqBEAICUlBQCKnQZDREREVLi/4evri19//RUVKlQAkPeDC/DivkT+vvx+B/sfRMaNSRAiEsUPP/yA6tWrw9LSEh4eHqhRowakUs0ZepMmTUKLFi2QmpqKLVu2YP369RrHODo6AnjegSEiIiIqKL+/kZycjJ9//hkHDx6EXC5X789PZLyoL1E4UcL+B5FxYxKEiEQRHBysrtZekoCAAPUvON27d0d6ejqGDh2K5s2bw8fHB1WrVoWlpSUuXLhQGiETERGRkSnY3+jevTuaN2+Ofv364dq1a7C3t0etWrUAAOfPn0f37t2Lvcb58+cBAP7+/gCAmjVrAgAuXLhQ4jlEVHaxMCoRGY1Zs2YhMzMT06dPBwDY2tqiTZs2OHjwIO7duydydERERFSWWVhYYObMmXjw4AEWLVoEAGjevDmcnJywbt06KJXKYs9bvXo1AKjriDRv3hzOzs747bffSjyHiMouJkGIyGhUqVIFb7/9NlatWoX4+HgAwOTJkyEIAgYOHIjU1NQi55w6dQq//PJLaYdKREREZdAbb7yB4OBgLFiwAJmZmbC1tcXo0aNx7do1jB8/vsjx27dvx6pVqxAWFoYmTZoAyPsRZsyYMbhy5QrGjBkDQRCKnPfrr7/i+PHjBn89RKQ7TochIqPy+eef4/fff8eCBQswa9YsNG3aFD/88AM+/vhj1KxZEwMHDkS1atXw7Nkz7N+/H1u3bsW0adPEDpuIiIjKiM8//xy9evXCqlWrMGzYMIwdOxZnzpzB7NmzcfToUbz99tuwsbFBVFQUfv31V9SqVavIDyqff/45Ll26hHnz5mHfvn3o2bMnPD09ER8fjz///BPHjx/HkSNHRHqFRPQiHAlCREYlKCgIb7zxBhYvXozk5GQAwIcffogTJ06gVatWWL16NYYNG4YpU6bg2bNnWLlyJcaMGSNy1ERERFRW9OjRA1WqVME333wDpVIJCwsL/P7771i5ciWUSiUmTpyIkSNH4tSpU5g8eTKOHTsGDw8PjWtIpVKsXr0aGzduhJubG7755ht88MEH+P777+Hn54f9+/cjJCREpFdIRC8iEYobv0VEREREREREZGI4EoSIiIiIiIiIzAKTIERERERERERkFpgEISIiIiIiIiKzwCQIEREREREREZkFJkGIiIiIiIiIyCwwCUJEREREREREZsFS7ABKm0qlwoMHD+Dg4ACJRCJ2OERERCZLEAQ8e/YM5cuXh1Rqvr+7sO9BRERkeNr2O8wuCfLgwQP4+PiIHQYREZHZuHfvHipUqCB2GKJh34OIiKj0vKzfYXZJEAcHBwB5b4yjo6PI0RAREZmulJQU+Pj4qD97zRX7HkRERIanbb/D7JIg+cNQHR0d2REhIiIqBeY+BYR9DyIiotLzsn6H+U7QJSIiIiIiIiKzwiQIEREREREREZkFJkGIiIiIiIiIyCyYXU0QIiIiIiJDUiqVyMnJETsMIiKTYmVlBQsLi9e+DpMgRERERER6IAgC4uPjkZSUJHYoREQmycnJCZ6enq9VdJ1JECIiIiIiPchPgLi7u8PW1tbsV0YiItIXQRCQnp6OR48eAQC8vLxe+VpMghARERERvSalUqlOgLi6uoodDhGRybGxsQEAPHr0CO7u7q88NYaFUYmIiIiIXlN+DRBbW1uRIyEiMl35/8a+Tt0lJkGIiIiIiPSEU2CIiAxHH//GMglCRERERERERGaBSRAiIiIiIjIoX19fLFiw4JXPX7VqFZycnPQWjyl53fdWn95991107969VO5V+HXHx8fjzTffhJ2dnfrvikQiwZ9//mmwGFq2bIl169YZ7PrmZsmSJejSpYvB78MkCBERERGRGSuNL64nTpzABx98oNWxxX2p7927N65fv/7K91+1ahUkEgkkEgmkUim8vLzQu3dvxMTEvPI1ywpd3tvXIQgCli5disaNG8Pe3h5OTk4ICgrCggULkJ6ebvD7F1b4dc+fPx9xcXE4e/as+u9KXFwcOnToYJD7b926FQ8fPkSfPn2K7Js5cyYsLCwwd+7cIvu++uor1K9fv0j7nTt3IJFIcPbsWXWbWO95TEwMOnXqBFtbW7i7u+Pzzz9Hbm7uC8+5fv06unXrBjc3Nzg6OqJ58+bYt2+fxjH5/w8WfKxfv169/7333sPp06dx6NAhg7yufEyCEBERERGRQZUrV+61isba2NjA3d39tWJwdHREXFwcYmNjsWnTJly7dg29evV6rWtq43UKOGrjdd9bbQ0cOBCffPIJunXrhn379uHs2bOYOHEi/vrrL+zevdvg9y+s8Ou+desWGjZsiGrVqqn/rnh6ekIul7/yPbKzs0vc991332HIkCGQSot+pf7555/xxRdf4Oeff37lewPivOdKpRKdOnVCdnY2jhw5gl9++QWrVq3CpEmTXnhe586dkZubi7179+LUqVOoV68eOnfujPj4eI3jVq5cibi4OPWjYAJWJpOhX79++O677wzx0p4TzExycrIAQEhOThY7FCIiIpPGz9w8fB/MQ0ZGhnD58mUhIyND7FB0NnjwYKFbt24l7t+/f7/QqFEjQSaTCZ6ensKYMWOEnJwc9f6UlBShX79+gq2treDp6Sl8++23QqtWrYRRo0apj6lUqZIwf/58QRAEQaVSCZMnTxZ8fHwEmUwmeHl5CSNGjBAEQRBatWolANB4CIIgrFy5UlAoFBpxbd26VQgKChLkcrng6uoqdO/evcTXUNz53333XZH/N//8808hMDBQkMvlgp+fn/DVV19pvNYrV64IzZo1E+RyuVCrVi0hIiJCACBs2bJFEARBiI6OFgAI69evF1q2bCnI5XJh5cqVgiAIwrJly4SaNWsKcrlcqFGjhvDDDz+or5uVlSUMHz5c8PT0FORyuVCxYkVhxowZL32/Cr+3giAId+/eFbp27SrY2dkJDg4OQq9evYT4+Hj1/smTJwv16tUTVq9eLVSqVElwdHQUevfuLaSkpJT4/m3YsEEAIPz5559F9qlUKiEpKUkQhKJ/l/755x+hWbNmgkKhEFxcXIROnToJN2/e1PvrrlSpksbfmcGDBwuCIGj82QiCIMTExAi9evUSFAqF4OzsLHTt2lWIjo5W78+Pf9q0aYKXl5fg6+tb7Pvx6NEjQSKRCBcvXiyyb//+/YK3t7eQnZ0tlC9fXjh8+LDG/vz3v7D8vztnzpwRBEH791zfduzYIUilUo2/M4sXLxYcHR2FrKysYs95/PixAEA4ePCgui0lJUUAIERERKjbCv95FOfAgQOCTCYT0tPTi93/on9rtf285UgQIiIiIiIDEAQB6dm5ojzyvm+8vtjYWHTs2BGNGjXCuXPnsHjxYqxYsQLTpk1THxMeHo7Dhw9j69atiIiIwKFDh3D69OkSr7lp0ybMnz8fP/30E27cuIE///wTAQEBAIDNmzejQoUKmDp1qvqX4uJs374db731Fjp27IgzZ84gMjISwcHBWr+uR48eYcuWLbCwsICFhQUA4NChQxg0aBBGjRqFy5cv46effsKqVaswffp0AHm/kHfv3h22trY4duwYli5divHjxxd7/bFjx2LUqFG4cuUKwsLCsHbtWkyaNAnTp0/HlStXMGPGDEycOBG//PILgLxRBVu3bsXvv/+Oa9euYe3atfD19X3p+1WYSqVCt27dkJiYiAMHDiAiIgK3b99G7969NY67desW/vzzT2zbtg3btm3DgQMHMGvWrBLfr7Vr16JGjRro1q1bkX0SiQQKhaLY89LS0hAeHo6TJ08iMjISUqkUb731FlQqlV5f94kTJ9C+fXu88847iIuLw8KFC4sck5OTg7CwMDg4OODQoUM4fPgw7O3t0b59e40RH5GRkbh27RoiIiKwbdu2Yu8XFRUFW1tb1KpVq8i+FStWoG/fvrCyskLfvn2xYsWKYq/xMq/6ngOAvb39Cx/Dhg0r8dyjR48iICAAHh4e6rawsDCkpKTg0qVLxZ7j6uqKGjVqYPXq1UhLS0Nubi5++uknuLu7o2HDhhrHDh8+HG5ubggODsbPP/9c5N+qoKAg5Obm4tixYyXG+LosDXZlIiIiIiIzlpGjhP+kXaLc+/LUMNjKXr+r/+OPP8LHxweLFi2CRCJBzZo18eDBA4wZMwaTJk1CWloafvnlF6xbtw5t27YFkDfcvXz58iVeMyYmBp6enggNDYWVlRUqVqyoTmC4uLjAwsICDg4O8PT0LPEa06dPR58+fTBlyhR1W7169V74WpKTk2Fvb5+XnPqvnsLIkSNhZ2cHAJgyZQrGjh2LwYMHAwAqV66Mr7/+Gl988QUmT56MiIgI3Lp1C/v371fHNn36dLz55ptF7vXJJ5+gR48e6u3Jkydj3rx56jY/Pz91omXw4MGIiYlBtWrV0Lx5c0gkElSqVEmr96uwyMhIXLhwAdHR0fDx8QEArF69GrVr18aJEyfQqFEjAHnJklWrVsHBwQFA3rSLyMhIdcKnsBs3bqBGjRovfH+L8/bbb2ts//zzzyhXrhwuX76MOnXq6O11lytXDnK5HDY2NiX+vdmwYQNUKhWWL1+uXmZ15cqVcHJywv79+9GuXTsAgJ2dHZYvXw6ZTFbi67p79y48PDyKTIVJSUnBxo0bcfToUQDAgAED0KJFCyxcuBD29vYvebc0vep7DkCjrkhxHB0dS9wXHx+vkQABoN4uPLUln0QiwZ49e9C9e3c4ODhAKpXC3d0dO3fuhLOzs/q4qVOnok2bNrC1tcXu3bvx8ccfIzU1FSNHjlQfY2trC4VCgbt3777sZb4yjgQhIiIiIqJiXblyBSEhIeovjQDQrFkzpKam4v79+7h9+zZycnI0vpwqFIoXfnnr1asXMjIyULlyZQwdOhRbtmx5adHFws6ePatOumjLwcEBZ8+excmTJzFv3jw0aNBA40v/uXPnMHXqVI1fzIcOHYq4uDikp6fj2rVr8PHx0fiSXdKX8qCgIPXztLQ03Lp1C++//77GtadNm4Zbt24ByCtOe/bsWdSoUQMjR47UqPegy/t15coV+Pj4qBMgAODv7w8nJydcuXJF3ebr66tOgACAl5cXHj16VOJ796oji27cuIG+ffuicuXKcHR0VI/yyC9Iq6/XrY1z587h5s2bcHBwUP8ZuLi4IDMzU/3nAAABAQEvTIAAQEZGBqytrYu0//bbb6hSpYo6IVe/fn1UqlQJGzZs0Dne1xnNVbVq1Rc+Xre+TmGCIGD48OFwd3fHoUOHcPz4cXTv3h1dunTRGM01ceJENGvWDIGBgRgzZgy++OKLYovH2tjYGLTwK0eCEBEREREZgI2VBS5PDRPt3mWVj48Prl27hj179iAiIgIff/wx5s6diwMHDsDKykqra9jY2Oh8X6lUiqpVqwIAatWqhVu3buGjjz7CmjVrAACpqamYMmWKxgiOfMV94X2R/NEl+dcFgGXLlqFx48Yax+VPxWnQoAGio6Pxzz//YM+ePXjnnXcQGhqKjRs36uX9KqzweRKJRD1FpTjVq1fH1atXdb5Ply5dUKlSJSxbtgzly5eHSqVCnTp11NNPSvN1p6amomHDhli7dm2RfeXKlVM/L/hnVxI3Nzc8ffq0SPuKFStw6dIlWFo+/5qtUqnw888/4/333weQNwojOTm5yLlJSUkAoJ7m8qrvOYCXjjoZMGAAlixZUuw+T09PHD9+XKPt4cOH6n3F2bt3L7Zt24anT5+qR5n8+OOPiIiIwC+//IKxY8cWe17jxo3x9ddfIysrS6OAbWJiosafib4xCUJEREREZAASiUQvU1LEVKtWLWzatAmCIKhHgxw+fBgODg6oUKECnJ2dYWVlhRMnTqBixYoA8qadXL9+HS1btizxujY2NujSpQu6dOmC4cOHo2bNmrhw4QIaNGgAmUwGpVL5wrjq1q2LyMhIDBky5JVf29ixY1GlShV8+umnaNCgARo0aIBr166pEyWF1ahRA/fu3cPDhw/V0wNOnDjx0vt4eHigfPnyuH37Nvr371/icY6Ojujduzd69+6Nnj17on379khMTISLi8sL36+CatWqhXv37uHevXvq0SCXL19GUlIS/P39tX1riujXrx/69OmDv/76q0iNCkEQkJKSUqRGxZMnT3Dt2jUsW7YMLVq0AJBXS8MQr1sbDRo0wIYNG+Du7v7C6SDaCAwMRHx8PJ4+faqe7nHhwgWcPHkS+/fvh4uLi/rYxMREvPHGG7h69Spq1qyJGjVq4P79+xp/jwDg9OnTsLa2Vv9/9Crveb7XmQ4TEhKC6dOn49GjR+oRIxEREXB0dCzx71D+qI3C04OkUukLk2tnz56Fs7OzRgLk1q1byMzMRGBg4Atfw+sw7n+ViYiIiIjotSUnJxf54uTq6oqPP/4YCxYswIgRI/C///0P165dw+TJkxEeHg6pVAoHBwcMHjwYn3/+OVxcXODu7o7JkydDKpVqTKEpaNWqVVAqlWjcuDFsbW3x66+/wsbGRl0PwtfXFwcPHkSfPn0gl8vh5uZW5BqTJ09G27ZtUaVKFfTp0we5ubnYsWMHxowZo/Vr9vHxwVtvvYVJkyZh27ZtmDRpEjp37oyKFSuiZ8+ekEqlOHfuHC5evIhp06bhzTffRJUqVTB48GDMmTMHz549w4QJEwCgxNeab8qUKRg5ciQUCgXat2+PrKwsnDx5Ek+fPkV4eDi+/fZbeHl5ITAwEFKpFH/88Qc8PT3h5OT00veroNDQUAQEBKB///5YsGABcnNz8fHHH6NVq1YaU3R09c4772DLli3o27cvJkyYgHbt2qFcuXK4cOEC5s+fjxEjRmgsdQoAzs7OcHV1xdKlS+Hl5YWYmJgiIwL09bq10b9/f8ydOxfdunXD1KlTUaFCBdy9exebN2/GF198gQoVKmh9rcDAQLi5ueHw4cPo3LkzgLxRIMHBwcUm/xo1aoQVK1Zg7ty5CAsLQ40aNdC3b19MmzYNnp6eOH36NCZMmIBRo0apRwe9ynuer6REnjbatWsHf39/DBw4EHPmzEF8fDwmTJiA4cOHq5MVx48fx6BBgxAZGQlvb2+EhITA2dkZgwcPxqRJk2BjY4Nly5YhOjoanTp1AgD8/fffePjwIZo0aQJra2tERERgxowZGD16tMb9Dx06hMqVK6NKlSqv/Bpe6oVrx5ggLlNHRERUOviZm4fvg3kw9iVyUWhZWgDC+++/LwjCqy2RGxwcLIwdO1Z9TMHlTLds2SI0btxYcHR0FOzs7IQmTZoIe/bsUR979OhRoW7duoJcLn/hErmbNm0S6tevL8hkMsHNzU3o0aNHia+xuPPz7wVAOHbsmCAIgrBz506hadOmgo2NjeDo6CgEBwcLS5cuVR+fv0SuTCYTatasKfz9998CAGHnzp2CIBRd5rSgtWvXquN1dnYWWrZsKWzevFkQBEFYunSpUL9+fcHOzk5wdHQU2rZtK5w+fVqr9+tVl8gtaP78+UKlSpVKfP8EQRCUSqWwePFioVGjRoKtra3g6OgoNGzYUFi4cKF6OdPCS+RGREQItWrVEuRyuVC3bl1h//79Gsuk6vN1d+vWTb00bj4UWpI1Li5OGDRokODm5ibI5XKhcuXKwtChQ9X/Pr9sueiCvvjiC6FPnz6CIOQt9evq6irMmTOn2GNnz54tuLu7C9nZ2YIgCEJsbKwwePBgoWLFioKNjY3g7+8vzJo1S71fl/fcEO7cuSN06NBBsLGxEdzc3ITPPvtM4//5ffv2CQA0lhc+ceKE0K5dO8HFxUVwcHAQmjRpIuzYsUO9/59//hHq168v2NvbC3Z2dkK9evWEJUuWCEqlUuPe7dq1E2bOnFlibPpYIlciCHpaP8tI5A8bSk5Ofu1hUERERFQyfubm4ftgHjIzMxEdHQ0/Pz+d60eYmrS0NHh7e2PevHnqOgim6vDhw2jevDlu3rxp2F+uqcyJj49H7dq1cfr06VcenUKaLl26hDZt2uD69eslTvV50b+12n7ecjoMERERERG9sjNnzuDq1asIDg5GcnIypk6dCgBF6hiYgi1btsDe3h7VqlXDzZs3MWrUKDRr1owJEDPk6emJFStWICYmhkkQPYmLi8Pq1atLTIDoC5MgRERERET0Wr755htcu3YNMpkMDRs2xKFDh4qt5WHsnj17hjFjxiAmJgZubm4IDQ3FvHnzxA6LRFJSTQ56NaGhoaVyHyZBiIiIiIjolQUGBuLUqVNih1EqBg0ahEGDBokdBhG9BunLDyEiIiIiIiIiMn5MghARERERERGRWWAShIiIiIhIT1QqldghEBGZLH38G8uaIEREREREr0kmk0EqleLBgwcoV64cZDIZJBKJ2GEREZkEQRCQnZ2Nx48fQyqVQiaTvfK1mAQhIiIiInpNUqkUfn5+iIuLw4MHD8QOh4jIJNna2qJixYqQSl99UouoSZCDBw9i7ty5OHXqFOLi4rBly5aXLjO0f/9+hIeH49KlS/Dx8cGECRPw7rvvlkq8REREZNzY9yBDkslkqFixInJzc6FUKsUOh4jIpFhYWMDS0vK1R9mJmgRJS0tDvXr18N5776FHjx4vPT46OhqdOnXCsGHDsHbtWkRGRuL//u//4OXlhbCwsFKImIiIiIwZ+x5kaBKJBFZWVrCyshI7FCIiKoaoSZAOHTqgQ4cOWh+/ZMkS+Pn5Yd68eQCAWrVqISoqCvPnz2dHhIiIiF6KfQ8iIqLnBEFARo44I9dsrCxEqZ1kVDVBjh49itDQUI22sLAwfPLJJyWek5WVhaysLPV2SkqK3uN6kJSBdvMPQiIBhrWqguGtq+r9HkRERFT6ymrfg4iIyjYxkwvaEgSg15KjuBwnzufU5alhsJWVfkrCqJIg8fHx8PDw0Gjz8PBASkoKMjIyYGNjU+ScmTNnYsqUKQaNSwCQmpULAPj73AMmQYiIiExEWe17EBGRYegjeSF2coFezKiSIK9i3LhxCA8PV2+npKTAx8dHr/dwd5BjxlsB+HLLBb1el4iIiIxPafQ9iIioZK+ayDDX5IW/lyP+GBaC0p6ZYmNlUbo3/I9RJUE8PT3x8OFDjbaHDx/C0dGx2F9iAEAul0Mulxs0LisLKSq52hr0HkRERFT6ymrfg4jIHGmT3ChLiQyxkgu6Eqs2h1iMKgkSEhKCHTt2aLRFREQgJCREpIiIiIjIlLHvQUQkrvzER2kmN/SVvDC35IKxEDUJkpqaips3b6q3o6OjcfbsWbi4uKBixYoYN24cYmNjsXr1agDAsGHDsGjRInzxxRd47733sHfvXvz+++/Yvn27WC+BiIiIjAj7HkRE4tJlqsrrJD5eJ5HB5IVpEzUJcvLkSbRu3Vq9nT9/dvDgwVi1ahXi4uIQExOj3u/n54ft27fj008/xcKFC1GhQgUsX76cS9QRERGRVtj3ICIqHcUlO/QxmkPb5AYTGVQSiSAIgthBlKaUlBQoFAokJyfD0dFRb9c9fDMB/ZcfQ01PB+z8pKXerktERGSsDPWZa2z4PhCROSiY9ND31JWCiQ8mN6gk2n7eGlVNECIiIiIiIiobXrVeh65TVZj4IH1iEoSIiIiIiIiKVVIND20SHyUlO5jUIDExCUJERERERGSmXlSo9HVHeDDZQWURkyBEREREREQmRptVWPRdqJRJDzIGTIIQERERERGZgFet0fEyL6rhwcQHGRsmQYiIiIiIiIxM4ZEer5P4eFmhUiY6yJQwCUJERERERFQGvU5RUkD7VViY5CBzwiQIERERERFRGSIIAtKzla80soM1OohejEkQIiIiIiIikb1KPY/iRnow8UH0YkyCEBERERERieRloz5YlJRIv5gEISIiIiIiMqBXqe2Rn/ywlTHRQaRPTIIQEREREREZiEoloPP3UTpPb+EoDyLDYBKEiIiIiIjIAFQqAW2/PYDohLQXHsdRH0Slh0kQM5ajVGHr2Qc4Fv0Eo0Krw9vJRuyQiIiIiIiMUuEpL4IAdP4+Sp0A8XOzw7YRzVnbg0hkTIKYGEEQ8M/FeMzZeRUNK7lg3jv1EJ2Qhp8O3EIdbwUGNKmEtKxcrD9xDysO3caD5EwAwP2nGRjQpBI6BniJ/AqIiIiIiMq+gkmPl63o4udmh8jwVpBKmeggEhuTICbkXmI6Jv11EfuuPQYA3E1Mh5OtFVYfvYMcpQCXyw+Rnp2LH/ffQlJ6jsa5R249wZFbTzCnZ100reKKCs62Wt3zQVIG9l17hOZV3VDJ1Q6JadnIzlXBU2Gt99dHRERERCS2l63mUpi/lyO2jWjOBAhRGcEkiAkQBAGbTsdi0l8XkZ6tOQRvRVS0ejsxLRszdlwFAPi62uKDllVw63GqxjFfbDyPym522PBhCMo5yIu9X2aOErsuxWPjqfs4dCNB3d6yejkcvP4YMkspjo5tA1f74s8nIiIiIjI22iQ/ilvOllNdiMoWJkGM3LPMHIzfchFbzz0AAAT7uuCj1lUwZOUJAEB1D3sMCvHFhD8vAgC8FNb49M3qeLtBBVhIJUjPzkWTyq4Yv+UCHj3LAgDcTkhDk5mR+PPjZgiooFDf6+ajVPxy5A7+PBOLZ1m5RWI5eD1vBEp2rgrjNl/A0kFBBn3tRERERET6VtxytiVNdymc9GDCg6jsYxLEiMU8Scf7v5zAjUepsJBK8GloNXz0RlVIJcDnYTWgsLFCn0Y+sJBKkJyRA1uZBfoGV4S1lYX6GrYyS7zp7wFXexl2X3qIJQduAQCUKgFHbyegdnlHHLj+GD8fjtYY9eHtZIOeDSugvo8T/rfuNDwcrdGtvjfm77kOANh9+SH+PvcAXeqVL903hYiIiIhIS8UVM9VmmgtXcyEyXkyCGKkTdxLxweqTeJqeAw9HOX7s3xANKzmr9w9vXVXj+MLbhTWo6IxAHydUdLHFl1suAABm7LiK9Sfu4fbjvIrWEgkQWssD7zb1RUhlV/W8xgtfhUEiASQSCap52OPjtacBACN+O6ORBMnKVSI1M5fTZIiIiIhIdCqVgM7fR2lV1yMfkx9Exo9JECN08PpjDF19Elm5KtStoMCyQUHwcHz9QqQSiQT9GldExOV4dXHV24/T4GBtid5BPhgU4ouKrkULphYs8tShjieqlLPDrf8SJ4Ig4My9JGw6dR9/n3uA9Gwlto1sjpqejq8dLxERERGRrvJrexRcvraw4mp7AJzuQmQKmAQxMpFXHuKjX08jW6lC25ruWNSvAWxkFi8/UQfdA72x79pj2MosMKptNfRvUgn2cu3+qkgkEizsE4jO30cBAKpP+Ac5SkHjmJgn6UyCEBEREVGpeNlStn5udtg2ojmLmRKZCSZBjMiRmwkY9usp5CgFtK/tie/6BkJmKdX7fbrWK49q7g6oXM5Oo36Itvy9nic4cpQCrK2k6FDHCyfuJOL+0wxsvxCHxpVdobCx0mfYREREREQAnic+Xlbjg8vXEpkfJkGMxNX4FHy4Ji8B0qFOXgLEykL/CRAgbzSHf/lXH6khlUowul11HL/zFJ0DvNAhwBMO1lbwHbsdAPDX2Qc4eecpDn3Rmh84RERERKRX2tT6YG0PIvPFJIgRePwsC+/+fALPsnIR7OeC+b3rGywBoi//a1OtSNsnodWwYM8NAEBsUgam77iS99qa+cLT0RrlnWxKO0wiIiIiMhEvqvXBpWyJKB+TICK7Gp+Ca/HP0K2+d7H7lSoBo9afQXxKJqqUs8OygUGvNEWlLBjWqgpc7eWY+OdFAMCKqGgAwNZzDwAAt2d05MgQIiIiItLai6a9FKz1waQHEeVjEkREWblKtF9wCABQwdkG0QnpaF/HExYSCaRSQG5pgYWRN3Dk1hPYyizw08CGUNgabx0NaysL9Gnkg4V7ruNpeg6UKs2CqQ2nRSD8zeqQSCRoVb0cktJz8O/tJ+ge6I1yDlxWl4iIiIjy5I/6KKneB2t9EFFJmAQR0fbzcernby8+CgC4l5iOjafuQxAEfNu7Pr7fmzd9ZGaPAFR1dxAlTn2yspAi4tNWUP33wXXybiI+3XAOAPA0PQcT/7pU5Jy45Ew0qeyCzadjsfNSPJpUdkFWrgqXH6SgX+OK2H4+Do+eZeHzsBoYFFIJDtYvTxSpVALOxyZjz+WHuJ2Qijequ8OvnB0a+bro/TUTERER0evTptgpa30Q0cswCSKiX47cKdK2MPKG+vmHa05BEICeDSuUOF3GGDnbyQAArgB8XGyRlqXEhP+myBTn58PR+PlwtHr739uJ6ucrD99RP5+76xp2XozH1v81Q0pGLu49TUft8o7qD8DMHCWO3EpAxOVHiLzyEI+eZanP3XEhHgDw0RtVEP04DadinqJvcEWEv1ldHy+ZiIiIiF6RNqM+8ut9cNoLEb0MkyAiOX8/CefuJ7/wmOSMHJRzkGNiJ/9SikocA5pUQv/GFRF1MwHOtjL8fe4BfFxsEZuUgcX7bwEAyjnIobCxws1Hqajv44Sz95IAAB0DPNUJDAC4EJsMv3E71Nvf9KoHCynwz4V4HLqRoF4jHgDsZBZIy36+DUB9PwD4LvIGLsYm46eBDdWFaJMzcmBtJYXcsmhdFqVKQGpmLhS2VniSmoWbj1JRx1sBOzn/NyMiIiLSBUd9EJGh8NuZSDafjtXquK+71THqOiDakkgkaFGtHACgjrcCAPAkNQtySynq+ziheVU3WFpIIQgCJBIJVCoBKkGA5X/JiYjLDzF09cki1x39xzmNbS+FNUJreSDU3wNNKrtAbmmBzBwlvtl1DcujolHPxwnuDnJEXH4IANh79RGqjf8HADSSL8sHBeFUzFPsufwQDtaW8HC0RtSNBDzLyi329ZVXWOODlpURVscTx6MT8e/tJ3iWmYvpbwVAYWP6f75ERERExclPdmi2vTzxwVEfRPSqJIIgCC8/zHSkpKRAoVAgOTkZjo6Oervu4ZsJ6L/8GGp6OmDnJy1feGyOUoUmMyLxJC37hccFeCvw94jmeovR1B268RhLD95Gw0rOOHj9MU7HJAEAKpezQ6cAL4TV9tSYHlNYfoJFEAT8cfI+vth03uAxt63pjh8HNMClByk4djsRh248hpOtFexklnijhjs61fUyeAxERIZiqM9cY8P3gUiTNqM8CuOoDyJ6GW0/bzkSRASHbybgSVo2XO1kEAAkFkqGeCmsEZecidlv1xUnQCPVolo59WiS3o18sOtiPEKquKG6h71WH5b5x0gkErzTyAftAzyx/XwcfjseAy+FNdrUdMe83dfx6FkWFDZWaFLZBbsuPUQjX2e0qFYOtbwccTUuBb5udmhc2QVX457hyK0nOHr7Cc79N4IEAOpWUOD8f1OhIq8+Qo0JO4uN549T9xGdUB1DW1YudvoNERERkbERBAE9lxzFqbtPX3osR30QkSEwCSKCXZfyplp0DPBC3+CKuPk4FbXLO+KnA7fwv9bVIJEA2UoVqpSzFzlS4+WlsMG7zfxe6xqO1lboG1wRfYMrqtveCfLBo2dZKGcvL3bJtTf9PdTP3R2s0bJ6XlImI1uJK/EpqOpuD0drK+y9+hDvrXo+fcfJ1gq1yzvi8M0nqFzODrcfpwEAvtl9HQevJ+C3D5rAgku8ERERkRETBAFP0rKLJEAKJjsKYuKDiAyBSZBSJggC9l7NS4KE+nvAv7wj/MvnDdWZ07OemKGRFiQSCTwcrXU+z0ZmgQYVndXbbWp64PLUMBy++QQ+Ljao7u6gkVRZdywGX265AAA4ficRf56JRY8G3niQnAlHa0utlgEmIiIiEkvhWh/FTX05OSEUtjILJjuIqFQxCVLKLsam4GFKFmxlFmhS2UXscEhEtjJLjZEjBfVrXBF1KyjQ+fsoAMBnf5zDlL8vISUzr/Dq4JBK8C/viLcCK0BmKS21mImIiIgK0ybhUVhQJWe42smY/CCiUsckSCmL/G8USItqbqzzQC9Ux1uBL9rXwJyd1wBAnQABgF+O3gUATNt+BT+/2wixTzPg42KLqu72XG2GiExSTEwM7t69i/T0dJQrVw61a9eGXC4XOywis1Qw6aFLcVOABU6JSHxMgpSyI7eeAABaVXcXORIyBh+/URW1yytwJuYpgiq5YMuZWBy68RiPnmUBAJ5l5qLXkqMa52z6KARySwtIJRJ4KawRn5KJCs42nEJDREbnzp07WLx4MdavX4/79++j4IJ2MpkMLVq0wAcffIC3334bUilHxREZ0uus6FIw18GpL0QkNiZBSlFmjhJn/1slhFNhSFutqpdDq/8KrDav5gYASErPRv2pEcUe//bio8W2z+oRgD4FirwCQEpmDnJyVXC1l6uve+ruU9x+nIY+wT5MnBCRaEaOHIlffvkFYWFhmDZtGoKDg1G+fHnY2NggMTERFy9exKFDhzBp0iRMmTIFK1euRKNGjcQOm8jkCIKA9GzlSxMfTHgQkbFgEqQUnYlJQnauCuUc5PBzsxM7HDJiTrYyHB3XBmlZuahSzh4pmbl464fDuJ2QVuI5YzdfwPg/L2JR30Aci07EiTuJuPQgrzPTsJIzUjJycONRqvr46Tuu4PaMjshWqnAhNhnX4p/B3UGOah4O8HOzw9O0bNx6nIpaXo6wk7/4nxKVSih2NZ3CkjNyYC+3RGJaNm48egYfZ1tUcLZhB4rIDNnZ2eH27dtwdXUtss/d3R1t2rRBmzZtMHnyZOzcuRP37t1jEoRIj16W/Cic9GDCg4iMBZMgpehYdN5UmMZ+LvyQoNfmpbBRP1fYWGHHqBaIS87MmwKTnAmpRIL0nFwcup6A6TuuAACUKgEfrT1d5FqFl6rL13TWXjxJy0KOUih2f76ang7wdrJB5NVHcLOXQ6lSYXBTXzzLzMXZe0k4E/MUqv8u8fuHIZBKAEcbKzx+loXz95NxITYJ5+4lIzYpo8R7NKvqilFtqyPYj6OoiMzBzJkztT62ffv2BoyEyPRpW9i0YOKDSQ8iMlZMgpSik3fyvmg2rlz0Vy2i12VtZaEeYeRbYKRRTU9H9GxYAYFfR/y37YBgPxc08nVBalYudl2KRw0PBzSs5IyGlZzhZCtDlS93AADiUzK1uvfV+Ge4Gv8MAJCQmlevZMGeG8Ue+85PxU/XeZnDN5/g8M3n564b2hhNq7i90rWIiIgoj0oloPP3UVpNdWExUyIyBUyClBJBEHAhNhkAUL+Ck7jBkNlxtpPhzqxOyMxRwtpKc1WivoXqhADAb0ObYPPp+wip4oqGlZxR0cUWKiFvJMnB649hIZWgjrcCvx2Pwfw919EpwAtu9nLEJWdg16W8FZDqVVCgno8T6vs4wUIqwc+H7+DcfzVx8vm42KBuBSfU9VYgoIICLnYypGXloqanI6wspDgd8xR7rz7C0oO3i8TYb9kxNK/qhjY13dE90BsudjL9vWFEZBSuXLmCTp064fbtov9GEFHJChY57fx9FKJLmE7L5AcRmSImQUrJvcQMJGfkQGYhRXVPe7HDITNVOAFSkpAqrgipojliyUICWEglCPX3ULeNbFsNI9tW0+qa3ep7415iOuSW0v+SHUoobF9ceLVJZVc0qeyKLzvWwtO0bOy8FI/z95Px2/EYAEDUzQRE3UzA1G2X4WYvw7JBQQis6KxVPERk/LKzs3H37l2xwyAyGi+q8+HnZodtI5qzsCkRmTwmQfTsavwzPEnNUq+2kS9/FEgNTwfILbX7IkpkanxcbNXPFba6LWfpbCdD3+CK6BsM1C7viAl/XtTYn5Cajbd+PIJzk9tBqcobeXUxNhnHoxPx+FkWPmhZGR6O1rj0IBmXHqRg16V4AMDCPoFoWsX1pcVdiaj0hYeHv3D/48ePSykSIuNUsNbHi5a29fdyxLYRzbUqYk5EZOzY6zeAXj8dxd7P3tBoy0+CBFRQiBARkWkZ0KQSBjSphMfPsrDqSDR+2HdLva/elN3FnvPJhrPFtg9dfVL9fPbbAejdqOj0ICISx8KFC1G/fn04OjoWuz81NbXYdiJ6ea0PFjklInPFJIgB3H5cdF7lhdgkAECAN5MgRPpSzkGOz8NqYmTbamg2a5+6KCuQN6zX38sR+689Qlp23q9gFZxtULu8IzwcrbH6aNEh9GM2XcCYTRcQNaY1KjjbFtlPRKWratWq+PTTTzFgwIBi9589exYNGzYs5aiIyi5tan2wzgcRmTsmQUrJ1bi8lTNqly/+1ywienVySwucnBCK6IQ0PEzJhH95RzhaP683kqNUIT1bCYXN87ap3epAEAQkpmVj6aHb+OnA88KKzWfvUz/3drJB1JjW7CgSiSAoKAinTp0qMQkikUggCC9ewpvIXJQ08qNwrQ+O+iAic8ckSCl4kpqFJ2nZAICq7iyKSmQofm526mWCC7KykEJhU7QGiUQigau9HOM61MLn7WqgzbwDiElM1zgmNikDfuN24OrX7bUuLEtE+jFv3jxkZWWVuL9evXpQqVSlGBFR2fKykR+s9UFEVBSTIKXg5qO8OcsVnG1gK+NbTlQWWVpIsW/0G7gSl4L0bCX2X3uEH/c/rzVSc+JOBPu5wMnGCs2quuFBcgayc1VIzshBI1+XYpcaJqLX4+npKXYIRGWWNiM/OOqDiKgofiMvBTf+S4JU4ygQojLNQipBnf/q9gT7ueDzsBrwG7dDvf94dCIAYPflhxrnbT4di3uJ6fAv74jmVd3gZCsrvaCJiMgsFF7phSM/iIheDZMgpSB/JEg1DweRIyEiXUgkEhz6ojVGrT+DC7HJcLOXIy45E5VcbXH3STqC/VzUiZGCo0YAoFNdL3z8RhVcfpCCHKWAXkEVYGWh27LAREREwItXeuHIDyIi3TAJUgpuPc5LglQpV7RWARGVbT4uttj8cbMS98/65yqWHLhVpH37+ThsPx+n3v5yC1edISIi3QlCyQkQjvwgItIdkyClIL/QYiVXJkGITM3YDjUxtkNNCIKAG49ScfD6Y0zbfgUA4CC3xLOsXPWxzWfvQz0fJ6Rm5uDW4zR0DPDEt+/UZ8FVIiIqUXq2Up0A4UovRESvj0kQA8tVqhD7NAMAUMmVvwATmSqJRILqHg6o7uGA/2tRGenZubCxskBqVi7qT42AUpW3jOe5e0nqc3ZciMeOCzsBAO1re2LnpXjM7BHAIqtERATg+TSYfNtGNIednN13IqLXwX9FDSwuORO5KgEySyk8HKzFDoeISkn+SlAO1la4NaMjTtxJxIpD0QiooEBGthKL9t3UOH7npXgAwLjNFzBu8wVUdLFF+zqeOHb7CZpVdcPw1lXVHd+UzBw4yC356x+ZlYMHD8LW1hZBQUHqtpMnTyI9PR0tW7YUMTIiw8ifBpNf/NTfyxG2Mo4cJCJ6XUyCGNjdJ3lTYXycbThfk8iMNfJ1QSNfF/X2iLZVceh6AsZuvoDK5ewgCAJO3Hmq3h+TmI6lB28DAM7dTy5SeBUALk0J4y+CZDbeeOMN1KxZE5cvX1a3DRw4ENevX4dSqRQxMiLDyMgpbhoM+5JERK+LvWcDy68HUtGFU2GI6Dm5pQVC/T1w0t9Do33Tqfv47I9zsJNZQCkIyMxRlXiNwK8jcHbSm7CxsoAggIlWMmnR0dGwsrLSaIuMjEROTo5IEREZjiAISM9+ntxj8VMiIv1hEsQAZAWWwWQShIh08XbDCni7YQX1tiAIuPMkHbFPM3A7IRX+Xo7oueQoACA7VwX/Sbs0zr/6dXtYW1ngSWoWlIIAd07DIxNRqVKlIm3ly5cXIRIiw8lPfvRaclRjNRgOACEi0h8mQQzAyuL5J1Vccl5RVG9nG7HCISIjJpFI4OdmBz83OzSv5gYAOPZlWzSeEVns8TUn7izSVq+CAncT0zEoxBfhb1Y3aLxERPRq8ougFl4KN6iSM2y4ihgRkd4wCWIAVpbPR4LEJWcCADwVTIIQkX54OFojemZHpGcrcfdJOp6kZWHgiuMlHn/ufjIA4LvIG/gu8gbCantgyYCGnFtOZZqzs7PWf0cTExMNHA2R4eSP/ihYBBXIK4T6x7AQ2Mq4DC4RkT4xCWIAVgWmw8T/lwTxUnBIOhHpj0QigZ3cEv7lHQEAd2Z1wqm7iTh9NwkNKjkBkGDy1otwtpXhWHQisnOf1xbZdekh/MbtgEQC/NCvAToGeAHI64izo01lxYIFC8QOgcjgBEFAzyVHceru88LY+UVQmfwgIjIM0ZMgP/zwA+bOnYv4+HjUq1cP33//PYKDg0s8fsGCBVi8eDFiYmLg5uaGnj17YubMmbC2LjtJhvyaIIIgqJMgno5lJz4iMk0NK7mgYaXnK9BsG9FCY//uS/H4YM0p9bYgAB+vPQ03ezkSUrPU7Xs/a4XK5ewNHzDRCwwePNhg1zbFvgcZp/RspUYCxN/LkUVQiYgMTPryQwxnw4YNCA8Px+TJk3H69GnUq1cPYWFhePToUbHHr1u3DmPHjsXkyZNx5coVrFixAhs2bMCXX35ZypG/WH5NkMS0bGQr83599WAShIhE1q62J6JndkTEpy3Rs0Dx1YIJEABoM+8Azt9PQkJqFpLSs0s7TKJi3bp1CxMmTEDfvn3V/YR//vkHly5d0uk6ptr3IOOTXwMk38kJodg+kgkQIiJDE3UkyLfffouhQ4diyJAhAIAlS5Zg+/bt+PnnnzF27Ngixx85cgTNmjVDv379AAC+vr7o27cvjh07Vqpxv0z+dJj4lLxRIG72MsgsRc03EREByJtGU83DAd/0qoc3/T2w7+ojNKuaV3D113/v4lh0Xm2FrosOFzn30Bet4cOVrkgEBw4cQIcOHdCsWTMcPHgQ06dPh7u7O86dO4cVK1Zg48aNWl/LVPseZFxUKgFtvz2grgHi7+UIVzsZp78QEZUC0b6ZZ2dn49SpUwgNDX0ejFSK0NBQHD16tNhzmjZtilOnTuH48bwCgLdv38aOHTvQsWPHUolZW+okiLooKkeBEFHZE1bbE7Perosu9cqjS73y2PBhCLydSi7i3GLOPrz57QH4jt2OrecelGKkZO7Gjh2LadOmISIiAjKZTN3epk0b/Pvvv1pfx5T7HmQ8BEHQKIKaXwOECRAiotIh2kiQhIQEKJVKeHh4aLR7eHjg6tWrxZ7Tr18/JCQkoHnz5hAEAbm5uRg2bNgLh6RmZWUhK+v5UO+UlJQSj9WX/OkwcawHQkRG5vDYNshVqiAASM9S4trDZxi3+TxuPc7rrN94lAoAGPnbGTxJzcKQZn4iRkvm4sKFC1i3bl2Rdnd3dyQkJGh9HVPue1DZJwgCMnKUSM9WqpfB9XOzQ2R4K06BISIqRTqPBMnKysLBgwexZs0a/PTTT9i8eTOio6MNEVsR+/fvx4wZM/Djjz/i9OnT2Lx5M7Zv346vv/66xHNmzpwJhUKhfvj4+Bg8Tsv/RoI8Sc2bS1/OQW7wexIR6YulhRRWFlIobK0Q7OeCyM/ewKJ+gRjQpCLa1nRXHzfl78vwHbsdLebsRWaOUsSIydQ5OTkhLi6uSPuZM2fg7e1t0HsbS9+Dyqa85W9zkZaVi07fRcF/0i4ETduj3s8iqEREpU/rkSCHDx/GwoUL8ffffyMnJwcKhQI2NjZITExEVlYWKleujA8++ADDhg2Dg4PDS6/n5uYGCwsLPHz4UKP94cOH8PT0LPaciRMnYuDAgfi///s/AEBAQADS0tLwwQcfYPz48ZBKi+Z0xo0bh/DwcPV2SkqKQTojKkFQP7f478PsSVrer0CudkyCEJFx61y3PDrXLQ8A2H4+DsPXnVbvu5eYgZoTd+L0xDfhYicr6RJEr6xPnz4YM2YM/vjjD0gkEqhUKhw+fBijR4/GoEGDtL6OqfU9qGwrbvnbgoIqOcNWZlHKURERkVYjQbp27YrevXvD19cXu3fvxrNnz/DkyRPcv38f6enpuHHjBiZMmIDIyEhUr14dERERL72mTCZDw4YNERkZqW5TqVSIjIxESEhIseekp6cX6WxYWOR9eAgFkhAFyeVyODo6ajwMIVf1/P6WUgnO3UvC6qN3AQCu9vxSQESmo1NdL1yaEoY3apTTaG/wdQTqfrULrb/Zj4/XnsLD/4pDE72uGTNmoGbNmvDx8UFqair8/f3RsmVLNG3aFBMmTND6OqbW96CySxAEPEnLLpIA8fdyxKUpYbg8NQx/DAthHRAiIhFoNRKkU6dO2LRpE6ysrIrdX7lyZVSuXBmDBw/G5cuXix2yWpzw8HAMHjwYQUFBCA4OxoIFC5CWlqau2D5o0CB4e3tj5syZAIAuXbrg22+/RWBgIBo3boybN29i4sSJ6NKli7pDIhalUnMkSLcfnq+s4GrPkSBEZFrs5JZYNSQYyek5aDAtAsr/EsEpmblIycxFdEIadlyIx9gONbHv6iO0rumOsNqe8HOzEzlyMkYymQzLli3DxIkTcfHiRaSmpiIwMBDVqlXT+Vqm1Pegsil/6dv8uh9A3vK3tjIL2FhZMPFBRCQyrZIgH374odYX9Pf3h7+/v1bH9u7dG48fP8akSZMQHx+P+vXrY+fOneqCZTExMRq/vkyYMAESiQQTJkxAbGwsypUrhy5dumD69Olax2cohUeCFOTG4eFEZKIUtla4Ma0D5u+5juWHouFqL8P9pxnq/bP+ySs2eSw6EbP+uYohzXwxuUttscIlI1exYkX1tJJX/SJpSn0PKnsKL30L5E174fK3RERlh0QoaSyniUpJSYFCoUBycrJeh6cWnCMfWssDe648n2+865OWqOH58jopRESmQKUSUPnLHS885tPQ6hgVqvuv+GRc9PmZu2LFCsyfPx83btwAAFSrVg2ffPKJulZHWWaovgeVLYIgoNN3URorv2wb0Ry2Mo7+ICIqDdp+3uptidxz586hQYMGUCrNc4WAXJVK/Tw5I1tjH2uCEJE5kUoluDOrk0bbX2djMWr9WfX2/D3XsfTgLVz4KowrI9BLTZo0Cd9++y1GjBihrt1x9OhRfPrpp4iJicHUqVNFjpAIXPqWiMhI6C0JApRcIMwcKAtMhzlxR7MIlrMtkyBEZN661fdGpwAvrDpyB9O2XwEApGUrMWrDWbwTVAEtqpV7yRXInC1evBjLli1D37591W1du3ZF3bp1MWLECCZBSHT5dUDycelbIqKyS+skSI8ePV64Pzk52ayH+hWsCVKYBT8EiYhgaSHF/7WojA4BXmg2ay8A4O9zD/D3uQdwtLZESmYuAGBOz7p4J4jLidJzOTk5CAoKKtLesGFD5ObmihAR0XOF64D4ezly6VsiojJMqyVyAeDvv/9GZmYmFApFsQ97e3tDxlnmKV+QBCEioue8nWwwvmMtjbb8BAgAfLHxPHzHbsfYTefNeoQhPTdw4EAsXry4SPvSpUvRv39/ESIicycIAtKzc5GWlauRAMmvA2LOPwwSEZV1Wo8EqVWrFt5++228//77xe4/e/Ystm3bprfAjM2LRoIQEZGmoS0rY2jLyrgYm4zdlx/i7L0k5OSqcPT2E/Ux60/cw/oT99CprhcW9Q3klwozEx4ern4ukUiwfPly7N69G02aNAEAHDt2DDExMRg0aJBYIZKZKm4JXIB1QIiIjIXWSZCGDRvi9OnTJSZB5HI5KlasqLfAjI1SqSq23cFar2VXiIhMSh1vBep4K9TbqVm5+PvcA4zbfEHdtv18HLafj8PVr9vD2opDzM3FmTNnNLYbNmwIALh16xYAwM3NDW5ubrh06VKpx0bmq7glcIG8KTCsA0JEZBy0/oa+ZMmSF678UqtWLURHR+slKGNU0kgQhY1VKUdCRGS87OWW6BtcEX0a+eBibAq6LHpeaHDtsRi839xPxOioNO3bt0/sEIjU8qa/KNH5+6hipr4ANlZcBpeIyFhonQSRy+WGjMPolVQTxMmWSRAiIl1JJBIEVFAgemZH+I3bAQD4ettlrD12F7cf530BiRrTGhWcbcUMk4jMgCAI6LnkKE7dfb76H6e+EBEZL87V0BOOBCEi0j+JRIIZbwXgyy1502PyEyAA0Hx23kgBC6kEo9vVwEdvVBElRiodJ0+exO+//46YmBhkZ2dr7Nu8ebNIUZE5SM9WaiRAOPWFiMi4ab06DL1YSSNBmAQhIno9/RpXxMI+9TG0hR9mvBVQZL9SJWD2zqvwHbsdCalZIkRIhrZ+/Xo0bdoUV65cwZYtW5CTk4NLly5h7969UCgUL78A0SsSBAG9lhxVb5+cEIrtI5kAISIyZhwJoicljwSRlXIkRESmp1t9b3Sr7w0gLymSkpmDmTuuQG5pgVVH7qiPC5q2B/5ejlg1pBGSMnJwLDoRTjZWaFWjHBytmZQ2VjNmzMD8+fMxfPhwODg4YOHChfDz88OHH34ILy8vscMjEyUIAp6kZatXgfH3coSrnYy1P4iIjByTIHqi4kgQIqJS42hthZk96gIAPnqjChrPiFTvuxyXguAC24XN6hGAPsHmu5qZMbp16xY6deoEAJDJZEhLS4NEIsGnn36KNm3aYMqUKSJHSKamuDogfwwLYQKEiMgEcDqMnrzbzLfY9qEtuJIBEZEheThaI3pmR/w0sKFWx4/dfAFn7yUZNijSK2dnZzx79gwA4O3tjYsXLwIAkpKSkJ6eLmZoZKIK1wEJquQMWxmX6CYiMgWvNBJk9erVUCgU6Natm7rtr7/+QnJyMgYNGqS34IyJm70ch75ojRZzni/p90O/BnC156o6RESGJpFIEFbbE3dmdUKuUoUcpQC5pRRSqQT3EtPx5vwDyMxRqY/v/sNhfPZmdQx7owqsLPh7QFnXsmVLREREICAgAL169cKoUaOwd+9eREREoG3btmKHRyZGpRLQ+fvny3OfnBDKaTBERCZEIghC8fM4XkAqlaJmzZq4fPmyuq1mzZq4ceMGlEqlXgPUt5SUFCgUCiQnJ8PR0VGv177/NF29WgEArBzSCK1ruOv1HkRE9Or6Lv0XR28/0Wg7MrYNyjvZiBSRadPXZ25iYiIyMzNRvnx5qFQqzJkzB0eOHEG1atUwYcIEODs76zFq/TNk34P0RxAEpGcr0fn7KEQn5K1E5e/liO0jmzMBQkRkBLT9vH2lkSAqlapI29WrV1/lUibN1orDJomIypJ1QxvDb9wOjbams/aieVU3LB7QAA4snlomubi4qJ9LpVKMHTtWxGjIFOWP/sgvggoAfm522DaCCRAiIlPDwqgGZCfn20tEVJZIJBLcmZVXYHP42tPYfiEOABB1MwFLDtzC52E1xQyPCkhJSXn5Qf/h6Ap6HSqVgLbfHlCP/gDyRoBsG8GlcImITJFW39LZEXk1NiygRURUZi3qF4jWp90x+o9zAIAf9t3CD/tu4czEN+Fsx+XNxebk5PTSX+AFQYBEIinzU3GpbCpu+kv+6A9bmQVHgBARmSitkiDsiLwaVhEnIiq7JBIJejasACsLCUatP6tuD/w6Qj1ahMSzb9++lx9E9IpKmv4SGd6Koz+IiEycVkkQdkReja0Vp8MQEZV13ep7o30dT9SYsFPd1n7BQWz4MAQKG9YIEUurVq3EDoFMlCAUTYBw+gsRkfnQ6ls6OyKvhtNhiIiMg9zSAjemd0C18f8AAK7GP0O9KbtxeGwbeHPlGCKTkp6tVCdAOP2FiMj8SF/lpEOHDmHAgAFo2rQpYmNjAQBr1qxBVFTUS840H5ZSCWSWr/T2EhGRCKwspFgyoKFGW7NZe/HJ+jPIURZdFY2IjE/+NJh820Y0h53ckgkQIiIzovO39E2bNiEsLAw2NjY4ffo0srKyAADJycmYMWOG3gM0VhwFQkRkfNrX8cSdWZ3QvX55ddufZx/g7L0k8YIiIr0ovAqMv5cj67cREZkhnZMg06ZNw5IlS7Bs2TJYWT2fK92sWTOcPn1ar8EZM36oEhEZrwV9AvFj/wbq7V5LjuJZZo6IERHR68ivA1J4FRiOACEiMj86J0GuXbuGli1bFmlXKBRISkrSR0wmwU7GoqhERMasY4CXRj2QgK924/7TdBEjMm+5ubnYs2cPfvrpJzx79gwA8ODBA6SmpoocGRmDjBzNOiBcBYaIyHzpnATx9PTEzZs3i7RHRUWhcuXKegnKFMitOBKEiMjY/fp/jTW2m8/eh+az94oUjfm6e/cuAgIC0K1bNwwfPhyPHz8GAMyePRujR48WOToq6wRBQHq2Ur3NVWCIiMybzkmQoUOHYtSoUTh27BgkEgkePHiAtWvXYvTo0fjoo48MEaNRsrZiUVQiImPn52aHO7M6oWOAp7rt/tMMbDgRI2JU5mfUqFEICgrC06dPYWPzfHTOW2+9hcjISBEjo7JOpRLQ6bsoBE3bo27jDBgiIvOm85yNsWPHQqVSoW3btkhPT0fLli0hl8sxevRojBgxwhAxGiVrS44EISIyFd/3bYCeDR/hvVUnAQBjNl3AO0E+rCdQSg4dOoQjR45AJpNptPv6+qpXqSMqLL8OSP40GAAIquQMG47WJSIyazoPV5BIJBg/fjwSExNx8eJF/Pvvv3j8+DG+/vprQ8RntOQcCUJEZDIspBK0qemB8R1rqds++pXFwEuLSqWCUqks0n7//n04ODiIEBEZg8J1QC5NCcMfw0KYvCQiMnOv/E1dJpPBwcEBXl5esLe312dMJkFuySQIEZGpGdryee2rnZfikZzOFWNKQ7t27bBgwQL1tkQiQWpqKiZPnoyOHTuKFxiVaYLw/Pm2Ec1hJ7dkAoSIiHRPguTm5mLixIlQKBTw9fWFr68vFAoFJkyYgJwcdgbzWXOoJRGRSVo39Hmx1HpTdyNHqRIxGvMwb948HD58GP7+/sjMzES/fv3UU2Fmz54tdnhUBqlUeVNh8jH3QURE+XSuCTJixAhs3rwZc+bMQUhICADg6NGj+Oqrr/DkyRMsXrxY70EaI44EISIyTSGVXWEhlUCpyvuZ+b1VJ7Dm/cYvOYteR4UKFXDu3DmsX78e58+fR2pqKt5//330799fo1AqEZCXAGn77QFEJ6QBAPy9HFkHhIiI1HROgqxbtw7r169Hhw4d1G1169aFj48P+vbtyyTIf+QsjEpEZJIkEgluzegI37HbAQCHbiSg8Yw9eJiShX/HtYWnwlrkCE1PZmYmrK2tMWDAALFDoTKucALEz80O20Y05zQYIiJS03m4glwuh6+vb5F2Pz+/IlXbzRmXyCUiMm0nxoeqnz9MyQIANJkZiSO3EsQKyWS5u7tj8ODBiIiIgErF6UdUvOISIJHhrSCVMgFCRETP6fxN/X//+x++/vprZGVlqduysrIwffp0/O9//9NrcMaMI0GIiExbOQc5Vg5phJbVy2m091t2DNm5/KKuT7/88gvS09PRrVs3eHt745NPPsHJkyfFDovKECZAiIhIW1pNh+nRo4fG9p49e1ChQgXUq1cPAHDu3DlkZ2ejbdu2+o/QSHEkCBGR6Wtdwx2ta7gDAD5YfRK7Lz8EAEz88yJm96wrZmgm5a233sJbb72FZ8+eYePGjfjtt9/QpEkTVK5cGQMGDMCkSZPEDpFEJAh5RVCZACEiIm1o9U1doVBoPN5++2107twZPj4+8PHxQefOndGjRw8oFApDx2s0OBKEiMi8LB0UpH6+4eQ9XH6QImI0psnBwQFDhgzB7t27cf78edjZ2WHKlClih0Uiy8hR4nJc3v9vTIAQEdHLaDUSZOXKlYaOw+TIORKEiMjs/NCvAYavOw0A6PjdITTydcYfw5qKHJXpyMzMxNatW7Fu3Trs3LkTHh4e+Pzzz8UOi0QmCM+fbxvRnAkQIiJ6IX5TNxBrjgQhIjI7nep6oWu98urtE3eewnfsdgxYfgxPUrNecCa9yK5duzB48GB4eHjgo48+goeHB3bv3o27d+9i1qxZYodHIhIEAb2WHFVvcxEYIiJ6GZ2XyAWAjRs34vfff0dMTAyys7M19p0+fVovgRk7jgQhIjJP3/UNxNfd6qDe1N3qtqibCWg4bQ/Of9UOjtZWIkZnnN566y107twZq1evRseOHWFlxfeQ8hScCuPv5QgbK/4IRUREL6bzN/XvvvsOQ4YMgYeHB86cOYPg4GC4urri9u3b6NChgyFiNEpySyZBiIjMlcLWCqcmhBZpr/vVbgRNi8DSg7dEiMp4PXz4EL///ju6devGBAipCYKA9GylevuPYSGQcCgIERG9hM7f1H/88UcsXboU33//PWQyGb744gtERERg5MiRSE5ONkSMRknOXyKIiMyaq70cd2Z1wp1ZnTQS4wmp2Zix4yp8x24XMbqyLyXleWFZQRCQkpJS4oPMjyAI6LnkKIKm7VG3Mf9BRETa0DkJEhMTg6ZN84q82djY4NmzZwCAgQMH4rffftNvdEZMbsGRIERElOfCV2HoG1wR9SporqK29thdkSIq+5ydnfHo0SMAgJOTE5ydnYs88tvJ/KRnK3Hq7lP1dlAlZ06FISIirehcE8TT0xOJiYmoVKkSKlasiH///Rf16tVDdHQ0hILluc0ca4IQEVE+maUUM3sEAACyc1WoPuEfAMD4LRcxfstFnJvUDgpbTvMoaO/evXBxcQEA7Nu3T+RoqCwpXAz15IRQuNrJOBWGiIi0onMSpE2bNti6dSsCAwMxZMgQfPrpp9i4cSNOnjyJHj16GCJGo2TFkSBERFQMmaUUU7rWxuStl9Rt+UVUb8/oyOU9/9OqVSv1cz8/P/j4+BT5kisIAu7du1faoZGIBEHAk7RsjWKoTIAQEZEudE6CLF26FCqVCgAwfPhwuLq64siRI+jatSs+/PBDvQdorGQsjEpERCUY3NQX7et4ovGMSI32d346io0fNRUpqrLLz88PcXFxcHd312hPTEyEn58flEplCWeSKVGpBHT+PkqdAAFYDJWIiHSncxJEKpVCKn3+Bb9Pnz7o06ePXoMyBRwJQkREL+LhaI07szpBqRJQ5csdAICTd5/iXmI6fFxsRY6ubBEEodgvuqmpqbC2thYhIiptglA0ARJUyRm2MtYBISIi3WiVBDl//rzWF6xbt+4rB2NKZEyCEBGRFiykEkSNaY3ms/PqXrSYsw8bPmiCxpVdRY5MfOHh4QAAiUSCiRMnwtb2eXJIqVTi2LFjqF+/vkjRUWnKyFGqEyB+bnbYNqI5bGUWHAVCREQ60yoJUr9+fUgkkpcWPpVIJByS+h9OhyEiIm1VcLZFJVdb3H2SDgDovfRfAMD5r9rB0dp8C6aeOXMGQN4ogAsXLkAmk6n3yWQy1KtXD6NHjxYrPCpFBbug20Y0h51c58HMREREALRMgkRHRxs6DpOgVD3/hOZIECIi0sXW/zXHqPVnsP/aY3Vb3a92486sTiJGJa78VWGGDBmChQsXwtHRUeSISAyFV4Ph4A8iInodWiVBKlWqZOg4TEKOUqV+zpEgRESkC4WNFVYNCUaOUoVq4/9Rt/uO3Y7LU8NgKzPfX75XrlwpdggkooJTYfy9HGFjxTogRET06sy3R2UAWbnPkyAsjEpERK/CykKKY1+21Vg5xn/SLvRo4I0hTf0QUEEhYnSlp0ePHli1ahUcHR3Ro0ePFx67efPmUoqKxFBwKgxXgyEiotfFb+p6lK2RBOEHNBERvZr8lWMKftfbfDoWXRZFYd+1R+IFVooUCoX6y65CoXjhg0wXp8IQEZG+cSSIHlkWWDqYv1IQEdHrujK1Pd5deRz/3k5Utw1ZeQKXpoSZfGHIglNgOB3GfKVncyoMERHpF0eC6FEdb0e8E1QBn71ZXexQiIjIBFhbWWD9ByG4M6sTRrSpqm6vPXkXTt5JfMGZpiUjIwPp6enq7bt372LBggXYvXu3iFGRoalUAjp/H6Xe5lQYIiLSh1dKgiQlJWH58uUYN24cEhPzOmGnT59GbGysXoMzNhKJBHN61sOIttXEDoWIiExMeKEEe88lR+E7djv+PvdApIhKT7du3bB69WoAeX2Q4OBgzJs3D926dcPixYtFjo4MQRDyEiDRCWkA8kaB2Mo4CoSIiF6fzkmQ8+fPo3r16pg9eza++eYbJCUlAcgrSjZu3Dh9x0dERETIS7TfmdUJU7rW1mgf8dsZCAUrR5qg06dPo0WLFgCAjRs3wtPTE3fv3sXq1avx3XffiRwdGULBaTB+bnbYNqI5R4EQEZFe6JwECQ8Px7vvvosbN27A2tpa3d6xY0ccPHhQr8ERERGRpsFNfXH16/YY0sxX3Tb+z4viBVQK0tPT4eDgAADYvXs3evToAalUiiZNmuDu3bsiR0f6VrgY6rYRzSGVMgFCRET6oXMS5MSJE/jwww+LtHt7eyM+Pl4vQREREVHJrK0sMLnL8xEh647FIDEtW8SIDKtq1ar4888/ce/ePezatQvt2rUDADx69AiOjo4iR0f6VrgYKqfBEBGRPumcBJHL5UhJSSnSfv36dZQrV04vQREREdHLbRvRXP28wdcR+GHfTRGjMZxJkyZh9OjR8PX1RXBwMEJCQgDkjQoJDAwUOTrSp8KjQFgMlYiI9E3nJEjXrl0xdepU5OTkAMiboxwTE4MxY8bg7bff1nuAREREVLw63gq8UeP5DxBzd13DgeuPRYzIMHr27ImYmBicPHkSu3btUre3bdsW8+fPFzEy0jeOAiEiIkPTOQkyb948pKamwt3dHRkZGWjVqhWqVq0KBwcHTJ8+3RAxEhERUQl+HtwIH71RRb297OBtEaMxHE9PTwQGBuLBgwe4f/8+ACA4OBg1a9YUOTLSF44CISKi0mCp6wkKhQIRERGIiorC+fPnkZqaigYNGiA0NNQQ8REREdELSKUSjGlfE9fin2Hv1UeIupkAlUowqUKSKpUK06ZNU/8QAwAODg747LPPMH78eEilOv+mQ2WMIAh4kpbNUSBERGRwOvca7t27BwBo3rw5Pv74Y3zxxRevlQD54Ycf4OvrC2trazRu3BjHjx9/4fFJSUkYPnw4vLy8IJfLUb16dezYseOV709ERGQK3m5QQf186OqTIkaif+PHj8eiRYswa9YsnDlzBmfOnMGMGTPw/fffY+LEiTpfj32PskUQBPRcchRB0/ao2zgKhIiIDEXnkSC+vr5o3rw5BgwYgJ49e8LZ2fmVb75hwwaEh4djyZIlaNy4MRYsWICwsDBcu3YN7u7uRY7Pzs7Gm2++CXd3d2zcuBHe3t64e/cunJycXjkGIiIiU9AxwFP9PPLqIwiCYDJfIn/55RcsX74cXbt2VbfVrVsX3t7e+Pjjj3Wajsu+R9mTkaPEqbtP1dtBlZw5CoSIiAxGIgiCoMsJZ86cwbp167B+/Xo8fvwY7du3x4ABA9ClSxfI5XKdbt64cWM0atQIixYtApA33NXHxwcjRozA2LFjixy/ZMkSzJ07F1evXoWVlZVO98qXkpIChUKB5ORkLqtHREQmZdeleHy45pR6+9aMjrAQcVqMvj5zra2tcf78eVSvXl2j/dq1a6hfvz4yMjK0vhb7HmVPWlYuak/OK3h7ckIoXO1kJpPAIyKi0qPt563O02ECAwMxd+5cxMTE4J9//kG5cuXwwQcfwMPDA++9957W18nOzsapU6c0ptJIpVKEhobi6NGjxZ6zdetWhISEYPjw4fDw8ECdOnUwY8YMKJXKEu+TlZWFlJQUjQcREZEpCq3lobG9/kSMSJHoV7169dRJi4IWLVqEevXqaX0d9j3KnsLFUG1lFkyAEBGRQb1yJTGJRILWrVtj2bJl2LNnD/z8/PDLL79ofX5CQgKUSiU8PDQ7bB4eHoiPjy/2nNu3b2Pjxo1QKpXYsWMHJk6ciHnz5mHatGkl3mfmzJlQKBTqh4+Pj9YxEhERGRMLqQSXpoSpt8dvuYjlh4x/tZg5c+bg559/hr+/P95//328//778Pf3x6pVqzB37lytr8O+R9lTeElcGytOgyEiIsN65STI/fv3MWfOHNSvXx/BwcGwt7fHDz/8oM/YilCpVHB3d8fSpUvRsGFD9O7dG+PHj8eSJUtKPGfcuHFITk5WP/ILuxIREZkiO7klvurir96etv0K3lt1AhnZJY9cKOtatWqF69evo0ePHkhKSkJSUhJ69OiBa9euoUWLFga9N/sehsMlcYmISAw6F0b96aefsG7dOhw+fBg1a9ZE//798ddff6FSpUo6XcfNzQ0WFhZ4+PChRvvDhw/h6elZ7DleXl6wsrKChcXzXwlq1aqF+Ph4ZGdnQyaTFTlHLpfrXKuEiIjImL3bzA/pOUrM2XkNALD36iO0mrsPx8cb33L2d+7cQUREBLKzs9GnTx/UqVPnla/FvkfZUngUCIuhEhFRadB5JMi0adPQuHFjnDp1ChcvXsS4ceN0ToAAgEwmQ8OGDREZGaluU6lUiIyMREhISLHnNGvWDDdv3oRKpVK3Xb9+HV5eXsV2QoiIiMzVx29UxbqhjdXbj55l4Wq8cdWm2LdvH2rXro0PP/wQI0aMQIMGDfDrr7++8vXY9yg7OAqEiIjEonMSJCYmBnPmzNGpEFlJwsPDsWzZMvzyyy+4cuUKPvroI6SlpWHIkCEAgEGDBmHcuHHq4z/66CMkJiZi1KhRuH79OrZv344ZM2Zg+PDhrx0LERGRqWlaxQ0XC9QI+XrbZRGj0d3EiRPx5ptvIjY2Fk+ePMHQoUPxxRdfvNY12fcoGzgKhIiIxKLVdJjz58+jTp06kEqluHDhwguPrVu3rtY37927Nx4/foxJkyYhPj4e9evXx86dO9UFy2JiYiCVPs/T+Pj4YNeuXfj0009Rt25deHt7Y9SoURgzZozW9yQiIjIn9nJL1PNxwrl7STh88wkEQTCaX9wvXryII0eOwMvLCwAwd+5c/PTTT3jy5AlcXV1f6Zrse4iPo0CIiEhMEkEQhJcdJJVKER8fD3d3d0ilUkgkEhQ8LX9bIpG8cMm4skDbtYOJiIhMReSVh3j/l5MAgNBa7lg+uFGp3Pd1P3ML9j/yOTg44Ny5c6hcubI+QzUo9j00pWfnwn/SLgB5o0C2j2zOJAgREb02bT9vtRoJEh0djXLlyqmfExERkfFoW+v5krB7rjzCgOXH8Ov/NX7BGWXHrl27oFAo1Nv5NTwuXryobuvatasYodErKvjzG0eBEBFRadMqCVKw8Ondu3fRtGlTWFpqnpqbm4sjR468UpFUIiIiMqx/RrVAh4WHAABRNxMQm5QBbycbkaN6ucGDBxdp+/DDD9XPjWEUKj1XeCoM8x9ERFTadC6M2rp1ayQmJhZpT05ORuvWrfUSFBEREelXLS9HjSKpX2w8J2I02lGpVC99MAFiXAoXRLWxYkFUIiIqXTonQUoqqPbkyRPY2dnpJSgiIiLSP3u5JeSWeR/9h28+ETkaMjcqlYDO30eptzkVhoiIxKDVdBgA6NGjB4C8Yafvvvsu5HK5ep9SqcT58+fRtGlT/UdIREREerOoXwMMXZ1XJPVhSiY8HK1Fjqh4//77L5o0aaLVsenp6YiOjkbt2rUNHBW9KkHIS4BEJ6QB4LK4REQkHq1HgigUCigUCgiCAAcHB/W2QqGAp6cnPvjgA/z666+GjJWIiIheU30fJ/XzxjMixQvkJQYOHIiwsDD88ccfSEtLK/aYy5cv48svv0SVKlVw6tSpUo6QdFFwGoyfmx22jeCKMEREJA6tR4KsXLkSAODr64vRo0dz6gsREZERKucgh42VBTJy8mppnLqbiIaVXESOqqjLly9j8eLFmDBhAvr164fq1aujfPnysLa2xtOnT3H16lWkpqbirbfewu7duxEQECB2yFSCwtNgto1oDqmUCRAiIhKHRBAKLlRm+rRdO5iIiMhUpWblos7kXQAAKwsJbkzvaJD76Osz9+TJk4iKisLdu3eRkZEBNzc3BAYGonXr1nBxKXsJnMLMue+hUglo++0BjWkw20dyFAgREemftp+3Wo0EadCgASIjI+Hs7IzAwMAXfnCdPn1a92iJiIio1NjLLfF+cz+siIpGjlJAVq4ScsuyW58hKCgIQUFBYodBOipcB4TTYIiIqCzQKgnSrVs3dSHU7t27GzIeIiIiKgWjQqthRVQ0AODWozT4lzevEQpkeIXrgESGt+I0GCIiEp1WSZDJkycX+5yIiIiMk6O1FRytLZGSmQuVec2MpVIgCAJ6LTmq3mYdECIiKiu0Xh0m371793D//n319vHjx/HJJ59g6dKleg2MiIiIDCs/9XHg+mNR4yDTU3AUCJfDJSKiskTnJEi/fv2wb98+AEB8fDxCQ0Nx/PhxjB8/HlOnTtV7gERERGQYzzJzAQB7rz4SORIyJYVHgfwxLIR1QIiIqMzQOQly8eJFBAcHAwB+//13BAQE4MiRI1i7di1WrVql7/iIiIjIQNrWdAcAnLr7FFm5SpGj0U5mZqbYIdBLZORwFAgREZVdOidBcnJy1EVS9+zZg65duwIAatasibi4OP1GR0RERAbzefsa6udRNxJEjOTFVCoVvv76a3h7e8Pe3h63b98GAEycOBErVqwQOTp6EY4CISKiskbnJEjt2rWxZMkSHDp0CBEREWjfvj0A4MGDB3B1ddV7gERERGQYNT2frwiTnasSMZIXmzZtGlatWoU5c+ZAJpOp2+vUqYPly5eLGBm9DPMfRERU1uicBJk9ezZ++uknvPHGG+jbty/q1asHANi6dat6mgwREREZh2BfF7FDeKnVq1dj6dKl6N+/Pywsnk+tqFevHq5evSpiZERERGRstFoit6A33ngDCQkJSElJgbOzs7r9gw8+gK2trV6DIyIiIoqNjUXVqlWLtKtUKuTk5IgQERERERkrnZMgAGBhYYHc3FxERUUBAGrUqAFfX199xkVEREQEAPD398ehQ4dQqVIljfaNGzciMDBQpKiIiIjIGOmcBElLS8OIESOwevVqqFR584ctLCwwaNAgfP/99xwNQkRERHo1adIkDB48GLGxsVCpVNi8eTOuXbuG1atXY9u2bWKHR0REREZE55og4eHhOHDgAP7++28kJSUhKSkJf/31Fw4cOIDPPvvMEDESERGRgT1JyxY7hBJ169YNf//9N/bs2QM7OztMmjQJV65cwd9//40333xT7PCoEEEQOwIiIqKS6TwSZNOmTdi4cSPeeOMNdVvHjh1hY2ODd955B4sXL9ZnfERERGRACalZAID91x5jQJNKLzlaPC1atEBERITYYdALCIKA9GwlOn8fJXYoREREJdJ5JEh6ejo8PDyKtLu7uyM9PV0vQREREVHpqOpu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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "precision, recall, _ = precision_recall_curve(y_test, y_pred)\n",
        "df_metrics.loc['LogReg Classifier'] = [\n",
        "      auc(recall, precision),\n",
        "      roc_auc_score(y_test, y_pred),\n",
        "      best_C_lr\n",
        "]\n",
        "\n",
        "df_metrics"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "kaOw3ceWqkc7",
        "outputId": "bfc79801-b92b-494a-aff1-459cd7d72770"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                     AUC_PR   AUC_ROC  reg_const\n",
              "Random Classifier  0.752833  0.500000    0.00000\n",
              "SVM Classifier     0.814975  0.847893    0.03125\n",
              "LogReg Classifier  0.829350  0.847783    0.03125"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-47e96652-764e-4e65-9687-d07bdcdb6d34\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AUC_PR</th>\n",
              "      <th>AUC_ROC</th>\n",
              "      <th>reg_const</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Random Classifier</th>\n",
              "      <td>0.752833</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.00000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SVM Classifier</th>\n",
              "      <td>0.814975</td>\n",
              "      <td>0.847893</td>\n",
              "      <td>0.03125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LogReg Classifier</th>\n",
              "      <td>0.829350</td>\n",
              "      <td>0.847783</td>\n",
              "      <td>0.03125</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47e96652-764e-4e65-9687-d07bdcdb6d34')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-47e96652-764e-4e65-9687-d07bdcdb6d34 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-47e96652-764e-4e65-9687-d07bdcdb6d34');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e58ea0d3-fa2c-4c55-91f9-7cc36606909a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e58ea0d3-fa2c-4c55-91f9-7cc36606909a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e58ea0d3-fa2c-4c55-91f9-7cc36606909a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_metrics",
              "summary": "{\n  \"name\": \"df_metrics\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"AUC_PR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04066744648083279,\n        \"min\": 0.7528333333333334,\n        \"max\": 0.8293498846429544,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.7528333333333334,\n          0.8149754244617191,\n          0.8293498846429544\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AUC_ROC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.20082450527731208,\n        \"min\": 0.5,\n        \"max\": 0.8478933516349433,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.5,\n          0.8478933516349433,\n          0.8477831152534705\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reg_const\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.018042195912175808,\n        \"min\": 0.0,\n        \"max\": 0.03125,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.03125,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Нарисуйте ROC, PR кривые для тестовой части для всех 3 классификаторов на одном графике"
      ],
      "metadata": {
        "id": "5XSc91dprhu3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import roc_curve\n",
        "\n",
        "fig, ax = plt.subplots(1, 2, figsize=(11, 5))\n",
        "\n",
        "ax[0].set_title(\"PRC\")\n",
        "ax[0].set_ylim(0, 1.1)\n",
        "ax[1].set_title(\"ROC\")\n",
        "ax[1].set_ylim(0, 1.1)\n",
        "\n",
        "# Random Classifier\n",
        "precision, recall, _ = precision_recall_curve(y_test, y_random)\n",
        "ax[0].plot(recall, precision, label=\"Random Classifier\", linestyle='--', color='green')\n",
        "\n",
        "fpr, tpr, _ = roc_curve(y_test, y_random)\n",
        "ax[1].plot(fpr, tpr, label=\"Random Classifier\",linestyle='--', color='green')\n",
        "\n",
        "# SVM\n",
        "svm = SVC(C = best_C, kernel=\"linear\")\n",
        "svm.fit(X_train, y_train)\n",
        "y_pred = svm.decision_function(X_test)\n",
        "scaled_y_pred = (y_pred - y_pred.min()) / (y_pred.max() - y_pred.min())\n",
        "\n",
        "precision, recall, _ = precision_recall_curve(y_test, scaled_y_pred)\n",
        "ax[0].plot(recall, precision, label=\"SVM Classifier\", color='orange')\n",
        "\n",
        "fpr, tpr, _ = roc_curve(y_test, scaled_y_pred)\n",
        "ax[1].plot(fpr, tpr, label=\"SVM Classifier\", color='orange')\n",
        "\n",
        "# LogisticRegression\n",
        "lr = LogisticRegression(C = best_C_lr)\n",
        "lr.fit(X_train, y_train)\n",
        "y_pred = lr.predict_proba(X_test)[:, 1]\n",
        "\n",
        "precision, recall, _ = precision_recall_curve(y_test, y_pred)\n",
        "ax[0].plot(recall, precision, label=\"LogReg Classifier\", color='blue')\n",
        "\n",
        "fpr, tpr, _ = roc_curve(y_test, y_pred)\n",
        "ax[1].plot(fpr, tpr, label=\"LogReg Classifier\", color='blue')\n",
        "\n",
        "plt.tight_layout()\n",
        "ax[0].legend()\n",
        "ax[1].legend()\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 507
        },
        "id": "AhYWGII6rR4A",
        "outputId": "41241e7c-1efe-485c-9268-5e20b7bcef31"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1100x500 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "khlorKXtr1Sy"
      },
      "source": [
        "**Вопрос:** Сравните результаты LR и SVM с точки зрения всех вычисленных критериев качества, объясните различия (если они есть).\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Un_w7BMZIAf2"
      },
      "source": [
        "**Ответ:**  `LogReg Classifier` оказался лучше случайного классификатора во всём, Auc_Roc незначительно меньше, чем у `SVM Classifier`, а Auc_pr больше"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RvWzOe4wP75T"
      },
      "source": [
        "#### __Задание 1.2. Визуализация в подходах SVM, LR__ (0.5 балла)\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kWS1NfYwBbQ_"
      },
      "source": [
        "В названии метода опорных векторов присутствуют некоторые \"опорные векторы\". По сути, это объекты из обучающей выборки, которые задали положение разделяющей гиперплоскости.\n",
        "\n",
        "* Сгенерируйте синтетические данные с помощью `make_classification` __с 2 признаками__, обучите на нём метод опорных векторов. В этот раз воспользуйтесь `SVC(kernel='linear')`, так как только в нём есть информация об опорных векторах, а в `LinearSVC` нет. Не забудьте зафиксировать seed для воспроизводимости\n",
        "\n",
        "* Визуализируйте разделяющую прямую, все объекты и выделите опорные векторы (атрибут `support_vectors_`)."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "id": "qIS-aGxi-Nr0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 75
        },
        "outputId": "0054ddf6-cae7-42e7-e368-8af1f801d2ec"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "SVC(kernel='linear')"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {color: black;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC(kernel=&#x27;linear&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ],
      "source": [
        "X, y = make_classification(\n",
        "    n_samples=10000, n_features=2, n_redundant=0, random_state=42)\n",
        "\n",
        "model = SVC(kernel=\"linear\")\n",
        "model.fit(X, y)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "id": "9jA3GbO9-wcU",
        "outputId": "c4996f95-9648-44e7-ff53-e47e0a145982"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "def plot_svm_2D(X, y, model,  plot_support=True):\n",
        "\n",
        "    #создали сетку\n",
        "    xx = np.linspace(X[:,0].min(), X[:,0].max(), 30)\n",
        "    yy = np.linspace(X[:,1].min(), X[:,1].max(), 30)\n",
        "    YY, XX = np.meshgrid(yy, xx)\n",
        "    xy = np.vstack([XX.ravel(), YY.ravel()]).T\n",
        "\n",
        "    #Ответы модели для сетки для отрисовки разделяющей прямой\n",
        "    Z = model.decision_function(xy).reshape(30, 30)\n",
        "\n",
        "    plt.contour(XX, YY, Z, colors='k', levels=[-1, 0, 1], alpha=0.5, linestyles=['--', '-', '--'])\n",
        "\n",
        "    #Отрисовали выборку\n",
        "    plt.scatter(X[:, 0], X[:, 1], c=y, cmap=\"Pastel2\", alpha=0.7)\n",
        "\n",
        "    #Отрисовали опорные векторы\n",
        "    if plot_support:\n",
        "        plt.scatter(model.support_vectors_[:, 0], model.support_vectors_[:, 1],\n",
        "                   label='support vectors',\n",
        "                   s=100,\n",
        "                   linewidth=1.5,\n",
        "                   edgecolor=\"blue\", alpha=0.6,\n",
        "                   facecolors=\"none\")\n",
        "\n",
        "    plt.legend()\n",
        "    plt.show()\n",
        "\n",
        "plot_svm_2D(X, y, model)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gdMs4iQAIYpu"
      },
      "source": [
        "**Вопрос:** какие объекты выделяются как \"опорные\"?\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dplr4chfIXnm"
      },
      "source": [
        "**Ответ:** На графике опорные объекты - это окружности с синей границей.\n",
        "\n",
        "Они представляют собой точки, задающие опорные векторы в некотором базисе. Важно, что наибольшая концентрация опорных объектов - вблизи линии уровня разделяющей гиперплоскости."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gfpVN70PP75U"
      },
      "source": [
        "В отличие от метода опорных векторов, логистическая регрессия не пытается построить разделяющую гиперплоскость с максимальным отступом, а приближает в каждой точке пространства объектов вероятность положительных ответов $p(y=+1|x)$. Попробуйте нарисовать это распределение на плоскости, не забудьте отметить на ней все объекты."
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model = LogisticRegression()\n",
        "model.fit(X, y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 75
        },
        "id": "I2pC5LyJ1Ris",
        "outputId": "12bafd85-65a8-4843-cf5d-06cf675a91eb"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LogisticRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-2 {color: black;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "id": "k5D2jq87f3MC",
        "outputId": "eb38f3cc-72ae-446a-e8d6-dcf38a225f86"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "def plot_logreg_2D(X, y, model):\n",
        "\n",
        "    #создали сетку\n",
        "    xx = np.linspace(X[:,0].min(), X[:,0].max(), 100)\n",
        "    yy = np.linspace(X[:,1].min(), X[:,1].max(), 100)\n",
        "    YY, XX = np.meshgrid(yy, xx)\n",
        "    xy = np.vstack([XX.ravel(), YY.ravel()]).T\n",
        "\n",
        "    #Ответы модели для сетки для отрисовки распределения\n",
        "    Z = model.predict_proba(xy)[:, 1] # вероятности положительного класса\n",
        "    Z = Z.reshape((xx.shape[0], -1)).T\n",
        "\n",
        "\n",
        "    image = plt.imshow(Z, interpolation='nearest',\n",
        "                       extent=(xx.min(), xx.max(), yy.min(), yy.max()),\n",
        "                       aspect='auto', origin='lower', cmap=plt.cm.PuOr_r)\n",
        "\n",
        "    #Отрисовали выборку\n",
        "    plt.scatter(X[:, 0], X[:, 1], c=y,\n",
        "                cmap=plt.cm.Paired)\n",
        "\n",
        "    plt.colorbar(image)\n",
        "\n",
        "\n",
        "plot_logreg_2D(X, y, model)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AQ-Um7-6JnAp"
      },
      "source": [
        "**Вопрос:** Как на картинке визуализирована область, где модель не уверена ($p(y=+1|x) = 0.5$)? Как это обосновать теоритечески?\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SAAF0HiaIh9Z"
      },
      "source": [
        "**Ответ:** Область, где модель не уверена, показана на графике как белая прямая. Эта область представлена прямой, так как логистическая регрессия - линейный метод, а рассматриваемая область неуверенности фактически является разделяющей классы гиперплоскостью, которая задаётся через уравнение, задействующее линейную функцию $\\langle w, x \\rangle$ в логистической регрессии (вообще говоря, из конспектов лекций следует, что для логистической регрессии $\\langle w, x \\rangle = \\log \\left( \\dfrac{p(y=+1|x)}{p(y=-1|x)} \\right)$ => здесь это выражение принимает вид $\\langle w, x \\rangle = 0$ - линейное уравнение, задаёт гиперплоскость, так как для области неуверенности $p(y=+1|x) = 0.5 ⇒ p(y=-1|x) = 0.5$;\n",
        "\n",
        "утверждение про гиперплоскость также верно, потому что на графике проекций точки выше области неуверенности - принадлежат к одному классу, а точки ниже области неуверенности - к другому)."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4VbJR0e3P75U"
      },
      "source": [
        "#### __Задание 2. Калибровка вероятностей__ (1 балл)\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "I8taLYSgBd9u"
      },
      "source": [
        "Перейдём к оценке качества выдаваемых алгоритмами вероятностей. Начнём с калибровочных кривых.\n",
        "\n",
        "Допустим, алгоритм возвращает некоторые числа от нуля до единицы. Хорошо ли они оценивают вероятность?\n",
        "\n",
        "Хорошо откалиброванный  классификатор должен выдавать значения так, чтобы среди образцов, для которых он дал значение, близкое к $\\alpha$, примерно $\\alpha * 100 \\%$ фактически принадлежали к положительному классу. (Например, если классификатор выдает 0.3 для некоторых, то 30% из них должны принадлежать классу 1)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TRBGtMArIxMc"
      },
      "source": [
        "Для построения калибровочной криовой используем следующий алгоритм:\n",
        "\n",
        "Разобьем отрезок $[0, 1]$ на несколько маленьких отрезков одинаковой длины.\n",
        "\n",
        "Рассмотрим $i$-й отрезок с границами $[a_i, b_i]$ и предсказания $p_1, p_2, \\dots, p_k$, которые попали в него. Пусть им соответствуют истинные ответы $y_1, y_2, \\dots, y_k$. Если алгоритм выдает корректные вероятности, то среди этих истинных ответов должно быть примерно $(a_i + b_i) / 2$ единиц. Иными словами, если нарисовать кривую, у которой по оси X отложены центры отрезков, а по оси Y — доли единичных ответов этих в отрезках, то она должна оказаться диагональной.\n",
        "\n",
        "Ниже приведена функция, которая должна рисовать такие кривые. В ней допущено две ошибки — найдите и исправьте их."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "id": "R75uefZuP75V"
      },
      "outputs": [],
      "source": [
        "def plot_calibration_curve(y_test, preds, color=\"blue\", name=None):\n",
        "    bin_middle_points = []\n",
        "    bin_real_ratios = []\n",
        "    n_bins = 10\n",
        "    for i in range(n_bins):\n",
        "        l = 1.0 / n_bins * i\n",
        "        r = 1.0 / n_bins * (i + 1)\n",
        "        bin_middle_points.append((l + r) / 2) # изначально было ((l - r) / 2)\n",
        "        bin_real_ratios.append(np.mean(y_test[(preds >= l) & (preds < r)] == 1)) # min to mean\n",
        "    plt.plot(bin_middle_points, bin_real_ratios, c=color, label=name)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "R13YCkxMO_R4"
      },
      "source": [
        "Сгенерируйте синтетические данные аналогично использованным в самом первом задании. Постройте калибровочные кривые на тестовой части для логистической регрессии и метода опорных векторов (не забудьте перевести его предсказания в $[0;1]$).\n",
        "\n",
        "Отрисуйте калибровочную кривую идеально откалиброванной модели (диагональ)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "id": "Jk6pz90lQYST"
      },
      "outputs": [],
      "source": [
        "X, y = make_classification(\n",
        "    n_samples=10000, n_features=10, n_informative=5, n_redundant=5, random_state=42)\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(6,6))\n",
        "plt.ylim([-0.05, 1.05])\n",
        "plt.grid()\n",
        "plt.xlabel(\"Predicted Probabilities\")\n",
        "plt.ylabel(\"Ground Truth Probabilities\")\n",
        "\n",
        "# Ideally Calibrated Classifier (linear function y=x)\n",
        "x = np.linspace(0.0, 1.0)\n",
        "plt.plot(x, x, label=\"Ideally Calibrated Classifier\", linestyle='--', color='green')\n",
        "\n",
        "# SVM\n",
        "svm = SVC(kernel=\"linear\")\n",
        "svm.fit(X_train, y_train)\n",
        "y_pred = svm.decision_function(X_test)\n",
        "scaled_y_pred = (y_pred - y_pred.min()) / (y_pred.max() - y_pred.min())\n",
        "plot_calibration_curve(y_test, scaled_y_pred, color=\"orange\", name=\"SVM Classifier\")\n",
        "\n",
        "# LogisticRegression\n",
        "lr = LogisticRegression()\n",
        "lr.fit(X_train, y_train)\n",
        "y_pred = lr.predict_proba(X_test)[:, 1]\n",
        "plot_calibration_curve(y_test, y_pred, color=\"blue\", name=\"LogReg Classifier\")\n",
        "\n",
        "plt.title(\"Calibration Curves for Different Classifiers\")\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "-dQ5lgLH4NCe",
        "outputId": "72583b96-1b2d-40ee-b32c-481a759078d6"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "t15IAX7GPJjF"
      },
      "source": [
        "**Вопрос**: хорошо ли откалиброваны кривые для SVM, логистической регрессии?\n",
        "\n",
        "**Ответ:** Получили, что для LogReg вероятности хорошо откалибровались (очень близки к кривой для идеально откалиброванной модели), а для SVM - достаточно плохо. Это можно объяснить тем, как эти методы устроены: LogReg по умолчанию стремится правильно калибровать вероятности, а перед SVM - не ставится такая задача, глобальный смысл SVM'а - в регуляризации и непосредственно в решении задачи классификации."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cgANQZyhPHIX"
      },
      "source": [
        "Изучите распределение ответов классификаторов (постройте гистограммы с помощью `plt.hist`)."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "id": "GAP1X3NObCXp",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "outputId": "cf6bc73c-8274-4891-c4af-6a6e29380b01"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x500 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "fig, ax = plt.subplots(1, 2, figsize = (15,5))\n",
        "\n",
        "#SVM\n",
        "ax[0].hist(scaled_y_pred, bins = 25, color = \"orange\", edgecolor = \".5\")\n",
        "ax[0].set_xlabel(\"Predictions\")\n",
        "ax[0].set_ylabel(\"values number\")\n",
        "ax[0].set_title(\"SVM predictions distribution\")\n",
        "\n",
        "#Logistic Regression\n",
        "ax[1].hist(y_pred, bins=25, color=\"lightblue\",  edgecolor=\".5\")\n",
        "ax[1].set_xlabel(\"Predictions\")\n",
        "ax[1].set_ylabel(\"Values Number\")\n",
        "ax[1].set_title(\"LogReg Predictions Distribution\")\n",
        "\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "S7ga-L4CPK_O"
      },
      "source": [
        "**Вопрос:** Чем они различаются? Чем вы можете объяснить это?"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LOmrLYqdPP_0"
      },
      "source": [
        "**Ответ:** Для SVM получили распределение ответов модели, очень похожее на нормальное, для LogReg - распределение ответов чем-то похоже на равномерное, но при этом чем ближе значения к \"краям\" (то есть близки либо к 0, либо к 1), тем их больше. Таким образом, распределения ответов для разных классификаторов совершенно разные.\n",
        "\n",
        "Это можно объяснить следующим образом:\n",
        "\n",
        "Цель LogReg - правильно откалибровать вероятности => у модели меньше объектов, в которых она не уверена (вероятности около 0.5), и больше, в которых уверена (края)\n",
        "\n",
        "У SVM же нет задачи правильно калибровать вероятности => распределение будет отличаться от распределения ответов LogReg. Вообще говоря, распределение ответов для SVM будет зависеть прежде всего от распределения признаков объектов, так как:\n",
        "\n",
        "- ответы SVM получаются некоторым линейным преобразованием над признаками объектов (рассматриваем величины, пропорциональные (согласно документации по `decision_function` для `SVC`) расстояниям от объектов до разделяющей гиперплоскости - некоторой линейной комбинации координат произвольного $x \\in X$: $\\rho = \\dfrac{\\langle w, x \\rangle}{\\| w \\|}$, а затем масштабируем их через min-max масштабирование, что также, очевидно, будет линейным преобразованием)\n",
        "\n",
        "- для многих стандартных распределений данных, таких как нормальное, логнормальное, распределение Лапласа, линейное преобразование случайной величины не меняет само семейство  распределения (например, нельзя из нормального линейным преобразованием получить не нормальное распределение),\n",
        "\n",
        "- Признаки, получаемые функцией `make_classification` из `sklearn`, генерируются из нормального распределения.\n",
        "    \n",
        " Таким образом, действительно, здесь всё зависит непосредственно от задаваемого `random_state` в `make_classification`, формирующего выборку."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "M9-6ClfaP75W"
      },
      "source": [
        "Воспользуйтесь `CalibratedClassifierCV` из `sklearn` для калибровки вероятностей метода опорных векторов на обучении и постройте с его помощью  предсказания для тестовой выборки."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 25,
      "metadata": {
        "id": "RR3pVlSNP75W"
      },
      "outputs": [],
      "source": [
        "from sklearn.calibration import CalibratedClassifierCV\n",
        "\n",
        "svm = SVC(kernel = \"linear\")\n",
        "calibrated_svm = CalibratedClassifierCV(svm, ensemble = False)\n",
        "calibrated_svm.fit(X_train, y_train)\n",
        "y_pred = calibrated_svm.predict_proba(X_test)[:, 1]"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize = (10,10))\n",
        "plt.ylim([-0.05, 1.05])\n",
        "plt.grid()\n",
        "plt.xlabel(\"Predicted Probabilities\")\n",
        "plt.ylabel(\"Ground Truth Probabilities\")\n",
        "\n",
        "# Ideally Calibrated Classifier (linear function y=x)\n",
        "x = np.linspace(0.0, 1.0)\n",
        "plt.plot(x, x, label=\"Ideally Calibrated Classifier\", linestyle='--', color='green')\n",
        "\n",
        "# SVM (calibrated)\n",
        "plot_calibration_curve(y_test, y_pred, color=\"blue\", name=\"Calibrated SVM Classifier\")\n",
        "\n",
        "# SVM (no calibration)\n",
        "svm = SVC(kernel=\"linear\")\n",
        "svm.fit(X_train, y_train)\n",
        "y_pred = svm.decision_function(X_test)\n",
        "scaled_y_pred = (y_pred - y_pred.min()) / (y_pred.max() - y_pred.min())\n",
        "plot_calibration_curve(y_test, scaled_y_pred, color=\"orange\", name=\"Basic SVM Classifier\")\n",
        "\n",
        "plt.title(\"Calibration Curves for not Calibrated and Calibrated SVM Classifiers\")\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 872
        },
        "id": "sRNCTdpEsnL3",
        "outputId": "dae2b5a4-6bac-49de-a92f-1e442fa8b2d9"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PnwOFuW6XyPc"
      },
      "source": [
        "**Вопрос:** Улучшилась ли калибровочная кривая?\n",
        "\n",
        "**Ответ:** Да, кривая значительно улучшилась, так как стала ближе к калибровочной кривой для идеального классификатора."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FaOVU4vJP75X"
      },
      "source": [
        "# Часть 2. Обработка категориальных переменных (4 балла + 1.5 бонус)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8KQ9ywUEP75X"
      },
      "source": [
        "Как мы знаем, перекодировать категориальную переменную в список чисел (к примеру 1, 2, 3, ..., n) плохо, поскольку это бы задало на множестве ее значений некоторый порядок, не имеющий смысла.\n",
        "\n",
        "В этой части мы рассмотрим два основных способа обработки категориальных значений:\n",
        "- One-hot-кодирование\n",
        "- Счётчики (CTR, mean-target кодирование, ...) — каждый категориальный признак заменяется на среднее значение целевой переменной по всем объектам, имеющим одинаковое значение в этом признаке.\n",
        "\n",
        "Начнём с one-hot-кодирования. Допустим наш категориальный признак $f_j(x)$ принимает значения из множества $C=\\{c_1, \\dots, c_m\\}$. Заменим его на $m$ бинарных признаков $b_1(x), \\dots, b_m(x)$, каждый из которых является индикатором одного из возможных категориальных значений:\n",
        "$$\n",
        "b_i(x) = [f_j(x) = c_i]\n",
        "$$"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pPsScraBP75Y"
      },
      "source": [
        "#### __Подготовка данных__\n",
        "\n",
        "(бесценный шаг)\n",
        "\n",
        "Разберем датасет [покупок велосипедов](https://www.kaggle.com/datasets/heeraldedhia/bike-buyers/): даны признаки покупателя, требуется предсказать, купит ли он/она велосипед\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BPuDzNoCo2nk"
      },
      "source": [
        "Замените пропуски в категориальных переменных на новую категорию (`'undefined'`)\n",
        "\n",
        "Разделите признаки на 2 таблицы: категориальные и числовые признаки"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!wget https://www.dropbox.com/scl/fi/plhcsmzaucps3vzqf883d/bike_buyers.csv?rlkey=n65dcxip9ountqhr2i03247tc&st=p3s9qmbs&dl=0"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "--WPV8Npvp4G",
        "outputId": "43e64e0a-a90d-42e6-8028-32c47bb00cd6"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2024-08-23 10:18:44--  https://www.dropbox.com/scl/fi/plhcsmzaucps3vzqf883d/bike_buyers.csv?rlkey=n65dcxip9ountqhr2i03247tc\n",
            "Resolving www.dropbox.com (www.dropbox.com)... 162.125.3.18, 2620:100:6018:18::a27d:312\n",
            "Connecting to www.dropbox.com (www.dropbox.com)|162.125.3.18|:443... connected.\n",
            "HTTP request sent, awaiting response... 302 Found\n",
            "Location: https://uc9c3065f848b9bbb9e5e839433c.dl.dropboxusercontent.com/cd/0/inline/CZLKWurirWbUGXj43_oXAdYyTWfCaHGwUwyI2LdX8AzHgzem6B7ZFvsms-XgQvZZ4ZngGbqv1_u6b5PkDgVfufKf52pK0QRdASxdmPNPRB3b9il2ws1Bg9iH6enAeAfszzfxd-BKteYVTgk7an0nfPKG/file# [following]\n",
            "--2024-08-23 10:18:44--  https://uc9c3065f848b9bbb9e5e839433c.dl.dropboxusercontent.com/cd/0/inline/CZLKWurirWbUGXj43_oXAdYyTWfCaHGwUwyI2LdX8AzHgzem6B7ZFvsms-XgQvZZ4ZngGbqv1_u6b5PkDgVfufKf52pK0QRdASxdmPNPRB3b9il2ws1Bg9iH6enAeAfszzfxd-BKteYVTgk7an0nfPKG/file\n",
            "Resolving uc9c3065f848b9bbb9e5e839433c.dl.dropboxusercontent.com (uc9c3065f848b9bbb9e5e839433c.dl.dropboxusercontent.com)... 162.125.4.15, 2620:100:6018:15::a27d:30f\n",
            "Connecting to uc9c3065f848b9bbb9e5e839433c.dl.dropboxusercontent.com (uc9c3065f848b9bbb9e5e839433c.dl.dropboxusercontent.com)|162.125.4.15|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 87182 (85K) [text/plain]\n",
            "Saving to: ‘bike_buyers.csv?rlkey=n65dcxip9ountqhr2i03247tc’\n",
            "\n",
            "bike_buyers.csv?rlk 100%[===================>]  85.14K  --.-KB/s    in 0.1s    \n",
            "\n",
            "2024-08-23 10:18:45 (826 KB/s) - ‘bike_buyers.csv?rlkey=n65dcxip9ountqhr2i03247tc’ saved [87182/87182]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv('bike_buyers.csv?rlkey=n65dcxip9ountqhr2i03247tc')"
      ],
      "metadata": {
        "id": "wo1U6xpwvztq"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "lhOMiZRjv5pX",
        "outputId": "ec105b4a-7e30-4352-b083-0c79fc1c986c"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        ID Marital Status  Gender    Income  Children        Education  \\\n",
              "0    12496        Married  Female   40000.0       1.0        Bachelors   \n",
              "1    24107        Married    Male   30000.0       3.0  Partial College   \n",
              "2    14177        Married    Male   80000.0       5.0  Partial College   \n",
              "3    24381         Single     NaN   70000.0       0.0        Bachelors   \n",
              "4    25597         Single    Male   30000.0       0.0        Bachelors   \n",
              "..     ...            ...     ...       ...       ...              ...   \n",
              "995  23731        Married    Male   60000.0       2.0      High School   \n",
              "996  28672         Single    Male   70000.0       4.0  Graduate Degree   \n",
              "997  11809        Married     NaN   60000.0       2.0        Bachelors   \n",
              "998  19664         Single    Male  100000.0       3.0        Bachelors   \n",
              "999  12121         Single    Male   60000.0       3.0      High School   \n",
              "\n",
              "         Occupation Home Owner  Cars Commute Distance         Region   Age  \\\n",
              "0    Skilled Manual        Yes   0.0        0-1 Miles         Europe  42.0   \n",
              "1          Clerical        Yes   1.0        0-1 Miles         Europe  43.0   \n",
              "2      Professional         No   2.0        2-5 Miles         Europe  60.0   \n",
              "3      Professional        Yes   1.0       5-10 Miles        Pacific  41.0   \n",
              "4          Clerical         No   0.0        0-1 Miles         Europe  36.0   \n",
              "..              ...        ...   ...              ...            ...   ...   \n",
              "995    Professional        Yes   2.0        2-5 Miles  North America  54.0   \n",
              "996    Professional        Yes   0.0        2-5 Miles  North America  35.0   \n",
              "997  Skilled Manual        Yes   0.0        0-1 Miles  North America  38.0   \n",
              "998      Management         No   3.0        1-2 Miles  North America  38.0   \n",
              "999    Professional        Yes   2.0        10+ Miles  North America  53.0   \n",
              "\n",
              "    Purchased Bike  \n",
              "0               No  \n",
              "1               No  \n",
              "2               No  \n",
              "3              Yes  \n",
              "4              Yes  \n",
              "..             ...  \n",
              "995            Yes  \n",
              "996            Yes  \n",
              "997            Yes  \n",
              "998             No  \n",
              "999            Yes  \n",
              "\n",
              "[1000 rows x 13 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4eb06606-a682-4514-aa8e-5c09166d4dfb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>Marital Status</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Income</th>\n",
              "      <th>Children</th>\n",
              "      <th>Education</th>\n",
              "      <th>Occupation</th>\n",
              "      <th>Home Owner</th>\n",
              "      <th>Cars</th>\n",
              "      <th>Commute Distance</th>\n",
              "      <th>Region</th>\n",
              "      <th>Age</th>\n",
              "      <th>Purchased Bike</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>12496</td>\n",
              "      <td>Married</td>\n",
              "      <td>Female</td>\n",
              "      <td>40000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>Skilled Manual</td>\n",
              "      <td>Yes</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0-1 Miles</td>\n",
              "      <td>Europe</td>\n",
              "      <td>42.0</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>24107</td>\n",
              "      <td>Married</td>\n",
              "      <td>Male</td>\n",
              "      <td>30000.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>Partial College</td>\n",
              "      <td>Clerical</td>\n",
              "      <td>Yes</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0-1 Miles</td>\n",
              "      <td>Europe</td>\n",
              "      <td>43.0</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>14177</td>\n",
              "      <td>Married</td>\n",
              "      <td>Male</td>\n",
              "      <td>80000.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>Partial College</td>\n",
              "      <td>Professional</td>\n",
              "      <td>No</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2-5 Miles</td>\n",
              "      <td>Europe</td>\n",
              "      <td>60.0</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>24381</td>\n",
              "      <td>Single</td>\n",
              "      <td>NaN</td>\n",
              "      <td>70000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>Professional</td>\n",
              "      <td>Yes</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5-10 Miles</td>\n",
              "      <td>Pacific</td>\n",
              "      <td>41.0</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>25597</td>\n",
              "      <td>Single</td>\n",
              "      <td>Male</td>\n",
              "      <td>30000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>Clerical</td>\n",
              "      <td>No</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0-1 Miles</td>\n",
              "      <td>Europe</td>\n",
              "      <td>36.0</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>995</th>\n",
              "      <td>23731</td>\n",
              "      <td>Married</td>\n",
              "      <td>Male</td>\n",
              "      <td>60000.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>High School</td>\n",
              "      <td>Professional</td>\n",
              "      <td>Yes</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2-5 Miles</td>\n",
              "      <td>North America</td>\n",
              "      <td>54.0</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>996</th>\n",
              "      <td>28672</td>\n",
              "      <td>Single</td>\n",
              "      <td>Male</td>\n",
              "      <td>70000.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>Graduate Degree</td>\n",
              "      <td>Professional</td>\n",
              "      <td>Yes</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2-5 Miles</td>\n",
              "      <td>North America</td>\n",
              "      <td>35.0</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>997</th>\n",
              "      <td>11809</td>\n",
              "      <td>Married</td>\n",
              "      <td>NaN</td>\n",
              "      <td>60000.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>Skilled Manual</td>\n",
              "      <td>Yes</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0-1 Miles</td>\n",
              "      <td>North America</td>\n",
              "      <td>38.0</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>998</th>\n",
              "      <td>19664</td>\n",
              "      <td>Single</td>\n",
              "      <td>Male</td>\n",
              "      <td>100000.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>Management</td>\n",
              "      <td>No</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1-2 Miles</td>\n",
              "      <td>North America</td>\n",
              "      <td>38.0</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>999</th>\n",
              "      <td>12121</td>\n",
              "      <td>Single</td>\n",
              "      <td>Male</td>\n",
              "      <td>60000.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>High School</td>\n",
              "      <td>Professional</td>\n",
              "      <td>Yes</td>\n",
              "      <td>2.0</td>\n",
              "      <td>10+ Miles</td>\n",
              "      <td>North America</td>\n",
              "      <td>53.0</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1000 rows × 13 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4eb06606-a682-4514-aa8e-5c09166d4dfb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4eb06606-a682-4514-aa8e-5c09166d4dfb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4eb06606-a682-4514-aa8e-5c09166d4dfb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-26a4e176-dc45-41db-a4ce-be111064fe5e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-26a4e176-dc45-41db-a4ce-be111064fe5e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-26a4e176-dc45-41db-a4ce-be111064fe5e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5347,\n        \"min\": 11000,\n        \"max\": 29447,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          18976,\n          18504,\n          17657\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Single\",\n          \"Married\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31067.81746236015,\n        \"min\": 10000.0,\n        \"max\": 170000.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          40000.0,\n          30000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Children\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.6269101545030595,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Education\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Partial College\",\n          \"Graduate Degree\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Clerical\",\n          \"Management\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Home Owner\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cars\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1217553730932934,\n        \"min\": 0.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Commute Distance\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2-5 Miles\",\n          \"10+ Miles\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Europe\",\n          \"Pacific\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.36200666558938,\n        \"min\": 25.0,\n        \"max\": 89.0,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          40.0,\n          67.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchased Bike\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 32,
      "metadata": {
        "id": "rGWlojJwOEjL"
      },
      "outputs": [],
      "source": [
        "# Выделим в соответствии с указанным на Kaggle распределением признаков среди них категориальные и числовые\n",
        "numerical = ['Income', 'Children', 'Cars', 'Age']\n",
        "categorical = ['Marital Status', 'Gender', 'Education',\n",
        "               'Occupation', 'Home Owner', 'Commute Distance',\n",
        "               'Region']\n",
        "#Заменим пропуски категориальных переменных\n",
        "df[categorical] = df[categorical].fillna(value='undefined')\n",
        "\n",
        "X = df.drop(columns=['Purchased Bike'])\n",
        "y = (df['Purchased Bike'] == 'Yes').astype('int64')\n",
        "\n",
        "#Разделим на категориальные признаки и числовые\n",
        "X_numerical = X[numerical]\n",
        "X_categorical = X[categorical]"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ch0M2v8Akirw"
      },
      "source": [
        "В начале поработаем только с категориальными признаками"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 33,
      "metadata": {
        "id": "QIYErZMnP75Z"
      },
      "outputs": [],
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "X_train, X_test, y_train, y_test = train_test_split(X_categorical, y, test_size=0.25, random_state=777, stratify=y)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "m5LjHkuCP75Z"
      },
      "source": [
        "#### __Задание 3. OrdinalEncoder__  (0.5 балла)\n",
        "\n",
        "Закодируйте категориальные признаки с помощью `OrdinalEncoder`. Посчитайте качество (в этом задании будем работать c __`AUC-PR`__) при применении логистической регрессии. Замерьте время, потребовавшееся на обучение модели, с учетом кодирования признаков."
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import OrdinalEncoder"
      ],
      "metadata": {
        "id": "QqjzPtWPwDao"
      },
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 38,
      "metadata": {
        "id": "bdZT2tXXP75a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 109
        },
        "outputId": "c03dae2e-01a6-403a-a59d-b3b52ff7a317"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "CPU times: user 20.5 ms, sys: 0 ns, total: 20.5 ms\n",
            "Wall time: 38.8 ms\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LogisticRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-3 {color: black;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ],
      "source": [
        "%%time\n",
        "\n",
        "enc= OrdinalEncoder()\n",
        "X_train_transformed = enc.fit_transform(X_train)\n",
        "\n",
        "lr = LogisticRegression()\n",
        "lr.fit(X_train_transformed, y_train)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_test_transformed = enc.transform(X_test)\n",
        "y_pred = lr.predict_proba(X_test_transformed)[:, 1]\n",
        "precision, recall, _ = precision_recall_curve(y_test,y_pred)\n",
        "print(\"AUC-PR:\", auc(recall, precision))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QGvb-JWLwxHt",
        "outputId": "e5c22907-8518-4d19-8207-6e3ed8853886"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AUC-PR: 0.5789437602089755\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ScIo7NthP75a"
      },
      "source": [
        "#### __Задание 4. One-Hot Encoding__ (0.5 балла)\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "p3sFuKAtLwOx"
      },
      "source": [
        "Закодируйте все категориальные признаки с помощью one-hot-кодирования. Обучите логистическую регрессию и посмотрите, как изменилось качество модели (в сравнении с тем, что было до кодирования). Измерьте время, потребовавшееся на кодирование категориальных признаков и обучение модели."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 43,
      "metadata": {
        "id": "t4PbjLIHP75a"
      },
      "outputs": [],
      "source": [
        "from sklearn.preprocessing import OneHotEncoder"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9p-qOs6lP75b"
      },
      "source": [
        "Как можно заметить, one-hot-кодирование может сильно увеличивать количество признаков. Это сказывается на объеме необходимой памяти, особенно, если некоторый признак имеет большое количество значений.\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%%time\n",
        "\n",
        "# encoding\n",
        "ohe = OneHotEncoder()\n",
        "X_train_transformed = ohe.fit_transform(X_train)\n",
        "\n",
        "# fitting model\n",
        "lr = LogisticRegression()\n",
        "lr.fit(X_train_transformed, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 109
        },
        "id": "db_qjkM6yGAj",
        "outputId": "bf4a62c9-53b0-4ff8-c284-c9e9525c8228"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "CPU times: user 42 ms, sys: 64 µs, total: 42.1 ms\n",
            "Wall time: 51.5 ms\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LogisticRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-4 {color: black;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_test_transformed =ohe.transform(X_test)\n",
        "y_pred = lr.predict_proba(X_test_transformed)[:, 1]\n",
        "precision, recall, _ = precision_recall_curve(y_test, y_pred)\n",
        "print(\"AUC-PR:\", auc(recall, precision))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4vg4Bb1fyO0r",
        "outputId": "96a75f87-6782-4549-b90f-cfdc40ba567f"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AUC-PR: 0.6618645231989089\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Вывод:** С точки зрения AUC-PR модель при переходе от OrdinalEncoder'а к OHE стала значительно лучше (AUC-PR увеличился; вырос с `0.5789437602089755` до `0.6618645231989089`)"
      ],
      "metadata": {
        "id": "w-B3ADC0yryz"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "l1q3k3yaLF8Y"
      },
      "source": [
        "#### __Задание 5. Mean-target Encoding__ (1 балл)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tanu5Hm5Lr7R"
      },
      "source": [
        "> Проблемы разрастания числа признаков можно избежать в другом способе кодирования категориальных признаков — mean-target encoding (для простоты будем называть это __счётчиками__). Сравним эффективность методов в рамках нашей маркетинговой задачи.\n",
        "\n",
        "> Основная идея в том, что важны не сами категории, а значения целевой переменной, которые имеют объекты этой категории. Каждый категориальный признак мы заменим средним значением целевой переменной по всем объектам этой же категории:\n",
        "\n",
        "$$\n",
        "g_j(x, X) = \\frac{\\sum_{i=1}^{\\ell} [f_j(x) = f_j(x_i)][y_i = +1]}{\\sum_{i=1}^{\\ell} [f_j(x) = f_j(x_i)]}\n",
        "$$\n",
        "\n",
        "Закодируйте категориальные переменные с помощью счётчиков (ровно так, как описано выше, без каких-либо хитростей). Обучите логистическую регрессию и посмотрите на качество модели на тестовом множестве.\n",
        "\n",
        "Сравните время обучения с предыдущими экспериментами (с учетом кодирования признаков)."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ABXherJ3LGBj"
      },
      "source": [
        "##### __Бонус: Эффективная реализация (1 балл)__\n",
        "\n",
        "Здесь и далее реализуйте вычисление счетчиков с помощью трансформера (наследуйтесь от классов `BaseEstimator, TransformerMixin` из `sklearn.base`). Обратите внимание, что все вычисления должны быть векторизованными, трансформер не должен модифицировать передаваемую ему выборку inplace, а все необходимые статистики нужно считать только по обучающей выборке в методе `fit`. Ваш трансформер должен принимать при инициализации список из категориальных признаков и изменять только их."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 46,
      "metadata": {
        "id": "Kk8D4dDuP75b"
      },
      "outputs": [],
      "source": [
        "from sklearn.base import BaseEstimator, TransformerMixin\n",
        "\n",
        "\n",
        "class MeanTargetEncoder(BaseEstimator, TransformerMixin):\n",
        "    def __init__(self, cols_to_modify, with_noise=False, std=None, smooth=False, C_=None):\n",
        "        super().__init__()\n",
        "        self.cols_to_modify = cols_to_modify\n",
        "        self.d = {}\n",
        "        self.with_noise = with_noise\n",
        "        self.std = std\n",
        "        self.smooth = smooth\n",
        "        self.C = C_\n",
        "\n",
        "\n",
        "    def fit(self, X, y):\n",
        "        X_copy = X.copy(deep=True)\n",
        "        if self.smooth:\n",
        "            df = pd.concat([X_copy, y, y.rename(\"y\")], axis=1)\n",
        "            global_mean = df[y.name].mean()\n",
        "        else:\n",
        "            df = pd.concat([X_copy, y], axis=1)\n",
        "        for col in self.cols_to_modify: # без цикла по столбцам таблицы здесь всё же не обойтись\n",
        "            if self.smooth:\n",
        "                self.d[col] = df.groupby(by=col).agg({y.name: \"sum\", \"y\": \"count\"}).rename(columns={y.name: \"y_sum\", \"y\": \"y_count\"}).reset_index()\n",
        "                self.d[col][\"y_sum\"] += (self.C * global_mean)\n",
        "                self.d[col][\"y_count\"] += self.C\n",
        "                self.d[col][\"y_mean\"] = self.d[col][\"y_sum\"] / self.d[col][\"y_count\"]\n",
        "                self.d[col].drop(columns=[\"y_sum\", \"y_count\"], inplace=True)\n",
        "            else:\n",
        "                self.d[col] = df.groupby(by=col).agg({y.name: \"mean\"}).rename(columns={y.name: \"y_mean\"}).reset_index()\n",
        "            if self.with_noise:\n",
        "                noise = np.random.normal(loc=0.0, scale = self.std, size=self.d[col].shape[0])\n",
        "                self.d[col][\"y_mean\"] += noise\n",
        "        return self\n",
        "\n",
        "\n",
        "    def transform(self, X, y):\n",
        "        X_mod = X.copy(deep=True)\n",
        "        for col in self.cols_to_modify: # без цикла по столбцам таблицы здесь всё же не обойтись\n",
        "            X_mod = pd.merge(X_mod, self.d[col], on=col, how=\"left\")\n",
        "            X_mod.drop(columns=[col], inplace=True)\n",
        "            X_mod.rename(columns={\"y_mean\": col}, inplace=True)\n",
        "        return X_mod"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%%time\n",
        "\n",
        "# encoding\n",
        "enc = MeanTargetEncoder(categorical)\n",
        "enc.fit(X_train, y_train)\n",
        "X_train_transformed = enc.transform(X_train, y_train)\n",
        "\n",
        "# fitting model\n",
        "lr = LogisticRegression()\n",
        "lr.fit(X_train_transformed, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 109
        },
        "id": "tegrA6ED0xfD",
        "outputId": "6ab73632-133a-4668-f1fc-4d66501694a5"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "CPU times: user 75.1 ms, sys: 1.77 ms, total: 76.8 ms\n",
            "Wall time: 107 ms\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LogisticRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-5 {color: black;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_test_transformed = enc.transform(X_test, y_test)\n",
        "y_pred = lr.predict_proba(X_test_transformed)[:, 1]\n",
        "precision, recall, _ = precision_recall_curve(y_test, y_pred)\n",
        "print(\"AUC-PR:\", auc(recall, precision))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FrTNdwl70ydB",
        "outputId": "39a9144c-e846-4bd3-ded2-132b0ae4a6bc"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AUC-PR: 0.652694015966057\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bH-JPoINqJ62"
      },
      "source": [
        "_______\n",
        "\n",
        "__Методы борьбы с переобучением счетчиков__\n",
        "\n",
        "\n",
        "Отметим, что mean-target encoding признаки сами по себе являются классификаторами и, обучаясь на них, мы допускаем \"утечку\" целевой переменной в признаки. Это ведёт к __переобучению__, поэтому считать такие признаки необходимо таким образом, чтобы при вычислении для конкретного объекта его __целевая метка не использовалась__.\n",
        "\n",
        "Это можно делать следующими способами:\n",
        "1. Вычислять значение счётчика по всем объектам расположенным выше в датасете (например, если у нас выборка отсортирована по времени).\n",
        "2. Вычислять по фолдам, то есть делить выборку на некоторое количество частей и подсчитывать значение признаков по всем фолдам кроме текущего (как делается в кросс-валидации).\n",
        "3. Внесение некоторого шума в посчитанные признаки.\n",
        "\n",
        "#### __Задание 6. Пошумим__  (0.5 балла)\n",
        "\n",
        "Реализуйте корректное вычисление счётчиков самым простым способом — добавление шума к значениям.  При этом постарайтесь найти баланс между борьбой с переобучением и сохранением полезности признаков. Снова обучите логистическую регрессию, оцените качество."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 49,
      "metadata": {
        "id": "HiqJBxrAP75c"
      },
      "outputs": [],
      "source": [
        "np.random.seed(42)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# encoding\n",
        "enc = MeanTargetEncoder(categorical, with_noise=True, std=1.)\n",
        "enc.fit(X_train, y_train)\n",
        "X_train_transformed = enc.transform(X_train, y_train)\n",
        "\n",
        "# fitting model\n",
        "lr = LogisticRegression()\n",
        "lr.fit(X_train_transformed, y_train)\n",
        "\n",
        "# predicting and finding AUC-PR\n",
        "X_test_transformed = enc.transform(X_test, y_test)\n",
        "y_pred = lr.predict_proba(X_test_transformed)[:, 1]\n",
        "precision, recall, _ = precision_recall_curve(y_test, y_pred)\n",
        "print(\"AUC-PR:\", auc(recall, precision))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Udy-6-gc1QUE",
        "outputId": "435f3ff4-90fc-4ac3-d439-99bb1b5922f6"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AUC-PR: 0.5914340336206708\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# encoding\n",
        "enc = MeanTargetEncoder(categorical, with_noise=True, std=1.)\n",
        "enc.fit(X_train, y_train)\n",
        "X_train_transformed = enc.transform(X_train, y_train)\n",
        "\n",
        "# fitting model\n",
        "lr = LogisticRegression()\n",
        "lr.fit(X_train_transformed, y_train)\n",
        "\n",
        "# predicting and finding AUC-PR\n",
        "X_test_transformed = enc.transform(X_test, y_test)\n",
        "y_pred = lr.predict_proba(X_test_transformed)[:, 1]\n",
        "precision, recall, _ = precision_recall_curve(y_test, y_pred)\n",
        "print(\"AUC-PR:\", auc(recall, precision))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-NiBQVQm1Wkr",
        "outputId": "dc506f8a-35aa-4566-9161-2f2a3860afbb"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AUC-PR: 0.580413205340093\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# encoding\n",
        "enc = MeanTargetEncoder(categorical, with_noise=True, std=1.)\n",
        "enc.fit(X_train, y_train)\n",
        "X_train_transformed = enc.transform(X_train, y_train)\n",
        "\n",
        "# fitting model\n",
        "lr = LogisticRegression()\n",
        "lr.fit(X_train_transformed, y_train)\n",
        "\n",
        "# predicting and finding AUC-PR\n",
        "X_test_transformed = enc.transform(X_test, y_test)\n",
        "y_pred = lr.predict_proba(X_test_transformed)[:, 1]\n",
        "precision, recall, _ = precision_recall_curve(y_test, y_pred)\n",
        "print(\"AUC-PR:\", auc(recall, precision))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "L9X1T2mz1Z7z",
        "outputId": "070056aa-7d33-4410-b89d-2cedfc94349c"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AUC-PR: 0.4730364147830678\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UOxwE8rGLSzH"
      },
      "source": [
        "**Вопрос:** Сделайте выводы. Помогло ли добавление шума? Почему?\n",
        "\n",
        "**Ответ:** После многократных запусков делаем эмпирически вывод, что шум в среднем ухудшает качество модели, то есть не помогает в этом смысле, но при этом, очевидно, уменьшает переобучение модели. Это происходит из-за того, что стандартное отклонение для шума достаточно большое (то есть не стремится к нулю), и поэтому шум в среднем ухудшает наши прогнозы относительно исходной зависимости.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "aMe2b5i6P75d"
      },
      "source": [
        "#### __Задание 7. Сглаживание счетчиков__  (1 балл)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4gnmTaJqP75d"
      },
      "source": [
        "> Теперь ответим на следующий вопрос: что будет, если некоторая категория встречается в выборке всего несколько раз? По этой причине производится сглаживание счётчиков. Например, на практике хорошие результаты показывает использование сглаживания средним по всей выборке:\n",
        "$$\n",
        "g_j(x, X) = \\frac{\\sum_{i=1}^{\\ell} [f_j(x) = f_j(x_i)][y_i = +1] + C \\times global\\_mean}{\\sum_{i=1}^{\\ell} [f_j(x) = f_j(x_i)] + C}\n",
        "$$\n",
        "где $global\\_mean$ — доля объектов положительного класса в выборке, $C$ — параметр, определяющий степень сглаживания (можно использовать 10 или подобрать для каждого признака свой). Идея в том, что мы \"разбавляем\" среднее значение по категории глобальным средним значением. И тем меньше, чем большее количество объектов этой категории встречается в выборке.\n",
        "\n",
        "> Вместо среднего значения целевой переменной для сглаживания можно использовать любое другое значение от 0 до 1 (этот параметр иногда называют $prior$). Можно сделать несколько признаков с разными значениями параметра. На практике в задачах бинарной классификации полезными бывают даже отрицательные значения!\n",
        "\n",
        "Добавьте сглаживание, описанное выше и повторите эксперименты. Подберите $C$, чтобы качество было лучше, чем при использовании One-Hot-Encoding\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Добавил сглаживание в классе выше, теперь применим его при дефолтном `C_=10.0`:**"
      ],
      "metadata": {
        "id": "yWvTGwOX1xnE"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 53,
      "metadata": {
        "id": "4xRMlYQlP75d",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "13796836-b7dc-481e-f295-58a33dd274e5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AUC-PR: 0.6697440602715076\n"
          ]
        }
      ],
      "source": [
        "# encoding\n",
        "enc = MeanTargetEncoder(categorical, smooth=True, C_=10.0)\n",
        "enc.fit(X_train, y_train)\n",
        "X_train_transformed = enc.transform(X_train, y_train)\n",
        "\n",
        "# fitting model\n",
        "lr = LogisticRegression()\n",
        "lr.fit(X_train_transformed, y_train)\n",
        "\n",
        "# predicting and finding AUC-PR\n",
        "X_test_transformed = enc.transform(X_test, y_test)\n",
        "y_pred = lr.predict_proba(X_test_transformed)[:, 1]\n",
        "precision, recall, _ = precision_recall_curve(y_test, y_pred)\n",
        "print(\"AUC-PR:\", auc(recall, precision))"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        " AUC-PR больше, чем для OHE=> ничего не надо больше подбирать."
      ],
      "metadata": {
        "id": "GSfaB16O1tD3"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_oU4I7HjP75f"
      },
      "source": [
        "# Часть 3. Отбор признаков (2 балла)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EsmcHDoZNu5l"
      },
      "source": [
        "Загрузим данные [UCI Adult Dataset](https://archive.ics.uci.edu/ml/datasets/Adult). Этот набор данных содержит информацию о годовых доходах отдельных людей. В качестве признакового описания используется различная информация о человеке (образование, профессия, брачный статус и т.д.). Целевая переменная является бинарной: больше ли годовой доход 50K долларов или нет."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 54,
      "metadata": {
        "id": "hk7jX8EsNrz2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "83467518-5c2a-445e-b754-fc625714381c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2024-08-23 10:45:31--  https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data\n",
            "Resolving archive.ics.uci.edu (archive.ics.uci.edu)... 128.195.10.252\n",
            "Connecting to archive.ics.uci.edu (archive.ics.uci.edu)|128.195.10.252|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: unspecified\n",
            "Saving to: ‘adult.data’\n",
            "\n",
            "adult.data              [  <=>               ]   3.79M  9.46MB/s    in 0.4s    \n",
            "\n",
            "2024-08-23 10:45:32 (9.46 MB/s) - ‘adult.data’ saved [3974305]\n",
            "\n"
          ]
        }
      ],
      "source": [
        "!wget https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 55,
      "metadata": {
        "id": "XVqw4RQ5iXRC",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81
        },
        "outputId": "e6f6eb76-ead9-4c94-b9fe-3a8c3c6002de"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       age workclass  fnlwgt   education  education-num       marital-status  \\\n",
              "18247   41   Private  324629   Bachelors             13   Married-civ-spouse   \n",
              "\n",
              "             occupation relationship    race    sex  capital-gain  \\\n",
              "18247   Exec-managerial      Husband   White   Male             0   \n",
              "\n",
              "       capital-loss  hours-per-week native-country  income  \n",
              "18247             0              40     Yugoslavia       0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2b8a1573-39e6-498d-8e11-ec4f601b954a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>workclass</th>\n",
              "      <th>fnlwgt</th>\n",
              "      <th>education</th>\n",
              "      <th>education-num</th>\n",
              "      <th>marital-status</th>\n",
              "      <th>occupation</th>\n",
              "      <th>relationship</th>\n",
              "      <th>race</th>\n",
              "      <th>sex</th>\n",
              "      <th>capital-gain</th>\n",
              "      <th>capital-loss</th>\n",
              "      <th>hours-per-week</th>\n",
              "      <th>native-country</th>\n",
              "      <th>income</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>18247</th>\n",
              "      <td>41</td>\n",
              "      <td>Private</td>\n",
              "      <td>324629</td>\n",
              "      <td>Bachelors</td>\n",
              "      <td>13</td>\n",
              "      <td>Married-civ-spouse</td>\n",
              "      <td>Exec-managerial</td>\n",
              "      <td>Husband</td>\n",
              "      <td>White</td>\n",
              "      <td>Male</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>Yugoslavia</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2b8a1573-39e6-498d-8e11-ec4f601b954a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2b8a1573-39e6-498d-8e11-ec4f601b954a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2b8a1573-39e6-498d-8e11-ec4f601b954a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 41,\n        \"max\": 41,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          41\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \" Private\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fnlwgt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 324629,\n        \"max\": 324629,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          324629\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \" Bachelors\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education-num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 13,\n        \"max\": 13,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital-status\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \" Married-civ-spouse\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \" Exec-managerial\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \" Husband\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \" White\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \" Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours-per-week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 40,\n        \"max\": 40,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          40\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"native-country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \" Yugoslavia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 55
        }
      ],
      "source": [
        "columns = ['age', 'workclass', 'fnlwgt', 'education',\n",
        "           'education-num', 'marital-status', 'occupation',\n",
        "           'relationship', 'race', 'sex', 'capital-gain',\n",
        "           'capital-loss', 'hours-per-week', 'native-country',\n",
        "           'income']\n",
        "\n",
        "df = pd.read_csv('adult.data', header=None, names=columns)\n",
        "df['income'] = (df['income'] != \" <=50K\").astype('int32')\n",
        "df.sample()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JKb6BsQMP75f"
      },
      "source": [
        "Важной частью процесса построения модели является отбор признаков. На практике многие признаки оказывают малое влияние на модель (при этом их расчёт занимает время) или даже негативно сказываются на качестве модели. Попробуем несколько подходов отбора признаков, оценим, как они влияют на качество модели и сколько времени занимают.\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "iGqys4ZpiXjr"
      },
      "source": [
        "Разделите выборку на обучающую и тестовую в соотношении 3:1. Зафиксируйте `random_state=777`, также используйте `stratify`."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 56,
      "metadata": {
        "id": "M2TT35c_iYc-"
      },
      "outputs": [],
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(df, df['income'], test_size=1/3, random_state=777, stratify=df['income'])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-uAlw2X-P75f"
      },
      "source": [
        "Давайте закодируем все категориальные признаки с помощью One-hot Encoding. Сколько новых признаков мы получим?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 60,
      "metadata": {
        "id": "ILg-JGugP75f"
      },
      "outputs": [],
      "source": [
        "from sklearn.compose import ColumnTransformer\n",
        "from sklearn.pipeline import Pipeline\n",
        "from sklearn.preprocessing import StandardScaler, OneHotEncoder, OrdinalEncoder\n",
        "from sklearn.linear_model import LogisticRegressionCV\n",
        "import time\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "categorical = [\n",
        "    \"workclass\",\n",
        "    \"education\",\n",
        "    \"marital-status\",\n",
        "    \"occupation\",\n",
        "    \"relationship\",\n",
        "    \"race\",\n",
        "    \"sex\",\n",
        "    \"native-country\",\n",
        "]\n",
        "numeric_features = [\n",
        "    \"age\",\n",
        "    \"education-num\",\n",
        "    \"capital-gain\",\n",
        "    \"capital-loss\",\n",
        "    \"hours-per-week\",\n",
        "]\n",
        "column_transformer = ColumnTransformer([\n",
        "    ('ohe', OneHotEncoder(handle_unknown=\"ignore\"), categorical),\n",
        "    ('scaling', StandardScaler(), numeric_features)\n",
        "])\n",
        "\n",
        "column_transformer.fit(X_train)\n",
        "\n",
        "print(\"Feature quantity before OneHot:\", X_train.shape[1])\n",
        "print(\"Feature quantity after OneHot:\", column_transformer.transform(X_train).shape[1])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mElBRTAy2TML",
        "outputId": "e993a0a6-5d3a-46d8-f814-b16ae8e212dd"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Feature quantity before OneHot: 15\n",
            "Feature quantity after OneHot: 107\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kq-XZwf3P75g"
      },
      "source": [
        "В качестве основной модели будем использовать логистическую регрессию, а целевой метрики — `AUC-PR`. Обучите модель и посчитайте качество на тестовой выборке. Давайте запомним полученное значение."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 61,
      "metadata": {
        "id": "XMH5D_6OP75g",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f4b1bde3-3124-4869-ae65-df3b12018109"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Time for train and encoding: 0.39452317299998185\n",
            "AUC-PR: 0.70898\n"
          ]
        }
      ],
      "source": [
        "sns.set(rc={'figure.figsize':(10, 10)})\n",
        "sns.set_style('darkgrid')\n",
        "\n",
        "categorical = [\n",
        "    \"workclass\",\n",
        "    \"education\",\n",
        "    \"marital-status\",\n",
        "    \"occupation\",\n",
        "    \"relationship\",\n",
        "    \"race\",\n",
        "    \"sex\",\n",
        "    \"native-country\",\n",
        "]\n",
        "\n",
        "numeric_features = [\n",
        "    \"age\",\n",
        "    \"education-num\",\n",
        "    \"capital-gain\",\n",
        "    \"capital-loss\",\n",
        "    \"hours-per-week\",\n",
        "]\n",
        "\n",
        "column_transformer = ColumnTransformer([\n",
        "    ('ohe', OneHotEncoder(handle_unknown=\"ignore\"), categorical),\n",
        "    ('scaling', StandardScaler(), numeric_features)\n",
        "])\n",
        "\n",
        "pipeline = Pipeline(steps=[\n",
        "    ('ohe_and_scaling', column_transformer),\n",
        "    ('log-reg', LogisticRegression(max_iter=10000, C=0.1, random_state=777))\n",
        "])\n",
        "\n",
        "t = time.process_time()\n",
        "model = pipeline.fit(X_train, y_train)\n",
        "elapsed_time = time.process_time() - t\n",
        "print('Time for train and encoding:', elapsed_time)\n",
        "\n",
        "y_pred = model.predict(X_test)\n",
        "precision, recall, _ = precision_recall_curve(y_test, y_pred)\n",
        "print('AUC-PR: %.5f' % auc(recall, precision))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QD7jIiDeP75g"
      },
      "source": [
        "#### __Задание 9. Встроенные методы (0.5 балла)__"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bf2T9xtUP75g"
      },
      "source": [
        "Допустим, мы хотим оставить только 40 лучших признаков. Попробуем сделать это несколькими способами.\n",
        "\n",
        "Начнём с отборам признаков с помощью линейной модели. Как известно, веса линейной модели означают вклад каждого признака в предсказание модели, а значит, модуль этого вклада можно интерпретировать как важность признаков. Такой метод отбора называются встроенным или embedded method, так как он заложен в особенности модели.\n",
        "\n",
        "Оставьте 40 признаков с наибольшим модулем соответствующего параметра линейной модели. Обучите модели заново и оцените её качество. Замерьте скорость такого отбора признаков.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 62,
      "metadata": {
        "id": "wqOH9EunP75g"
      },
      "outputs": [],
      "source": [
        "feature_names = np.append(model.named_steps['ohe_and_scaling'].transformers_[0][1].get_feature_names_out(), model.named_steps['ohe_and_scaling'].transformers_[1][1].get_feature_names_out().reshape(-1, 1))"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "importance = np.abs(model.named_steps['log-reg'].coef_)[0]\n",
        "f, ax = plt.subplots(figsize=(20, 10))\n",
        "plt.bar(height=importance, x=feature_names)\n",
        "plt.title(\"Feature importances via coefficients\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 858
        },
        "id": "nA-soBv62qVk",
        "outputId": "8761758b-0656-48be-fd3b-285a6b184e56"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.feature_selection import SelectFromModel\n",
        "\n",
        "threshold = np.sort(importance)[-40]\n",
        "selector = SelectFromModel(model.named_steps['log-reg'], threshold=threshold).fit(column_transformer.transform(X_train), y_train)\n",
        "print(\"Отобранные признаки:\\n\", '\\n'.join(feature_names[selector.get_support()]))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "O0qeLFi72tBF",
        "outputId": "f659697c-fe0d-4591-e9ba-3ec9199e697e"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Отобранные признаки:\n",
            " workclass_ Federal-gov\n",
            "workclass_ Self-emp-not-inc\n",
            "education_ 5th-6th\n",
            "education_ Assoc-acdm\n",
            "education_ Doctorate\n",
            "education_ Prof-school\n",
            "marital-status_ Divorced\n",
            "marital-status_ Married-AF-spouse\n",
            "marital-status_ Married-civ-spouse\n",
            "marital-status_ Married-spouse-absent\n",
            "marital-status_ Never-married\n",
            "marital-status_ Separated\n",
            "occupation_ Exec-managerial\n",
            "occupation_ Farming-fishing\n",
            "occupation_ Handlers-cleaners\n",
            "occupation_ Other-service\n",
            "occupation_ Priv-house-serv\n",
            "occupation_ Prof-specialty\n",
            "occupation_ Protective-serv\n",
            "occupation_ Sales\n",
            "occupation_ Tech-support\n",
            "relationship_ Other-relative\n",
            "relationship_ Own-child\n",
            "relationship_ Wife\n",
            "race_ Other\n",
            "sex_ Female\n",
            "sex_ Male\n",
            "native-country_ Canada\n",
            "native-country_ Columbia\n",
            "native-country_ Germany\n",
            "native-country_ Italy\n",
            "native-country_ Mexico\n",
            "native-country_ Philippines\n",
            "native-country_ South\n",
            "native-country_ United-States\n",
            "age\n",
            "education-num\n",
            "capital-gain\n",
            "capital-loss\n",
            "hours-per-week\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "categorical = [\n",
        "    \"workclass\",\n",
        "    \"education\",\n",
        "    \"marital-status\",\n",
        "    \"occupation\",\n",
        "    \"relationship\",\n",
        "    \"race\",\n",
        "    \"sex\",\n",
        "    \"native-country\",\n",
        "]\n",
        "\n",
        "numeric_features = [\n",
        "    \"age\",\n",
        "    \"education-num\",\n",
        "    \"capital-gain\",\n",
        "    \"capital-loss\",\n",
        "    \"hours-per-week\",\n",
        "]\n",
        "\n",
        "column_transformer = ColumnTransformer([\n",
        "    ('ohe', OneHotEncoder(handle_unknown=\"ignore\"), categorical),\n",
        "    ('scaling', StandardScaler(), numeric_features)\n",
        "])\n",
        "\n",
        "pipeline = Pipeline(steps=[\n",
        "    ('ohe_and_scaling', column_transformer),\n",
        "    ('feature-selection', selector),\n",
        "    ('log-reg', LogisticRegression(max_iter=10000, C=0.1, random_state=777))\n",
        "])\n",
        "\n",
        "t = time.process_time()\n",
        "model = pipeline.fit(X_train, y_train)\n",
        "elapsed_time = time.process_time() - t\n",
        "print('Time for train and encoding:', elapsed_time)\n",
        "\n",
        "y_pred = model.predict(X_test)\n",
        "PrecisionRecallDisplay.from_predictions(y_test, y_pred)\n",
        "precision, recall, _ = precision_recall_curve(y_test, y_pred)\n",
        "print('AUC-PR: %.5f' % auc(recall, precision))\n",
        "ax.set_title(\"PRC for Log Reg\")\n",
        "ax.set_ylim(0, 1.1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 910
        },
        "id": "s49BvHzC2yOf",
        "outputId": "23e8c4bb-f6e1-4901-8454-fae97408358b"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Time for train and encoding: 0.6512756120000063\n",
            "AUC-PR: 0.70963\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(0.0, 1.1)"
            ]
          },
          "metadata": {},
          "execution_count": 65
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CCmtS99eVVrC"
      },
      "source": [
        "Изменилось ли качество? Как?"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "AUC-PR изменился незначительно. Всего на 0.001"
      ],
      "metadata": {
        "id": "_jjR-m8a3Dg2"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E5y5hVyYP75h"
      },
      "source": [
        "Подумаем, что мы не учли. Мы действовали в предположении, что признаки вносят вклад равномерно, и не учитывали их масштаб. Если мы умножим один из признаков в 100 раз, то без учёта регуляризации его вес уменьшится в эти же 100 раз. А мы на основе этого отбираем признаки! Давайте сначала отмасштабируем признаки одним из способов, а только потом будем удалять признаки.\n",
        "\n",
        "Кстати, в таком случае надо пересчитать качество на всех признаках (сделайте это ниже). Если вы сделали нормирование признаков в самом начале, то попробуйте отобрать признаки на неотмасштабированных данных.\n",
        "\n",
        "Что получилось?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 66,
      "metadata": {
        "id": "qXytEuBgP75h",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bf41f2fb-dfff-4052-95b0-5aad6e240f9d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AUC-PR: 0.66318\n"
          ]
        }
      ],
      "source": [
        "# обучим без масштабирования данных\n",
        "\n",
        "categorical = [\n",
        "    \"workclass\",\n",
        "    \"education\",\n",
        "    \"marital-status\",\n",
        "    \"occupation\",\n",
        "    \"relationship\",\n",
        "    \"race\",\n",
        "    \"sex\",\n",
        "    \"native-country\",\n",
        "]\n",
        "\n",
        "numeric_features = [\n",
        "    \"age\",\n",
        "    \"education-num\",\n",
        "    \"capital-gain\",\n",
        "    \"capital-loss\",\n",
        "    \"hours-per-week\",\n",
        "]\n",
        "\n",
        "column_transformer = ColumnTransformer([\n",
        "    ('ohe', OneHotEncoder(handle_unknown=\"ignore\"), categorical),\n",
        "    # ('scaling', StandardScaler(), numeric_features)\n",
        "])\n",
        "\n",
        "pipeline = Pipeline(steps=[\n",
        "    ('ohe_and_scaling', column_transformer),\n",
        "    ('log-reg', LogisticRegression(max_iter=10000, C=0.1, random_state=777))\n",
        "])\n",
        "\n",
        "model = pipeline.fit(X_train, y_train)\n",
        "\n",
        "y_pred = model.predict(X_test)\n",
        "precision, recall, _ = precision_recall_curve(y_test, y_pred)\n",
        "print('AUC-PR: %.5f' % auc(recall, precision))"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "importance = np.abs(model.named_steps['log-reg'].coef_)[0]\n",
        "threshold = np.sort(importance)[-40]\n",
        "selector = SelectFromModel(model.named_steps['log-reg'], threshold=threshold).fit(column_transformer.transform(X_train), y_train)"
      ],
      "metadata": {
        "id": "iF3t8fUG3TL6"
      },
      "execution_count": 67,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "column_transformer = ColumnTransformer([\n",
        "    ('ohe', OneHotEncoder(handle_unknown=\"ignore\"), categorical),\n",
        "    # ('scaling', StandardScaler(), numeric_features)\n",
        "])\n",
        "\n",
        "pipeline = Pipeline(steps=[\n",
        "    ('ohe_and_scaling', column_transformer),\n",
        "    ('feature-selection', selector),\n",
        "    ('log-reg', LogisticRegression(max_iter=10000, C=0.1, random_state=777))\n",
        "])\n",
        "\n",
        "model = pipeline.fit(X_train, y_train)\n",
        "\n",
        "y_pred = model.predict(X_test)\n",
        "precision, recall, _ = precision_recall_curve(y_test, y_pred)\n",
        "print('AUC-PR: %.5f' % auc(recall, precision))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RVeGfzIq3X0c",
        "outputId": "7170976d-9f2d-4114-9643-9579fefdba53"
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AUC-PR: 0.66031\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Получили, что при отборе признаков по их вкладу и при этом не масштабируя данные мы ухудшем качество модели, а если перед этим масштабировать, тот качество возрастает (плюс облегчается модель)"
      ],
      "metadata": {
        "id": "DdIRBz1P3em5"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "OLZJRpxjP75h"
      },
      "source": [
        "Вопрос на засыпку: one-hot кодирование возвращает нам единичные признаки-индикаторы. Попробуйте также отскалировать их, как и обычные числовые, и снова выбрать 40 главных по вкладу признаков. Изменился ли их список? Изменится ли качество?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 69,
      "metadata": {
        "id": "VpGE8ll5P75h",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "da98064a-1ea8-428d-b1ea-07ff65e5243d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AUC-PR: 0.70949\n"
          ]
        }
      ],
      "source": [
        "feature_names = np.append(model.named_steps['ohe_and_scaling'].transformers_[0][1].get_feature_names_out(), numeric_features)\n",
        "categorical = [\n",
        "    \"workclass\",\n",
        "    \"education\",\n",
        "    \"marital-status\",\n",
        "    \"occupation\",\n",
        "    \"relationship\",\n",
        "    \"race\",\n",
        "    \"sex\",\n",
        "    \"native-country\",\n",
        "]\n",
        "\n",
        "numeric_features = [\n",
        "    \"age\",\n",
        "    \"education-num\",\n",
        "    \"capital-gain\",\n",
        "    \"capital-loss\",\n",
        "    \"hours-per-week\",\n",
        "]\n",
        "\n",
        "column_transformer = ColumnTransformer([\n",
        "    ('ohe', OneHotEncoder(handle_unknown=\"ignore\"), categorical),\n",
        "    ('scaling', StandardScaler(), numeric_features)\n",
        "])\n",
        "\n",
        "trans_X_train = column_transformer.fit_transform(X_train)\n",
        "trans_X_train = pd.DataFrame(trans_X_train.toarray())\n",
        "\n",
        "trans_X_test = column_transformer.transform(X_test)\n",
        "trans_X_test = pd.DataFrame(trans_X_test.toarray())\n",
        "\n",
        "scaler = StandardScaler()\n",
        "trans_X_train = scaler.fit_transform(trans_X_train)\n",
        "trans_X_train = pd.DataFrame(trans_X_train)\n",
        "\n",
        "trans_X_test = scaler.transform(trans_X_test)\n",
        "trans_X_test = pd.DataFrame(trans_X_test)\n",
        "\n",
        "model = LogisticRegression(max_iter=10000, C=0.1, random_state=777)\n",
        "model.fit(trans_X_train, y_train)\n",
        "\n",
        "y_pred = model.predict(trans_X_test)\n",
        "precision, recall, _ = precision_recall_curve(y_test, y_pred)\n",
        "print('AUC-PR: %.5f' % auc(recall, precision))"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "importance = np.abs(model.coef_)[0]\n",
        "threshold = np.sort(importance)[-40]\n",
        "selector = SelectFromModel(model, threshold=threshold).fit(column_transformer.transform(X_train), y_train)"
      ],
      "metadata": {
        "id": "C4sm1kqE3k5S"
      },
      "execution_count": 70,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "column_transformer = ColumnTransformer([\n",
        "    ('ohe', OneHotEncoder(handle_unknown=\"ignore\"), categorical),\n",
        "    ('scaling', StandardScaler(), numeric_features)\n",
        "])\n",
        "\n",
        "pipeline = Pipeline(steps=[\n",
        "    ('ohe_and_scaling', column_transformer),\n",
        "    ('feature-selection', selector),\n",
        "    ('log-reg', LogisticRegression(max_iter=10000, C=0.1, random_state=777))\n",
        "])\n",
        "\n",
        "trans_X_train = column_transformer.fit_transform(X_train)\n",
        "trans_X_train = pd.DataFrame(trans_X_train.toarray())\n",
        "trans_X_train = selector.transform(trans_X_train)\n",
        "\n",
        "trans_X_test = column_transformer.transform(X_test)\n",
        "trans_X_test = pd.DataFrame(trans_X_test.toarray())\n",
        "trans_X_test = selector.transform(trans_X_test)\n",
        "\n",
        "scaler = StandardScaler()\n",
        "trans_X_train = scaler.fit_transform(trans_X_train)\n",
        "trans_X_train = pd.DataFrame(trans_X_train)\n",
        "\n",
        "trans_X_test = scaler.transform(trans_X_test)\n",
        "trans_X_test = pd.DataFrame(trans_X_test)\n",
        "\n",
        "model = LogisticRegression(max_iter=10000, C=0.1, random_state=777)\n",
        "model.fit(trans_X_train, y_train)\n",
        "\n",
        "y_pred = model.predict(trans_X_test)\n",
        "precision, recall, _ = precision_recall_curve(y_test, y_pred)\n",
        "print('AUC-PR: %.5f' % auc(recall, precision))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LeGrOz_M3m9K",
        "outputId": "bb25265f-cbc4-4d53-ccc6-758e7791386f"
      },
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AUC-PR: 0.70932\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Качество практически не изменилось"
      ],
      "metadata": {
        "id": "FQdfuGRW3qc-"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3nK78Ag2P75i"
      },
      "source": [
        "#### __Задание 10. Методы фильтрации (0.5 балла)__\n",
        "\n",
        "\n",
        "Давайте отбирать признаки умнее, а именно через подсчёт некоторой функции для каждого признака. На основании значений этой функции будем оставлять наиболее важные признаки. Методы этого семейства называют фильтрующими или  filter methods.\n",
        "\n",
        "В качестве такой функции будем считать t-статистику:\n",
        "\n",
        "$$t(j) = \\frac{|\\mu_+ - \\mu_-|}{\\sqrt{\\frac{n_+ \\sigma^2_+ + n_- \\sigma^2_-}{n_+ + n_-}}},$$\n",
        "\n",
        "где $\\mu$, $\\sigma$, $n$ соответственно среднее, стандартное отклонение и количество объектов каждого из классов.\n",
        "\n",
        "Оставьте 40 признаков с наибольшим значением $t$, замерьте качество и скорость отбора признаков.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 72,
      "metadata": {
        "id": "0snv1D-hP75i",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "49403bc9-e949-43c0-d0a6-9f2e43df4176"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AUC-PR: 0.76210\n",
            "{'log_reg__C': 0.1}\n"
          ]
        }
      ],
      "source": [
        "from sklearn.model_selection import GridSearchCV\n",
        "from sklearn.metrics import roc_auc_score, precision_recall_curve\n",
        "def pr_auc(estimator, X, y):\n",
        "  y_pred = estimator.predict_proba(X_test)[:, 1]\n",
        "  precision, recall, _ = precision_recall_curve(y_test, y_pred)\n",
        "  return auc(recall, precision)\n",
        "column_transformer = ColumnTransformer([\n",
        "    ('ohe', OneHotEncoder(handle_unknown=\"ignore\"), categorical),\n",
        "    ('scaling', StandardScaler(), numeric_features)\n",
        "])\n",
        "\n",
        "pipeline = Pipeline(steps=[\n",
        "    ('ohe_and_scaling', column_transformer),\n",
        "    ('log_reg', LogisticRegression(max_iter=10000))\n",
        "])\n",
        "\n",
        "\n",
        "clf = GridSearchCV(estimator=pipeline,\n",
        "            param_grid={'log_reg__C': np.logspace(-1, 1, 5)},\n",
        "            scoring=pr_auc,\n",
        "            cv=5)\n",
        "\n",
        "clf.fit(X_train, y_train)\n",
        "print('AUC-PR: %.5f' % pr_auc(clf, X_test, y_test))\n",
        "print(clf.best_params_)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "column_transformer = ColumnTransformer([\n",
        "    ('ohe', OneHotEncoder(handle_unknown=\"ignore\"), categorical),\n",
        "    ('scaling', StandardScaler(), numeric_features)\n",
        "])\n",
        "\n",
        "trans_X_train = column_transformer.fit_transform(X_train)\n",
        "trans_X_train = pd.DataFrame(trans_X_train.toarray())\n",
        "pos_class = (y_train.values == 1)\n",
        "pos_q, neg_q = np.sum(pos_class), np.sum(~pos_class)\n",
        "means_diff = np.abs(np.mean(trans_X_train[pos_class], axis=0) - np.mean(trans_X_train[~pos_class], axis=0))\n",
        "\n",
        "pos_nsig = pos_q * np.std(trans_X_train[pos_class], axis=0)**2\n",
        "neg_nsig = neg_q * np.std(trans_X_train[~pos_class], axis=0)**2\n",
        "\n",
        "t = means_diff / np.sqrt((pos_nsig + neg_nsig) / (pos_q + neg_q))\n",
        "\n",
        "threshold = sorted(t)[-40]\n",
        "\n",
        "selector = SelectFromModel(clf.best_estimator_['log_reg'], threshold=threshold).fit(column_transformer.transform(X_train), y_train)\n",
        "\n",
        "column_transformer = ColumnTransformer([\n",
        "    ('ohe', OneHotEncoder(handle_unknown=\"ignore\"), categorical),\n",
        "    ('scaling', StandardScaler(), numeric_features)\n",
        "])\n",
        "\n",
        "pipeline = Pipeline(steps=[\n",
        "    ('ohe_and_scaling', column_transformer),\n",
        "    ('feature-selection', selector),\n",
        "    ('log_reg', LogisticRegression(max_iter=10000))\n",
        "])\n",
        "\n",
        "clf = GridSearchCV(estimator=pipeline,\n",
        "                  param_grid={'log_reg__C': np.logspace(-1, 1, 5)},\n",
        "                  scoring=pr_auc,\n",
        "                  cv=5)\n",
        "\n",
        "clf.fit(X_train, y_train)\n",
        "print('AUC-PR: %.5f' % pr_auc(clf, X_test, y_test))\n",
        "print(clf.best_params_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "44pIdROa3wS4",
        "outputId": "2af2cf88-6407-4c0c-9cb9-d244ae3605ed"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "AUC-PR: 0.76281\n",
            "{'log_reg__C': 0.31622776601683794}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Качество слегка выросло"
      ],
      "metadata": {
        "id": "eoe_n-144Abq"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zO63RNCLP75i"
      },
      "source": [
        "#### __Задание 11. Методы-обёртки__ (1 балл)\n",
        "\n",
        "Третий из рассматриваемых нами методов работает следующим образом: мы исключаем по очереди один из признаков и смотрим, как это влияет на качество. Удаляем признаки таким жадным способом, пока не окажется выполненым некоторое условие (количество признаков или ухудшение качества). Более конкретно, на каждом шаге мы будем удалять такой признак $j$, что качество модели на множестве оставшихся признаков без $j$ максимально, то есть удалять мы будем наиболее бесполезный признак.\n",
        "\n",
        "Заметим, что нельзя оценивать качество по тестовой выборке, иначе мы можем переобучиться, как, например, при настройке гиперпараметров. Разделите обучающую выборку на 2 части, на одной из них обучайте модель без одного из признаков,  на второй части оценивайте качество. Исходную тестовую выборку стоит использовать только для финальной оценки качества.\n",
        "\n",
        "Снова оставьте только 40 признаков и оцените качество на тестовой выборке. Сколько времени занял такой отбор признаков?"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1AEL4z61P75j"
      },
      "source": [
        "Стоит отметить, что с помощью такого метода можно пойти и в обратную сторону. Попробуйте _добавлять_ по одному самому полезному признаку в выборку до тех пор, пока не наберется 40 штук. Найдется ли порог, при котором добавление следующих признаков будет только ухудшать качество модели?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ZzF8TzVFP75j"
      },
      "outputs": [],
      "source": [
        "#your code here"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wj6a-BERP75j"
      },
      "source": [
        "Давайте подведём итоги по отбору признаков. Назовите преимущества и недостатки каждого из методов. Какой метод привёл к наилучшему качеству?\n",
        "\n",
        "**Ответ:**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zrR06pp7P75k"
      },
      "source": [
        "# Часть 4. Оценка экономического эффекта модели (2 балла)\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CmgOdf7GT3uh"
      },
      "source": [
        "В данной части мы займемся тем, что от вас скорее всего потребуется на реальной работе (помимо перекладки `json`, разумеется). А именно:\n",
        "- мы соберем несколько специализированных метрик качества,\n",
        "- попытаемся настроить модель на максимизацию _прибыли_,\n",
        "- оценим, сколько вообще получится заработать на этом.\n",
        "\n",
        "Разумеется, здесь будет сделано множество упрощающих жизнь допущений, но обо всем по порядку. Если вы всё прослушали на экономике, то напомним, что выручка — это сколько денег нам принесли клиенты, а прибыль — выручка за вычетом расходов на зарплату и прочее."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NQkW5Xh6yip2"
      },
      "source": [
        "\n",
        "#### __Задание 12. Прогноз по доходам и расходам__ (1 балл)\n",
        "\n",
        "В этой части мы будем работать с данными [UCI Bank Marketing Dataset](https://archive.ics.uci.edu/ml/datasets/bank+marketing). Этот датасет содержит информацию о банковском телефонном маркетинге.\n",
        "\n",
        "__Объектом__ здесь является телефонный звонок потенциальному клиенту с предложением некоторой услуги (утверждается, что это краткосрочный депозит). В качестве признакового описания используются характеристики клиента (образование, брак и т.д.), данные о звонке и различные экономические индикаторы - более подробная информация представлена в файле `bank-additional-names.txt`.\n",
        "__Целевая переменная__ - ответ клиента (согласился ли он открыть депозит?)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 75,
      "metadata": {
        "id": "e9WBqQd1aAjp",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3c3b54ac-2f9d-4c4d-ef79-73ba493eea32"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2024-08-23 10:56:33--  https://archive.ics.uci.edu/ml/machine-learning-databases/00222/bank-additional.zip\n",
            "Resolving archive.ics.uci.edu (archive.ics.uci.edu)... 128.195.10.252\n",
            "Connecting to archive.ics.uci.edu (archive.ics.uci.edu)|128.195.10.252|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: unspecified\n",
            "Saving to: ‘bank-additional.zip’\n",
            "\n",
            "bank-additional.zip     [  <=>               ] 434.15K  1.71MB/s    in 0.2s    \n",
            "\n",
            "2024-08-23 10:56:33 (1.71 MB/s) - ‘bank-additional.zip’ saved [444572]\n",
            "\n",
            "Archive:  bank-additional.zip\n",
            "   creating: bank-additional/\n",
            "  inflating: bank-additional/.DS_Store  \n",
            "   creating: __MACOSX/\n",
            "   creating: __MACOSX/bank-additional/\n",
            "  inflating: __MACOSX/bank-additional/._.DS_Store  \n",
            "  inflating: bank-additional/.Rhistory  \n",
            "  inflating: bank-additional/bank-additional-full.csv  \n",
            "  inflating: bank-additional/bank-additional-names.txt  \n",
            "  inflating: bank-additional/bank-additional.csv  \n",
            "  inflating: __MACOSX/._bank-additional  \n"
          ]
        }
      ],
      "source": [
        "!wget https://archive.ics.uci.edu/ml/machine-learning-databases/00222/bank-additional.zip\n",
        "!unzip bank-additional.zip\n",
        "df = pd.read_csv('bank-additional/bank-additional-full.csv', sep=';')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 76,
      "metadata": {
        "id": "Gbw5k7lMaYT1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "e1c302d0-c32f-4bc6-c155-58fe43075d06"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   age        job  marital    education  default housing loan    contact  \\\n",
              "0   56  housemaid  married     basic.4y       no      no   no  telephone   \n",
              "1   57   services  married  high.school  unknown      no   no  telephone   \n",
              "2   37   services  married  high.school       no     yes   no  telephone   \n",
              "3   40     admin.  married     basic.6y       no      no   no  telephone   \n",
              "4   56   services  married  high.school       no      no  yes  telephone   \n",
              "\n",
              "  month day_of_week  duration  campaign  pdays  previous     poutcome  \\\n",
              "0   may         mon       261         1    999         0  nonexistent   \n",
              "1   may         mon       149         1    999         0  nonexistent   \n",
              "2   may         mon       226         1    999         0  nonexistent   \n",
              "3   may         mon       151         1    999         0  nonexistent   \n",
              "4   may         mon       307         1    999         0  nonexistent   \n",
              "\n",
              "   emp.var.rate  cons.price.idx  cons.conf.idx  euribor3m  nr.employed   y  \n",
              "0           1.1          93.994          -36.4      4.857       5191.0  no  \n",
              "1           1.1          93.994          -36.4      4.857       5191.0  no  \n",
              "2           1.1          93.994          -36.4      4.857       5191.0  no  \n",
              "3           1.1          93.994          -36.4      4.857       5191.0  no  \n",
              "4           1.1          93.994          -36.4      4.857       5191.0  no  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fa157892-860b-4f15-b84c-9071e29cd1d6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>job</th>\n",
              "      <th>marital</th>\n",
              "      <th>education</th>\n",
              "      <th>default</th>\n",
              "      <th>housing</th>\n",
              "      <th>loan</th>\n",
              "      <th>contact</th>\n",
              "      <th>month</th>\n",
              "      <th>day_of_week</th>\n",
              "      <th>duration</th>\n",
              "      <th>campaign</th>\n",
              "      <th>pdays</th>\n",
              "      <th>previous</th>\n",
              "      <th>poutcome</th>\n",
              "      <th>emp.var.rate</th>\n",
              "      <th>cons.price.idx</th>\n",
              "      <th>cons.conf.idx</th>\n",
              "      <th>euribor3m</th>\n",
              "      <th>nr.employed</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>56</td>\n",
              "      <td>housemaid</td>\n",
              "      <td>married</td>\n",
              "      <td>basic.4y</td>\n",
              "      <td>no</td>\n",
              "      <td>no</td>\n",
              "      <td>no</td>\n",
              "      <td>telephone</td>\n",
              "      <td>may</td>\n",
              "      <td>mon</td>\n",
              "      <td>261</td>\n",
              "      <td>1</td>\n",
              "      <td>999</td>\n",
              "      <td>0</td>\n",
              "      <td>nonexistent</td>\n",
              "      <td>1.1</td>\n",
              "      <td>93.994</td>\n",
              "      <td>-36.4</td>\n",
              "      <td>4.857</td>\n",
              "      <td>5191.0</td>\n",
              "      <td>no</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>57</td>\n",
              "      <td>services</td>\n",
              "      <td>married</td>\n",
              "      <td>high.school</td>\n",
              "      <td>unknown</td>\n",
              "      <td>no</td>\n",
              "      <td>no</td>\n",
              "      <td>telephone</td>\n",
              "      <td>may</td>\n",
              "      <td>mon</td>\n",
              "      <td>149</td>\n",
              "      <td>1</td>\n",
              "      <td>999</td>\n",
              "      <td>0</td>\n",
              "      <td>nonexistent</td>\n",
              "      <td>1.1</td>\n",
              "      <td>93.994</td>\n",
              "      <td>-36.4</td>\n",
              "      <td>4.857</td>\n",
              "      <td>5191.0</td>\n",
              "      <td>no</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>37</td>\n",
              "      <td>services</td>\n",
              "      <td>married</td>\n",
              "      <td>high.school</td>\n",
              "      <td>no</td>\n",
              "      <td>yes</td>\n",
              "      <td>no</td>\n",
              "      <td>telephone</td>\n",
              "      <td>may</td>\n",
              "      <td>mon</td>\n",
              "      <td>226</td>\n",
              "      <td>1</td>\n",
              "      <td>999</td>\n",
              "      <td>0</td>\n",
              "      <td>nonexistent</td>\n",
              "      <td>1.1</td>\n",
              "      <td>93.994</td>\n",
              "      <td>-36.4</td>\n",
              "      <td>4.857</td>\n",
              "      <td>5191.0</td>\n",
              "      <td>no</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>40</td>\n",
              "      <td>admin.</td>\n",
              "      <td>married</td>\n",
              "      <td>basic.6y</td>\n",
              "      <td>no</td>\n",
              "      <td>no</td>\n",
              "      <td>no</td>\n",
              "      <td>telephone</td>\n",
              "      <td>may</td>\n",
              "      <td>mon</td>\n",
              "      <td>151</td>\n",
              "      <td>1</td>\n",
              "      <td>999</td>\n",
              "      <td>0</td>\n",
              "      <td>nonexistent</td>\n",
              "      <td>1.1</td>\n",
              "      <td>93.994</td>\n",
              "      <td>-36.4</td>\n",
              "      <td>4.857</td>\n",
              "      <td>5191.0</td>\n",
              "      <td>no</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>56</td>\n",
              "      <td>services</td>\n",
              "      <td>married</td>\n",
              "      <td>high.school</td>\n",
              "      <td>no</td>\n",
              "      <td>no</td>\n",
              "      <td>yes</td>\n",
              "      <td>telephone</td>\n",
              "      <td>may</td>\n",
              "      <td>mon</td>\n",
              "      <td>307</td>\n",
              "      <td>1</td>\n",
              "      <td>999</td>\n",
              "      <td>0</td>\n",
              "      <td>nonexistent</td>\n",
              "      <td>1.1</td>\n",
              "      <td>93.994</td>\n",
              "      <td>-36.4</td>\n",
              "      <td>4.857</td>\n",
              "      <td>5191.0</td>\n",
              "      <td>no</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa157892-860b-4f15-b84c-9071e29cd1d6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fa157892-860b-4f15-b84c-9071e29cd1d6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fa157892-860b-4f15-b84c-9071e29cd1d6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-80bd8822-98b5-4e00-a102-22d6d414c74b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-80bd8822-98b5-4e00-a102-22d6d414c74b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-80bd8822-98b5-4e00-a102-22d6d414c74b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 76
        }
      ],
      "source": [
        "df.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 77,
      "metadata": {
        "id": "qmxCn_Pz3kJB"
      },
      "outputs": [],
      "source": [
        "X = df.drop(columns=['duration', 'y'])\n",
        "y = (df.y == 'yes')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lMKgtxfwaBEQ"
      },
      "source": [
        "В этой части не нужно делить выборку - мы будем использовать кросс-валидацию.  Используйте 5 фолдов, сделайте `shuffle=True, random_state=500`. По кросс-валидации у вас получится 5 вариантов обучающей и тестовой выборки."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 78,
      "metadata": {
        "id": "xYPjtfnqP75k",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4df97f90-6866-4cd7-d938-f3f20b9c1ce5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.90361738, 0.89973294, 0.89694101, 0.90749059, 0.89073692])"
            ]
          },
          "metadata": {},
          "execution_count": 78
        }
      ],
      "source": [
        "from sklearn.model_selection import KFold, cross_val_score\n",
        "\n",
        "categorical = ['job', 'marital', 'education', 'default', 'housing', 'loan', 'contact', 'month', 'day_of_week', 'poutcome']\n",
        "numeric_features = ['age', 'campaign', 'pdays', 'previous', 'emp.var.rate', 'cons.price.idx', 'cons.conf.idx', 'euribor3m', 'nr.employed']\n",
        "\n",
        "column_transformer = ColumnTransformer([\n",
        "    ('ohe', OneHotEncoder(handle_unknown=\"ignore\"), categorical),\n",
        "    ('scaling', StandardScaler(), numeric_features)\n",
        "])\n",
        "\n",
        "pipeline = Pipeline(steps=[\n",
        "    ('ohe_and_scaling', column_transformer),\n",
        "    ('log_reg', LogisticRegression(max_iter=10000))\n",
        "])\n",
        "\n",
        "cross_val_score(pipeline, X, y, cv=KFold(n_splits=5, shuffle=True, random_state=500))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YIX-omTIyxtU"
      },
      "source": [
        "Обучите логистическую регрессию на каждой обучающей выборке (воспользуйтесь one-hot для категориальных признаков и `StandardScaler` для числовых, гиперпараметры по умолчанию) и сделайте предсказания для соответствующих тестовых выборок."
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "trans_X = column_transformer.fit_transform(X)\n",
        "\n",
        "kf = KFold(n_splits=5, shuffle=True, random_state=500)\n",
        "folds_predicts = np.empty(y.shape[0])\n",
        "model = LogisticRegression(max_iter=10000)\n",
        "for train_index, test_index in kf.split(trans_X):\n",
        "    model.fit(trans_X[train_index], y[train_index])\n",
        "    folds_predicts[test_index] = model.predict(trans_X[test_index])"
      ],
      "metadata": {
        "id": "Y0EBSvQ14g3o"
      },
      "execution_count": 80,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CcuHfZjfzmnt"
      },
      "source": [
        "Допустим, работники вашего колл-центра получают за один звонок клиенту 1 доллар. При согласии клиента на предлагаемые условия он принесет в банк 10 долларов. Предположим, что всем положительным прогнозам ваши сотрудники решили позвонить. Посчитайте на всех тестовых выборках выручку и усредните. Также вычислите стандартное отклонение.\n",
        "- Сколько денег вы в среднем заработаете?\n",
        "- Сколько из заработанных денег придётся отдать операторам вашего колл-центра?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 81,
      "metadata": {
        "id": "0okqAh-AzWTX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "232e36b9-51d5-4767-c83c-405de293f8ec"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[2240, 2110, 2090, 2250, 1960] [310.0, 330.0, 330.0, 330.0, 321.0]\n",
            "В среднем заработаем: 2130.0\n",
            "Стандартное отклонение заработка: 107.144761887831\n",
            "В среднем придется отдать работникам: 324.2\n",
            "В среднем выручка: 1805.8\n",
            "Стандартное отклонение выручки: 108.67640038205167\n"
          ]
        }
      ],
      "source": [
        "earnings = []\n",
        "expenses = []\n",
        "\n",
        "for train_index, test_index in kf.split(X):\n",
        "    expenses.append(folds_predicts[test_index].sum())\n",
        "    earnings.append(10 * y[test_index][folds_predicts[test_index] == 1].sum())\n",
        "\n",
        "print(earnings, expenses)\n",
        "earnings = np.array(earnings)\n",
        "expenses = np.array(expenses)\n",
        "print(\"В среднем заработаем:\", np.mean(earnings))\n",
        "print(\"Стандартное отклонение заработка:\", np.std(earnings))\n",
        "print(\"В среднем придется отдать работникам:\", np.mean(expenses))\n",
        "print(\"В среднем выручка:\", np.mean(earnings - expenses))\n",
        "print(\"Стандартное отклонение выручки:\", np.std(earnings - expenses))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Da1x6u6wP75k"
      },
      "source": [
        "Внесем некоторую долю случайности. Пусть теперь согласный на условия клиент будет приносить не 10 долларов, а случайную величину, равномерно распределенную в интервале $[0;20)$. Проделайте все те же самые действия. Для имитации реальной ситуации **НЕ** фиксируйте `random_seed` при подсчете выручки с клиента. Что получилось?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 82,
      "metadata": {
        "id": "0AKmJpRAP75k",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0f7c91c8-73d5-412e-d7d1-67cb4a98c366"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[2302.190846733743, 2177.072566851729, 2081.6071014287522, 2398.068135043862, 2001.298916652452] [310.0, 330.0, 330.0, 330.0, 321.0]\n",
            "В среднем заработаем: 2192.0475133421073\n",
            "Стандартное отклонение заработка: 143.7931926080318\n",
            "В среднем придется отдать работникам: 324.2\n",
            "В среднем выручка: 1867.8475133421075\n",
            "Стандартное отклонение выручки: 144.68411785493547\n"
          ]
        }
      ],
      "source": [
        "earnings = []\n",
        "expenses = []\n",
        "\n",
        "for train_index, test_index in kf.split(X):\n",
        "    expenses.append(folds_predicts[test_index].sum())\n",
        "    payed_clients = y[test_index][folds_predicts[test_index] == 1]\n",
        "    earnings.append((np.random.uniform(20, size=payed_clients.shape[0]) * payed_clients).sum())\n",
        "\n",
        "print(earnings, expenses)\n",
        "earnings = np.array(earnings)\n",
        "expenses = np.array(expenses)\n",
        "print(\"В среднем заработаем:\", np.mean(earnings))\n",
        "print(\"Стандартное отклонение заработка:\", np.std(earnings))\n",
        "print(\"В среднем придется отдать работникам:\", np.mean(expenses))\n",
        "print(\"В среднем выручка:\", np.mean(earnings - expenses))\n",
        "print(\"Стандартное отклонение выручки:\", np.std(earnings - expenses))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "O1g9FPExP75k"
      },
      "source": [
        "Настройте по кросс-валидации коэффициент регуляризации модели для максимизации прибыли (считайте как случайную величину выше). Удалось ли получить какой-то выигрыш? При каком коэффициенте регуляризациии прибыль максимальна? Постройте график зависимости ожидаемой прибыли от коэффициента, укажите стандартные отклонения (вам поможет `plt.errorbar`, [пример](https://jakevdp.github.io/PythonDataScienceHandbook/04.03-errorbars.html))."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 83,
      "metadata": {
        "id": "YXx7qU5PP75l"
      },
      "outputs": [],
      "source": [
        "trans_X = column_transformer.fit_transform(X)\n",
        "\n",
        "def C_search(verbose=True):\n",
        "    kf = KFold(n_splits=5, shuffle=True, random_state=500)\n",
        "    best_c = 0\n",
        "    best_metric = -1e6\n",
        "    Cs = []\n",
        "    revs = []\n",
        "    stds = []\n",
        "    for C in np.logspace(-1, 1, 5):\n",
        "        expenses, earnings = [], []\n",
        "        for train_index, test_index in kf.split(X):\n",
        "            model = LogisticRegression(max_iter=10000)\n",
        "            model.fit(trans_X[train_index], y[train_index])\n",
        "            fold_predicts = model.predict(trans_X[test_index])\n",
        "            expenses.append(fold_predicts.sum())\n",
        "            payed_clients = y[test_index][fold_predicts == 1]\n",
        "            earnings.append((np.random.uniform(20, size=payed_clients.shape[0]) * payed_clients).sum())\n",
        "        earnings = np.array(earnings)\n",
        "        expenses = np.array(expenses)\n",
        "        revenue = earnings - expenses\n",
        "        revenue_metric = revenue.mean()\n",
        "        if revenue_metric > best_metric:\n",
        "            best_metric = revenue_metric\n",
        "            best_c = C\n",
        "        if verbose:\n",
        "            print(f\"При C={C} в среднем выручка:\", np.mean(revenue))\n",
        "            print(f\"При C={C} cтандартное отклонение выручки:\", np.std(revenue))\n",
        "\n",
        "        Cs.append(C)\n",
        "        revs.append(revenue_metric)\n",
        "        stds.append(np.std(revenue))\n",
        "\n",
        "    plt.figure(figsize=(10, 7))\n",
        "    plt.errorbar(Cs, revs, stds)\n",
        "    plt.xscale('log')\n",
        "    plt.show()\n",
        "    print(f\"best_c={best_c}, best_metric={best_metric}\")\n",
        "    return best_c, best_metric"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "C_search()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 815
        },
        "id": "7veaVA4D5Elm",
        "outputId": "11b585fe-900e-43d9-f199-23ab792935fd"
      },
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "При C=0.1 в среднем выручка: 1886.5958745648736\n",
            "При C=0.1 cтандартное отклонение выручки: 148.73713060773935\n",
            "При C=0.31622776601683794 в среднем выручка: 1927.863274191061\n",
            "При C=0.31622776601683794 cтандартное отклонение выручки: 97.70582189592066\n",
            "При C=1.0 в среднем выручка: 1984.040479372497\n",
            "При C=1.0 cтандартное отклонение выручки: 139.02992120931737\n",
            "При C=3.1622776601683795 в среднем выручка: 1949.279816390747\n",
            "При C=3.1622776601683795 cтандартное отклонение выручки: 101.80170338912363\n",
            "При C=10.0 в среднем выручка: 1863.975759536391\n",
            "При C=10.0 cтандартное отклонение выручки: 105.28475429629079\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "best_c=1.0, best_metric=1984.040479372497\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1.0, 1984.040479372497)"
            ]
          },
          "metadata": {},
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sdptRdaIP75l"
      },
      "source": [
        "Попробуйте запустить перебор несколько раз. Находится ли каждый раз один и тот же \"лучший\" коэффициент? Присутствует ли какая-то закономерность? Какие вы можете сделать из этого выводы?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 85,
      "metadata": {
        "id": "inD5UMbGP75l",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "14a2cdae-e94f-4e88-e05b-7d9458f0237f"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "best_c=1.0, best_metric=1937.6715188215694\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "best_c=10.0, best_metric=1948.4034366417877\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "best_c=0.1, best_metric=1925.0521064695708\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "best_c=0.31622776601683794, best_metric=1956.370383291228\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "best_c=0.31622776601683794, best_metric=1932.060541742782\n"
          ]
        }
      ],
      "source": [
        "for i in range(5):\n",
        "    C_search(False)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "J0j8HubaP75l"
      },
      "source": [
        "#### __Задание 13. Ключевая метрика__ (1 балл)\n",
        "\n",
        "Выше мы уже описали примерную экономическую модель вашей задачи. Как вы считаете, что для вашего бизнеса важнее — хороший precision или recall модели? Почему?\n",
        "\n",
        "__Ответ:__  Мат. ожидание того, сколько денег можно получить с клиента равно 9.5, а денег звонящему мы заплатим все равно 1, поэтому важнее брать recall, так как лучше позвонить тому, кто не купит, чем не позвонить тому, с кого можно было бы заработать в среднем 8.5\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4LFRNnrtP75m"
      },
      "source": [
        "> Вспомним, что на самом деле логистическая регрессия предсказывает нам вероятности положительного класса для объекта. Возможно, путем настройки __порога бинаризации__ этих вероятностей мы сможем получить какой-то выигрыш?\n",
        "\n",
        "Проверьте ваши рассуждения выше с помощью настройки порога бинаризации на кросс-валидации для максимизации прибыли. Воспользуйтесь сеткой от 0 до 1 с шагом 0.01. Напомним, что снижение порога дает нам более высокий recall и более низкий precision, и наоборот."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 86,
      "metadata": {
        "id": "3ALl1YeBP75m",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "aa8d92397b2e4732b5746a4558e46d8e",
            "4d5d9d3cdfd140b7922cf0953483fd7b",
            "e8409707cdf54665a9eae9608c933b61",
            "a2d6f3162e9e451eaa05091c203d13c3",
            "31de2dde596b4565a6ec0e547b628c81",
            "5501a3ce418946f795e95b494d2046fa",
            "c75a8cdd1c264e9f823fd412f4202e4c",
            "a6cd3fae39004081a9d97b335bb3e0f5",
            "7a7064b57a854df7af401e7b4e69a07e",
            "d1833cb61faf4e62958e027a302695d6",
            "e19482caa3b34133b01175669bf8c2f2"
          ]
        },
        "outputId": "686d13f8-53f2-45ef-f646-5067abece3fb"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  0%|          | 0/100 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "aa8d92397b2e4732b5746a4558e46d8e"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "При threshold=0.0 в среднем выручка: 1400.8371531033467\n",
            "При threshold=0.0 cтандартное отклонение выручки: 272.5123835865638\n",
            "При threshold=0.01 в среднем выручка: 1434.8984776618101\n",
            "При threshold=0.01 cтандартное отклонение выручки: 217.85590732209587\n",
            "При threshold=0.02 в среднем выручка: 1485.9857729154578\n",
            "При threshold=0.02 cтандартное отклонение выручки: 204.0811010536646\n",
            "При threshold=0.03 в среднем выручка: 1905.4942057576845\n",
            "При threshold=0.03 cтандартное отклонение выручки: 386.6822665223008\n",
            "При threshold=0.04 в среднем выручка: 2745.4003455414486\n",
            "При threshold=0.04 cтандартное отклонение выручки: 368.30160628401114\n",
            "При threshold=0.05 в среднем выручка: 3487.9609695898507\n",
            "При threshold=0.05 cтандартное отклонение выручки: 203.97366007490385\n",
            "При threshold=0.06 в среднем выручка: 4154.729623946268\n",
            "При threshold=0.06 cтандартное отклонение выручки: 290.3309661432197\n",
            "При threshold=0.07 в среднем выручка: 4307.655496469003\n",
            "При threshold=0.07 cтандартное отклонение выручки: 263.4254306984716\n",
            "При threshold=0.08 в среднем выручка: 4460.771594636144\n",
            "При threshold=0.08 cтандартное отклонение выручки: 296.28802338927636\n",
            "При threshold=0.09 в среднем выручка: 4433.376862780808\n",
            "При threshold=0.09 cтандартное отклонение выручки: 163.46575865005553\n",
            "При threshold=0.1 в среднем выручка: 4481.303014040837\n",
            "При threshold=0.1 cтандартное отклонение выручки: 135.5993994087431\n",
            "При threshold=0.11 в среднем выручка: 4427.295776131521\n",
            "При threshold=0.11 cтандартное отклонение выручки: 343.3878291841704\n",
            "При threshold=0.12 в среднем выручка: 4607.292898590006\n",
            "При threshold=0.12 cтандартное отклонение выручки: 229.04188664176036\n",
            "При threshold=0.13 в среднем выручка: 4499.85086266495\n",
            "При threshold=0.13 cтандартное отклонение выручки: 260.7316956327859\n",
            "При threshold=0.14 в среднем выручка: 4465.320944071608\n",
            "При threshold=0.14 cтандартное отклонение выручки: 252.9925104716663\n",
            "При threshold=0.15 в среднем выручка: 4482.549881997218\n",
            "При threshold=0.15 cтандартное отклонение выручки: 184.42317185176532\n",
            "При threshold=0.16 в среднем выручка: 4436.720456746773\n",
            "При threshold=0.16 cтандартное отклонение выручки: 219.1927675116559\n",
            "При threshold=0.17 в среднем выручка: 4447.578009670419\n",
            "При threshold=0.17 cтандартное отклонение выручки: 100.92635656013877\n",
            "При threshold=0.18 в среднем выручка: 4310.653336145613\n",
            "При threshold=0.18 cтандартное отклонение выручки: 139.3302325120605\n",
            "При threshold=0.19 в среднем выручка: 4410.700644802679\n",
            "При threshold=0.19 cтандартное отклонение выручки: 175.73832205681305\n",
            "При threshold=0.2 в среднем выручка: 4254.252638830984\n",
            "При threshold=0.2 cтандартное отклонение выручки: 189.61458244442775\n",
            "При threshold=0.21 в среднем выручка: 4143.859458693497\n",
            "При threshold=0.21 cтандартное отклонение выручки: 225.9441572570563\n",
            "При threshold=0.22 в среднем выручка: 4174.131110047305\n",
            "При threshold=0.22 cтандартное отклонение выручки: 217.93369125674585\n",
            "При threshold=0.23 в среднем выручка: 4024.4206263516035\n",
            "При threshold=0.23 cтандартное отклонение выручки: 149.16318770335775\n",
            "При threshold=0.24 в среднем выручка: 3935.0506789503024\n",
            "При threshold=0.24 cтандартное отклонение выручки: 143.45087000503796\n",
            "При threshold=0.25 в среднем выручка: 3795.3000653428376\n",
            "При threshold=0.25 cтандартное отклонение выручки: 132.6705248300239\n",
            "При threshold=0.26 в среднем выручка: 3776.3828630413627\n",
            "При threshold=0.26 cтандартное отклонение выручки: 131.23388759012477\n",
            "При threshold=0.27 в среднем выручка: 3740.2519018979015\n",
            "При threshold=0.27 cтандартное отклонение выручки: 150.15235317189246\n",
            "При threshold=0.28 в среднем выручка: 3500.4010060870532\n",
            "При threshold=0.28 cтандартное отклонение выручки: 153.35810371666915\n",
            "При threshold=0.29 в среднем выручка: 3459.351103752981\n",
            "При threshold=0.29 cтандартное отклонение выручки: 173.99450668135378\n",
            "При threshold=0.3 в среднем выручка: 3456.2240962570236\n",
            "При threshold=0.3 cтандартное отклонение выручки: 157.84260075006253\n",
            "При threshold=0.31 в среднем выручка: 3332.098981041198\n",
            "При threshold=0.31 cтандартное отклонение выручки: 90.68082745349477\n",
            "При threshold=0.32 в среднем выручка: 3284.604369934287\n",
            "При threshold=0.32 cтандартное отклонение выручки: 134.94913204252623\n",
            "При threshold=0.33 в среднем выручка: 3275.185993421316\n",
            "При threshold=0.33 cтандартное отклонение выручки: 105.21447554891445\n",
            "При threshold=0.34 в среднем выручка: 3086.61672701597\n",
            "При threshold=0.34 cтандартное отклонение выручки: 130.08755699303387\n",
            "При threshold=0.35000000000000003 в среднем выручка: 3013.900839292451\n",
            "При threshold=0.35000000000000003 cтандартное отклонение выручки: 115.06481695883414\n",
            "При threshold=0.36 в среднем выручка: 2946.917573666581\n",
            "При threshold=0.36 cтандартное отклонение выручки: 107.57833916275486\n",
            "При threshold=0.37 в среднем выручка: 2900.8705837352595\n",
            "При threshold=0.37 cтандартное отклонение выручки: 95.42972019822435\n",
            "При threshold=0.38 в среднем выручка: 2829.6697782782385\n",
            "При threshold=0.38 cтандартное отклонение выручки: 66.80057632029892\n",
            "При threshold=0.39 в среднем выручка: 2805.0532981137007\n",
            "При threshold=0.39 cтандартное отклонение выручки: 143.447079876534\n",
            "При threshold=0.4 в среднем выручка: 2679.642396703537\n",
            "При threshold=0.4 cтандартное отклонение выручки: 162.84470884845192\n",
            "При threshold=0.41000000000000003 в среднем выручка: 2590.8401347107224\n",
            "При threshold=0.41000000000000003 cтандартное отклонение выручки: 45.89157325656984\n",
            "При threshold=0.42 в среднем выручка: 2475.364821457999\n",
            "При threshold=0.42 cтандартное отклонение выручки: 174.760552671458\n",
            "При threshold=0.43 в среднем выручка: 2359.5432360436002\n",
            "При threshold=0.43 cтандартное отклонение выручки: 116.98759216173934\n",
            "При threshold=0.44 в среднем выручка: 2343.903331881616\n",
            "При threshold=0.44 cтандартное отклонение выручки: 167.84299510569718\n",
            "При threshold=0.45 в среднем выручка: 2236.5362582018074\n",
            "При threshold=0.45 cтандартное отклонение выручки: 180.3039666736604\n",
            "При threshold=0.46 в среднем выручка: 2139.2747701920553\n",
            "При threshold=0.46 cтандартное отклонение выручки: 124.4632915816595\n",
            "При threshold=0.47000000000000003 в среднем выручка: 2054.6501708107044\n",
            "При threshold=0.47000000000000003 cтандартное отклонение выручки: 76.08179183912627\n",
            "При threshold=0.48 в среднем выручка: 2015.559055897554\n",
            "При threshold=0.48 cтандартное отклонение выручки: 83.17808206178564\n",
            "При threshold=0.49 в среднем выручка: 1968.914706388378\n",
            "При threshold=0.49 cтандартное отклонение выручки: 166.56984659721266\n",
            "При threshold=0.5 в среднем выручка: 1843.6062240718973\n",
            "При threshold=0.5 cтандартное отклонение выручки: 151.84679029955237\n",
            "При threshold=0.51 в среднем выручка: 1829.6419983127857\n",
            "При threshold=0.51 cтандартное отклонение выручки: 164.2230100847122\n",
            "При threshold=0.52 в среднем выручка: 1837.3245356211396\n",
            "При threshold=0.52 cтандартное отклонение выручки: 192.69384317361803\n",
            "При threshold=0.53 в среднем выручка: 1719.4109576494752\n",
            "При threshold=0.53 cтандартное отклонение выручки: 146.86676726357794\n",
            "При threshold=0.54 в среднем выручка: 1729.4790721445784\n",
            "При threshold=0.54 cтандартное отклонение выручки: 167.49842017861937\n",
            "При threshold=0.55 в среднем выручка: 1759.747349780872\n",
            "При threshold=0.55 cтандартное отклонение выручки: 108.58238556218382\n",
            "При threshold=0.56 в среднем выручка: 1639.1616658046241\n",
            "При threshold=0.56 cтандартное отклонение выручки: 120.66087871129129\n",
            "При threshold=0.5700000000000001 в среднем выручка: 1632.8751375150052\n",
            "При threshold=0.5700000000000001 cтандартное отклонение выручки: 207.0099465962735\n",
            "При threshold=0.58 в среднем выручка: 1599.0813894427874\n",
            "При threshold=0.58 cтандартное отклонение выручки: 121.35648959679365\n",
            "При threshold=0.59 в среднем выручка: 1522.052428147733\n",
            "При threshold=0.59 cтандартное отклонение выручки: 116.77439835264816\n",
            "При threshold=0.6 в среднем выручка: 1500.217190145659\n",
            "При threshold=0.6 cтандартное отклонение выручки: 93.46115388473412\n",
            "При threshold=0.61 в среднем выручка: 1521.8903918752392\n",
            "При threshold=0.61 cтандартное отклонение выручки: 114.33117293293236\n",
            "При threshold=0.62 в среднем выручка: 1434.5796287281496\n",
            "При threshold=0.62 cтандартное отклонение выручки: 158.10450358480117\n",
            "При threshold=0.63 в среднем выручка: 1380.2483322152716\n",
            "При threshold=0.63 cтандартное отклонение выручки: 112.12443879203155\n",
            "При threshold=0.64 в среднем выручка: 1385.9700637771891\n",
            "При threshold=0.64 cтандартное отклонение выручки: 92.79515780979696\n",
            "При threshold=0.65 в среднем выручка: 1301.5726079074736\n",
            "При threshold=0.65 cтандартное отклонение выручки: 100.46293165659343\n",
            "При threshold=0.66 в среднем выручка: 1191.472311080059\n",
            "При threshold=0.66 cтандартное отклонение выручки: 93.7976358529925\n",
            "При threshold=0.67 в среднем выручка: 1132.6716834124497\n",
            "При threshold=0.67 cтандартное отклонение выручки: 74.58838174172702\n",
            "При threshold=0.68 в среднем выручка: 1158.344220245986\n",
            "При threshold=0.68 cтандартное отклонение выручки: 39.88795416821247\n",
            "При threshold=0.6900000000000001 в среднем выручка: 1083.7014539573443\n",
            "При threshold=0.6900000000000001 cтандартное отклонение выручки: 67.96276394218384\n",
            "При threshold=0.7000000000000001 в среднем выручка: 999.5810734858931\n",
            "При threshold=0.7000000000000001 cтандартное отклонение выручки: 110.47309103223894\n",
            "При threshold=0.71 в среднем выручка: 914.0519341672298\n",
            "При threshold=0.71 cтандартное отклонение выручки: 100.3812019303393\n",
            "При threshold=0.72 в среднем выручка: 851.7756488738567\n",
            "При threshold=0.72 cтандартное отклонение выручки: 78.71314520552069\n",
            "При threshold=0.73 в среднем выручка: 758.871997494427\n",
            "При threshold=0.73 cтандартное отклонение выручки: 105.54003890995048\n",
            "При threshold=0.74 в среднем выручка: 680.9293224243415\n",
            "При threshold=0.74 cтандартное отклонение выручки: 47.10954989869656\n",
            "При threshold=0.75 в среднем выручка: 614.4954970058184\n",
            "При threshold=0.75 cтандартное отклонение выручки: 58.547692326400636\n",
            "При threshold=0.76 в среднем выручка: 559.9761459071578\n",
            "При threshold=0.76 cтандартное отклонение выручки: 91.40131870205552\n",
            "При threshold=0.77 в среднем выручка: 504.6199174951809\n",
            "При threshold=0.77 cтандартное отклонение выручки: 61.053117178407994\n",
            "При threshold=0.78 в среднем выручка: 438.07478805610964\n",
            "При threshold=0.78 cтандартное отклонение выручки: 29.460656993979605\n",
            "При threshold=0.79 в среднем выручка: 402.3170885816572\n",
            "При threshold=0.79 cтандартное отклонение выручки: 37.32995294132916\n",
            "При threshold=0.8 в среднем выручка: 380.8058346317698\n",
            "При threshold=0.8 cтандартное отклонение выручки: 53.35131442700784\n",
            "При threshold=0.81 в среднем выручка: 310.438175008397\n",
            "При threshold=0.81 cтандартное отклонение выручки: 35.40447043552535\n",
            "При threshold=0.8200000000000001 в среднем выручка: 315.2600943299147\n",
            "При threshold=0.8200000000000001 cтандартное отклонение выручки: 38.89663069394999\n",
            "При threshold=0.8300000000000001 в среднем выручка: 249.27631415673554\n",
            "При threshold=0.8300000000000001 cтандартное отклонение выручки: 43.238848060065926\n",
            "При threshold=0.84 в среднем выручка: 212.63188411039664\n",
            "При threshold=0.84 cтандартное отклонение выручки: 35.408205327136955\n",
            "При threshold=0.85 в среднем выручка: 164.49890850685202\n",
            "При threshold=0.85 cтандартное отклонение выручки: 25.59819833855118\n",
            "При threshold=0.86 в среднем выручка: 97.65391604290123\n",
            "При threshold=0.86 cтандартное отклонение выручки: 29.524279598109896\n",
            "При threshold=0.87 в среднем выручка: 88.4376466397315\n",
            "При threshold=0.87 cтандартное отклонение выручки: 22.757038380009124\n",
            "При threshold=0.88 в среднем выручка: 48.966992511825765\n",
            "При threshold=0.88 cтандартное отклонение выручки: 10.349326204884656\n",
            "При threshold=0.89 в среднем выручка: 15.055314563876868\n",
            "При threshold=0.89 cтандартное отклонение выручки: 10.020454338942965\n",
            "При threshold=0.9 в среднем выручка: 0.29839179293317103\n",
            "При threshold=0.9 cтандартное отклонение выручки: 0.5967835858663421\n",
            "При threshold=0.91 в среднем выручка: 0.0\n",
            "При threshold=0.91 cтандартное отклонение выручки: 0.0\n",
            "При threshold=0.92 в среднем выручка: 0.0\n",
            "При threshold=0.92 cтандартное отклонение выручки: 0.0\n",
            "При threshold=0.93 в среднем выручка: 0.0\n",
            "При threshold=0.93 cтандартное отклонение выручки: 0.0\n",
            "При threshold=0.9400000000000001 в среднем выручка: 0.0\n",
            "При threshold=0.9400000000000001 cтандартное отклонение выручки: 0.0\n",
            "При threshold=0.9500000000000001 в среднем выручка: 0.0\n",
            "При threshold=0.9500000000000001 cтандартное отклонение выручки: 0.0\n",
            "При threshold=0.96 в среднем выручка: 0.0\n",
            "При threshold=0.96 cтандартное отклонение выручки: 0.0\n",
            "При threshold=0.97 в среднем выручка: 0.0\n",
            "При threshold=0.97 cтандартное отклонение выручки: 0.0\n",
            "При threshold=0.98 в среднем выручка: 0.0\n",
            "При threshold=0.98 cтандартное отклонение выручки: 0.0\n",
            "При threshold=0.99 в среднем выручка: 0.0\n",
            "При threshold=0.99 cтандартное отклонение выручки: 0.0\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "best_c=0.12, best_metric=4607.292898590006\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(0.12, 4607.292898590006)"
            ]
          },
          "metadata": {},
          "execution_count": 86
        }
      ],
      "source": [
        "trans_X = column_transformer.fit_transform(X)\n",
        "\n",
        "def bin_threshold_search(verbose=True):\n",
        "    kf = KFold(n_splits=5, shuffle=True, random_state=500)\n",
        "    best_threshold = 0\n",
        "    best_metric = -1e6\n",
        "    thresholds = []\n",
        "    revs = []\n",
        "    stds = []\n",
        "    for threshold in tqdm(np.arange(0, 1, 0.01)):\n",
        "        expenses, earnings = [], []\n",
        "        for train_index, test_index in kf.split(X):\n",
        "            model = LogisticRegression(max_iter=10000, C=3)\n",
        "            model.fit(trans_X[train_index], y[train_index])\n",
        "            fold_predicts = model.predict_proba(trans_X[test_index])[:, 1]\n",
        "            fold_predicts = (fold_predicts >= threshold).astype(np.int32)\n",
        "            expenses.append(fold_predicts.sum())\n",
        "            payed_clients = y[test_index][fold_predicts == 1]\n",
        "            earnings.append((np.random.uniform(20, size=payed_clients.shape[0]) * payed_clients).sum())\n",
        "        earnings = np.array(earnings)\n",
        "        expenses = np.array(expenses)\n",
        "        revenue = earnings - expenses\n",
        "        revenue_metric = revenue.mean()\n",
        "        if revenue_metric > best_metric:\n",
        "            best_metric = revenue_metric\n",
        "            best_threshold = threshold\n",
        "        if verbose:\n",
        "            print(f\"При threshold={threshold} в среднем выручка:\", np.mean(revenue))\n",
        "            print(f\"При threshold={threshold} cтандартное отклонение выручки:\", np.std(revenue))\n",
        "\n",
        "        thresholds.append(threshold)\n",
        "        revs.append(revenue_metric)\n",
        "        stds.append(np.std(revenue))\n",
        "\n",
        "    plt.figure(figsize=(15, 10))\n",
        "    plt.errorbar(thresholds, revs, stds)\n",
        "    plt.xscale('linear')\n",
        "    plt.show()\n",
        "    print(f\"best_c={best_threshold}, best_metric={best_metric}\")\n",
        "    return best_threshold, best_metric\n",
        "bin_threshold_search()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fLL7uqb2P75m"
      },
      "source": [
        "Постройте график зависимости прибыли от порога бинаризации, также отметьте на нем стандартные отклонения. Выделите наилучший порог.\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pjw2DImXXoFx"
      },
      "source": [
        "__Вопрос:__ Замечаете ли вы какую-то закономерность? Для правильного ответа на этот вопрос попробуйте запустить несколько раз и задумайтесь, почему порог получается в какой-то конкретной области?"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WfnHUQ7sXouL"
      },
      "source": [
        "__Ответ:__ Видно, что прибыль до какого то момента растет, а зачем постепенно падает и сходится до нуля. Понятно, что обзванивать всех подряд не очень выгодно, но и не звонить никому еще более невыгодно, так как прибыль падает до нуля. Оптимальным порог находится в районе 0.11 для максимизации прибыли (так происходит потому что ожидаемая прибыль с человека в несколько раз превосходит затраты на оплату звонка"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "i7Ksl7b9P75m"
      },
      "source": [
        "Каковы значения precision и recall на выбранном пороге? Оцените по кросс-валидации. Также вычислите стандартное отклонение."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 87,
      "metadata": {
        "id": "i0fwjmYGP75n",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7ce387ac-11d7-4481-d016-eb38c8ba626b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Precision mean: 0.3372519641154056 Precision std: 0.012390415739275027\n",
            "Recall mean: 0.6420518700077229 Recall std: 0.02078450221130864\n"
          ]
        }
      ],
      "source": [
        "from sklearn.metrics import precision_score, recall_score\n",
        "\n",
        "\n",
        "trans_X = column_transformer.fit_transform(X)\n",
        "best_threshold = 0.11\n",
        "precisions = []\n",
        "recalls = []\n",
        "for train_index, test_index in kf.split(trans_X):\n",
        "    model = LogisticRegression(max_iter=10000, C=3)\n",
        "    model.fit(trans_X[train_index], y[train_index])\n",
        "    fold_predicts = model.predict_proba(trans_X[test_index])[:, 1]\n",
        "    fold_predicts = (fold_predicts >= best_threshold).astype(np.int8)\n",
        "    precisions.append(precision_score(y[test_index], fold_predicts))\n",
        "    recalls.append(recall_score(y[test_index], fold_predicts))\n",
        "\n",
        "print(\"Precision mean:\", np.mean(precisions), \"Precision std:\", np.std(precisions))\n",
        "print(\"Recall mean:\", np.mean(recalls), \"Recall std:\", np.std(recalls))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "H4xmz6caP75n"
      },
      "source": [
        "Можно пронаблюдать, что наша модель склоняется к более высокому recall. Попробуйте оценить качество модели с помощью `PR-AUC` в зоне recall $\\geq$ 0.5. Сделайте это следующим образом:\n",
        "- выберите только те пороги, на которых достигается необходимый recall,\n",
        "- затем интерпретируйте отсеченный в единичном квадрате прямоугольник как новый единичный квадрат,\n",
        "- посчитайте площадь под отсеченной кривой"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 88,
      "metadata": {
        "id": "lbYWnxfgP75n",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "66a0c46a-a65e-4d42-c320-336a5b3a9c03"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "for threshold=0.0 recall=1.0\n",
            "for threshold=0.01 recall=1.0\n",
            "for threshold=0.02 recall=0.9961633050757186\n",
            "for threshold=0.03 recall=0.9720453373640183\n",
            "for threshold=0.04 recall=0.9201322111479223\n",
            "for threshold=0.05 recall=0.8589128867617845\n",
            "for threshold=0.06 recall=0.795115952370296\n",
            "for threshold=0.07 recall=0.7418165873406679\n",
            "for threshold=0.08 recall=0.7044542759043468\n",
            "for threshold=0.09 recall=0.6762287271549725\n",
            "for threshold=0.1 recall=0.6592514426281075\n",
            "for threshold=0.11 recall=0.6420518700077229\n",
            "for threshold=0.12 recall=0.6255071511454785\n",
            "for threshold=0.13 recall=0.6137610242385871\n",
            "for threshold=0.14 recall=0.607525735982177\n",
            "for threshold=0.15 recall=0.6008584261813642\n",
            "for threshold=0.16 recall=0.5969721991691541\n",
            "for threshold=0.17 recall=0.590365985968709\n",
            "for threshold=0.18 recall=0.5828864557728636\n",
            "for threshold=0.19 recall=0.5774493655161385\n",
            "for threshold=0.2 recall=0.565992781322557\n",
            "for threshold=0.21 recall=0.5516269316994359\n",
            "for threshold=0.22 recall=0.5392945867138541\n",
            "for threshold=0.23 recall=0.5268429939887785\n",
            "for threshold=0.24 recall=0.5135084285804479\n",
            "for threshold=0.25 recall=0.49699140733716984\n",
            "highest threshold for recall 0.5: 0.15\n"
          ]
        }
      ],
      "source": [
        "precisions = []\n",
        "recalls = []\n",
        "trans_X = column_transformer.fit_transform(X)\n",
        "\n",
        "for threshold in np.arange(0, 1, 0.01):\n",
        "    cur_precisions = []\n",
        "    cur_recalls = []\n",
        "    for train_index, test_index in kf.split(trans_X):\n",
        "        model = LogisticRegression(max_iter=10000, C=3)\n",
        "        model.fit(trans_X[train_index], y[train_index])\n",
        "        fold_predicts = model.predict_proba(trans_X[test_index])[:, 1]\n",
        "        fold_predicts = (fold_predicts >= threshold).astype(np.int8)\n",
        "        cur_precisions.append(precision_score(y[test_index], fold_predicts))\n",
        "        cur_recalls.append(recall_score(y[test_index], fold_predicts))\n",
        "\n",
        "    precisions.append(np.mean(cur_precisions))\n",
        "    recalls.append(np.mean(cur_recalls))\n",
        "    print(f\"for threshold={threshold} recall={recalls[-1]}\")\n",
        "    if recalls[-1] < 0.5:\n",
        "        print(\"highest threshold for recall 0.5:\", threshold - 0.1)\n",
        "        break"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ACYk14eyP75n"
      },
      "source": [
        "__Бонус (0.01 балла):__ что вы кушали в день сдачи данного ДЗ на завтрак?\n",
        "\n",
        "__Ответ:__ Цыплёнок тоя ям Братья Караваевы, с пастой фузилли"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.7"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "aa8d92397b2e4732b5746a4558e46d8e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_4d5d9d3cdfd140b7922cf0953483fd7b",
              "IPY_MODEL_e8409707cdf54665a9eae9608c933b61",
              "IPY_MODEL_a2d6f3162e9e451eaa05091c203d13c3"
            ],
            "layout": "IPY_MODEL_31de2dde596b4565a6ec0e547b628c81"
          }
        },
        "4d5d9d3cdfd140b7922cf0953483fd7b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_5501a3ce418946f795e95b494d2046fa",
            "placeholder": "​",
            "style": "IPY_MODEL_c75a8cdd1c264e9f823fd412f4202e4c",
            "value": "100%"
          }
        },
        "e8409707cdf54665a9eae9608c933b61": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_a6cd3fae39004081a9d97b335bb3e0f5",
            "max": 100,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_7a7064b57a854df7af401e7b4e69a07e",
            "value": 100
          }
        },
        "a2d6f3162e9e451eaa05091c203d13c3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_d1833cb61faf4e62958e027a302695d6",
            "placeholder": "​",
            "style": "IPY_MODEL_e19482caa3b34133b01175669bf8c2f2",
            "value": " 100/100 [24:15&lt;00:00, 14.72s/it]"
          }
        },
        "31de2dde596b4565a6ec0e547b628c81": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "5501a3ce418946f795e95b494d2046fa": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "c75a8cdd1c264e9f823fd412f4202e4c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "a6cd3fae39004081a9d97b335bb3e0f5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "7a7064b57a854df7af401e7b4e69a07e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "d1833cb61faf4e62958e027a302695d6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e19482caa3b34133b01175669bf8c2f2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}